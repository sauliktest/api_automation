{
	"info": {
		"_postman_id": "a2519e41-f0a1-428d-b616-0ea4a5e37dbe",
		"name": "Florida_Release_Notes_Master",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4827236"
	},
	"item": [
		{
			"name": "Camada de Integração - CI",
			"item": [
				{
					"name": "Cadastro",
					"item": [
						{
							"name": "Propostas",
							"item": [
								{
									"name": "HEIM143 - POST: /propostas/",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Obter a resposta em formato JSON\r",
													"var responseJson = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//setTimeout(function () {\r",
													"   // pm.sendRequest(\"A resposta é valida e deve ter um corpo\");\r",
													"//}, 5000);\r",
													"\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.ok;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"const schema = {\r",
													"    \"type\": \"object\",\r",
													"    \"default\": {},\r",
													"    \"title\": \"Root Schema\",\r",
													"    \"required\": [\r",
													"        \"codRetorno\",\r",
													"        \"descricaoRetorno\",\r",
													"        \"solicitacao\",\r",
													"        \"canal\"\r",
													"    ],\r",
													"    \"properties\": {\r",
													"        \"codRetorno\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The codRetorno Schema\",\r",
													"            \"examples\": [\r",
													"                200\r",
													"            ]\r",
													"        },\r",
													"        \"descricaoRetorno\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The descricaoRetorno Schema\",\r",
													"            \"examples\": [\r",
													"                \"Solicitação cadastrada com sucesso\"\r",
													"            ]\r",
													"        },\r",
													"        \"solicitacao\": {\r",
													"            \"type\": \"object\",\r",
													"            \"default\": {},\r",
													"            \"title\": \"The solicitacao Schema\",\r",
													"            \"required\": [\r",
													"                \"id\",\r",
													"                \"dataSolicitacao\",\r",
													"                \"nome\",\r",
													"                \"cpf\",\r",
													"                \"email\",\r",
													"                \"ddd\",\r",
													"                \"telefone\",\r",
													"                \"dataNascimento\",\r",
													"                \"dataAtualizacao\",\r",
													"                \"dataValidade\",\r",
													"                \"idProduto\",\r",
													"                \"statusSolicitacao\"\r",
													"            ],\r",
													"            \"properties\": {\r",
													"                \"id\": {\r",
													"                    \"type\": \"integer\",\r",
													"                    \"default\": 0,\r",
													"                    \"title\": \"The id Schema\",\r",
													"                    \"examples\": [\r",
													"                        0\r",
													"                    ]\r",
													"                },\r",
													"                \"dataSolicitacao\": {\r",
													"                    \"type\": \"string\",\r",
													"                    \"default\": \"\",\r",
													"                    \"title\": \"The dataSolicitacao Schema\",\r",
													"                    \"examples\": [\r",
													"                        \"2023-05-15 12:59:00.933\"\r",
													"                    ]\r",
													"                },\r",
													"                \"nome\": {\r",
													"                    \"type\": \"string\",\r",
													"                    \"default\": \"\",\r",
													"                    \"title\": \"The nome Schema\",\r",
													"                    \"examples\": [\r",
													"                        \"Julia Teste\"\r",
													"                    ]\r",
													"                },\r",
													"                \"cpf\": {\r",
													"                    \"type\": \"string\",\r",
													"                    \"default\": \"\",\r",
													"                    \"title\": \"The cpf Schema\",\r",
													"                    \"examples\": [\r",
													"                        \"33048021930\"\r",
													"                    ]\r",
													"                },\r",
													"                \"email\": {\r",
													"                    \"type\": \"string\",\r",
													"                    \"default\": \"\",\r",
													"                    \"title\": \"The email Schema\",\r",
													"                    \"examples\": [\r",
													"                        \"email@email.com\"\r",
													"                    ]\r",
													"                },\r",
													"                \"ddd\": {\r",
													"                    \"type\": \"integer\",\r",
													"                    \"default\": 0,\r",
													"                    \"title\": \"The ddd Schema\",\r",
													"                    \"examples\": [\r",
													"                        21\r",
													"                    ]\r",
													"                },\r",
													"                \"telefone\": {\r",
													"                    \"type\": \"string\",\r",
													"                    \"default\": \"\",\r",
													"                    \"title\": \"The telefone Schema\",\r",
													"                    \"examples\": [\r",
													"                        \"991882566\"\r",
													"                    ]\r",
													"                },\r",
													"                \"dataNascimento\": {\r",
													"                    \"type\": \"string\",\r",
													"                    \"default\": \"\",\r",
													"                    \"title\": \"The dataNascimento Schema\",\r",
													"                    \"examples\": [\r",
													"                        \"1995-05-01\"\r",
													"                    ]\r",
													"                },\r",
													"                \"dataAtualizacao\": {\r",
													"                    \"type\": \"string\",\r",
													"                    \"default\": \"\",\r",
													"                    \"title\": \"The dataAtualizacao Schema\",\r",
													"                    \"examples\": [\r",
													"                        \"2023-05-15 12:59:00.933\"\r",
													"                    ]\r",
													"                },\r",
													"                \"dataValidade\": {\r",
													"                    \"type\": \"string\",\r",
													"                    \"default\": \"\",\r",
													"                    \"title\": \"The dataValidade Schema\",\r",
													"                    \"examples\": [\r",
													"                        \"2023-05-15\"\r",
													"                    ]\r",
													"                },\r",
													"                \"idProduto\": {\r",
													"                    \"type\": \"integer\",\r",
													"                    \"default\": 0,\r",
													"                    \"title\": \"The idProduto Schema\",\r",
													"                    \"examples\": [\r",
													"                        1\r",
													"                    ]\r",
													"                },\r",
													"                \"statusSolicitacao\": {\r",
													"                    \"type\": \"object\",\r",
													"                    \"default\": {},\r",
													"                    \"title\": \"The statusSolicitacao Schema\",\r",
													"                    \"required\": [\r",
													"                        \"id\",\r",
													"                        \"descricao\",\r",
													"                        \"fimSolicitacao\"\r",
													"                    ],\r",
													"                    \"properties\": {\r",
													"                        \"id\": {\r",
													"                            \"type\": \"integer\",\r",
													"                            \"default\": 0,\r",
													"                            \"title\": \"The id Schema\",\r",
													"                            \"examples\": [\r",
													"                                0\r",
													"                            ]\r",
													"                        },\r",
													"                        \"descricao\": {\r",
													"                            \"type\": \"string\",\r",
													"                            \"default\": \"\",\r",
													"                            \"title\": \"The descricao Schema\",\r",
													"                            \"examples\": [\r",
													"                                \"Aprovado Neurotech\"\r",
													"                            ]\r",
													"                        },\r",
													"                        \"fimSolicitacao\": {\r",
													"                            \"type\": \"boolean\",\r",
													"                            \"default\": false,\r",
													"                            \"title\": \"The fimSolicitacao Schema\",\r",
													"                            \"examples\": [\r",
													"                                false\r",
													"                            ]\r",
													"                        }\r",
													"                    },\r",
													"                    \"examples\": [{\r",
													"                        \"id\": 0,\r",
													"                        \"descricao\": \"Aprovado Neurotech\",\r",
													"                        \"fimSolicitacao\": false\r",
													"                    }]\r",
													"                }\r",
													"            },\r",
													"            \"examples\": [{\r",
													"                \"id\": 0,\r",
													"                \"dataSolicitacao\": \"2023-05-15 12:59:00.933\",\r",
													"                \"nome\": \"Julia Teste\",\r",
													"                \"cpf\": \"33048021930\",\r",
													"                \"email\": \"email@email.com\",\r",
													"                \"ddd\": 21,\r",
													"                \"telefone\": \"991882566\",\r",
													"                \"dataNascimento\": \"1995-05-01\",\r",
													"                \"dataAtualizacao\": \"2023-05-15 12:59:00.933\",\r",
													"                \"dataValidade\": \"2023-05-15\",\r",
													"                \"idProduto\": 1,\r",
													"                \"statusSolicitacao\": {\r",
													"                    \"id\": 0,\r",
													"                    \"descricao\": \"Aprovado Neurotech\",\r",
													"                    \"fimSolicitacao\": false\r",
													"                }\r",
													"            }]\r",
													"        },\r",
													"        \"canal\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The canal Schema\",\r",
													"            \"examples\": [\r",
													"                \"CDT_TABLET\"\r",
													"            ]\r",
													"        }\r",
													"    },\r",
													"    \"examples\": [{\r",
													"        \"codRetorno\": 200,\r",
													"        \"descricaoRetorno\": \"Solicitação cadastrada com sucesso\",\r",
													"        \"solicitacao\": {\r",
													"            \"id\": 0,\r",
													"            \"dataSolicitacao\": \"2023-05-15 12:59:00.933\",\r",
													"            \"nome\": \"Julia Teste\",\r",
													"            \"cpf\": \"33048021930\",\r",
													"            \"email\": \"email@email.com\",\r",
													"            \"ddd\": 21,\r",
													"            \"telefone\": \"991882566\",\r",
													"            \"dataNascimento\": \"1995-05-01\",\r",
													"            \"dataAtualizacao\": \"2023-05-15 12:59:00.933\",\r",
													"            \"dataValidade\": \"2023-05-15\",\r",
													"            \"idProduto\": 1,\r",
													"            \"statusSolicitacao\": {\r",
													"                \"id\": 0,\r",
													"                \"descricao\": \"Aprovado Neurotech\",\r",
													"                \"fimSolicitacao\": false\r",
													"            }\r",
													"        },\r",
													"        \"canal\": \"CDT_TABLET\"\r",
													"    }]\r",
													"};\r",
													"\r",
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar se CPF gerado = response\", function () {\r",
													"    var responseJson = pm.response.json();\r",
													"    var cpfNoResponse = responseJson.solicitacao.cpf;\r",
													"    var cpfGlobal = pm.globals.get(\"generatedCPF\");\r",
													"    pm.expect(cpfNoResponse).to.eql(cpfGlobal);\r",
													"});\r",
													"\r",
													"// Verificar se a mensagem está correta\r",
													"pm.test(\"Validar mensagem do campo descricaoRetorno\", function () {\r",
													"    var descricaoRetorno = responseJson.descricaoRetorno; \r",
													"    pm.expect(descricaoRetorno).to.equal(\"Solicitação cadastrada com sucesso\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Função para gerar um número aleatório entre dois valores\r",
													"function getRandomNumber(min, max) {\r",
													"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
													"}\r",
													"\r",
													"// Função para gerar um CPF válido\r",
													"function generateCPF() {\r",
													"    var n1 = getRandomNumber(0, 9);\r",
													"    var n2 = getRandomNumber(0, 9);\r",
													"    var n3 = getRandomNumber(0, 9);\r",
													"    var n4 = getRandomNumber(0, 9);\r",
													"    var n5 = getRandomNumber(0, 9);\r",
													"    var n6 = getRandomNumber(0, 9);\r",
													"    var n7 = getRandomNumber(0, 9);\r",
													"    var n8 = getRandomNumber(0, 9);\r",
													"    var n9 = getRandomNumber(0, 9);\r",
													"    var d1 = n9 * 2 + n8 * 3 + n7 * 4 + n6 * 5 + n5 * 6 + n4 * 7 + n3 * 8 + n2 * 9 + n1 * 10;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n9 * 3 + n8 * 4 + n7 * 5 + n6 * 6 + n5 * 7 + n4 * 8 + n3 * 9 + n2 * 10 + n1 * 11;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n1 + n2 + n3 + n4 + n5 + n6 + n7 + n8 + n9 + d1 + d2;\r",
													"}\r",
													"\r",
													"// Gerar CPF aleatório\r",
													"var randomCPF = generateCPF();\r",
													"\r",
													"// Definir CPF gerado como variável global convertida em string\r",
													"pm.globals.set(\"generatedCPF\", randomCPF.toString());\r",
													"\r",
													"console.log(\"CPF gerado: \" + randomCPF);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Ana Souza\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-05-01\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\": 1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\": 21,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 12,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/idproduto_não _cadastrado(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Obter a resposta em formato JSON\r",
													"var responseJson = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar mensagem de retorno\r",
													"pm.test(\"Validar mensagem de retorno\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0].codRetorno).to.equal(400);\r",
													"    pm.expect(jsonData[0].source).to.equal(\"MIDDLEWARE\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Função para gerar um número aleatório entre dois valores\r",
													"function getRandomNumber(min, max) {\r",
													"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
													"}\r",
													"\r",
													"// Função para gerar um CPF válido\r",
													"function generateCPF() {\r",
													"    var n1 = getRandomNumber(0, 9);\r",
													"    var n2 = getRandomNumber(0, 9);\r",
													"    var n3 = getRandomNumber(0, 9);\r",
													"    var n4 = getRandomNumber(0, 9);\r",
													"    var n5 = getRandomNumber(0, 9);\r",
													"    var n6 = getRandomNumber(0, 9);\r",
													"    var n7 = getRandomNumber(0, 9);\r",
													"    var n8 = getRandomNumber(0, 9);\r",
													"    var n9 = getRandomNumber(0, 9);\r",
													"    var d1 = n9 * 2 + n8 * 3 + n7 * 4 + n6 * 5 + n5 * 6 + n4 * 7 + n3 * 8 + n2 * 9 + n1 * 10;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n9 * 3 + n8 * 4 + n7 * 5 + n6 * 6 + n5 * 7 + n4 * 8 + n3 * 9 + n2 * 10 + n1 * 11;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n1 + n2 + n3 + n4 + n5 + n6 + n7 + n8 + n9 + d1 + d2;\r",
													"}\r",
													"\r",
													"// Gerar CPF aleatório\r",
													"var randomCPF = generateCPF();\r",
													"\r",
													"// Definir CPF gerado como variável global convertida em string\r",
													"pm.globals.set(\"generatedCPF\", randomCPF.toString());\r",
													"\r",
													"console.log(\"CPF gerado: \" + randomCPF);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Ana Souza\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-05-01\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\": 1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\": 21,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/orgao_expeditor_identidade_tam_>_6(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Obter a resposta em formato JSON\r",
													"var responseJson = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"\r",
													"// Validar mensagem de retorno\r",
													"pm.test(\"Validar mensagem de retorno\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0].codRetorno).to.equal(400);\r",
													"    pm.expect(jsonData[0].source).to.equal(\"MIDDLEWARE\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Função para gerar um número aleatório entre dois valores\r",
													"function getRandomNumber(min, max) {\r",
													"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
													"}\r",
													"\r",
													"// Função para gerar um CPF válido\r",
													"function generateCPF() {\r",
													"    var n1 = getRandomNumber(0, 9);\r",
													"    var n2 = getRandomNumber(0, 9);\r",
													"    var n3 = getRandomNumber(0, 9);\r",
													"    var n4 = getRandomNumber(0, 9);\r",
													"    var n5 = getRandomNumber(0, 9);\r",
													"    var n6 = getRandomNumber(0, 9);\r",
													"    var n7 = getRandomNumber(0, 9);\r",
													"    var n8 = getRandomNumber(0, 9);\r",
													"    var n9 = getRandomNumber(0, 9);\r",
													"    var d1 = n9 * 2 + n8 * 3 + n7 * 4 + n6 * 5 + n5 * 6 + n4 * 7 + n3 * 8 + n2 * 9 + n1 * 10;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n9 * 3 + n8 * 4 + n7 * 5 + n6 * 6 + n5 * 7 + n4 * 8 + n3 * 9 + n2 * 10 + n1 * 11;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n1 + n2 + n3 + n4 + n5 + n6 + n7 + n8 + n9 + d1 + d2;\r",
													"}\r",
													"\r",
													"// Gerar CPF aleatório\r",
													"var randomCPF = generateCPF();\r",
													"\r",
													"// Definir CPF gerado como variável global convertida em string\r",
													"pm.globals.set(\"generatedCPF\", randomCPF.toString());\r",
													"\r",
													"console.log(\"CPF gerado: \" + randomCPF);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Ana Souza\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-05-01\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\": 1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"yyyyyyy\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\": 21,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/sem_cpf(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0]).to.have.property(\"erros\");\r",
													"\r",
													"    var primeiroErro = jsonData[0].erros[0];\r",
													"    pm.expect(primeiroErro).to.have.property(\"mensagem\").that.is.eql(\"\\\"cpf\\\" is not allowed to be empty\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Ana Souza\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-05-01\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\": 1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\": 21,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/cpf_incompleto(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"O \\\"cpf\\\" informado não é valido\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"711.344.\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Ana Souza\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-05-01\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\": 1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\": 21,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/cpf_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"O \\\"cpf\\\" informado não é valido\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"abcd\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Ana Souza\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-05-01\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\": 1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\": 21,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/cpf_tam_sup_limite(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"O \\\"cpf\\\" informado não é valido\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"615.151.94264444444\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Ana Souza\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-05-01\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\": 1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\": 21,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/sem_nome(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"\\\"nome\\\" is not allowed to be empty\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"\",\n    \"nomeMae\": \"Ana Souza\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-05-01\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\": 1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\": 21,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/nome_somente_numérico(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"\\\"nome\\\" is not allowed to be empty\");\r",
													"});\r",
													"\r",
													"pm.test(\"Validar campo nome\", function () {\r",
													"    var nome = pm.response.json().nome;\r",
													"    var regex = /^[a-zA-Z\\s]+$/;\r",
													"\r",
													"    pm.expect(regex.test(nome)).to.be.true;\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"4444444444444\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-05-01\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\": 1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\": 21,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/sem_email(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Verificar se o campo \"email\" não está vazio\r",
													"pm.test(\"Campo 'email' não pode ser vazio\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.email).to.not.equal(\"\");\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"\\\"email\\\" is not allowed to be empty\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-05-01\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\": 1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\": 21,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/email_invalido(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"\\\"email\\\" must be a valid email\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-05-01\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\": 1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"@email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\": 21,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/sem_dt_nasc(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal( \"\\\"dataNascimento\\\" must be in ISO 8601 date format\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\": 1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\": 21,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/dt_nasc_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal( \"\\\"dataNascimento\\\" must be in ISO 8601 date format\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"aaa/aaaa/aa\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\": 1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\": 21,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/dt_nasc_formato_invalido(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal( \"\\\"dataNascimento\\\" must be in ISO 8601 date format\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-0\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\": 1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\": 21,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/sexo_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal( \"\\\"sexo\\\" is not allowed to be empty\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-05-01\",\n    \"sexo\": \"\",\n    \"idNacionalidade\": 1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\": 21,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/sexo_numerico(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal( \"\\\"sexo\\\" with value \\\"1\\\" fails to match the required pattern: /^((M)|(F)|(O)|(N))$/\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"1\",\n    \"idNacionalidade\": 1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\": 21,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/sexo_fora_dominio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal( \"\\\"sexo\\\" with value \\\"A\\\" fails to match the required pattern: /^((M)|(F)|(O)|(N))$/\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"A\",\n    \"idNacionalidade\": 1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\": 21,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/ddd_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.expect(pm.response.text()).to.include(\"Internal Server Error\");\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Verificar se a resposta contém a mensagem de erro esperada\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).to.equal(\"Internal Server Error\");\r",
													"    pm.expect(jsonData.error.errorCode).to.equal(\"9999\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\": 00,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/ddd_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.expect(pm.response.text()).to.include(\"Internal Server Error\");\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Verificar se a resposta contém a mensagem de erro esperada\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).to.equal(\"Internal Server Error\");\r",
													"    pm.expect(jsonData.error.errorCode).to.equal(\"9999\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Função para gerar um número aleatório entre dois valores\r",
													"function getRandomNumber(min, max) {\r",
													"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
													"}\r",
													"\r",
													"// Função para gerar um CPF válido\r",
													"function generateCPF() {\r",
													"    var n1 = getRandomNumber(0, 9);\r",
													"    var n2 = getRandomNumber(0, 9);\r",
													"    var n3 = getRandomNumber(0, 9);\r",
													"    var n4 = getRandomNumber(0, 9);\r",
													"    var n5 = getRandomNumber(0, 9);\r",
													"    var n6 = getRandomNumber(0, 9);\r",
													"    var n7 = getRandomNumber(0, 9);\r",
													"    var n8 = getRandomNumber(0, 9);\r",
													"    var n9 = getRandomNumber(0, 9);\r",
													"    var d1 = n9 * 2 + n8 * 3 + n7 * 4 + n6 * 5 + n5 * 6 + n4 * 7 + n3 * 8 + n2 * 9 + n1 * 10;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n9 * 3 + n8 * 4 + n7 * 5 + n6 * 6 + n5 * 7 + n4 * 8 + n3 * 9 + n2 * 10 + n1 * 11;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n1 + n2 + n3 + n4 + n5 + n6 + n7 + n8 + n9 + d1 + d2;\r",
													"}\r",
													"\r",
													"// Gerar CPF aleatório\r",
													"var randomCPF = generateCPF();\r",
													"\r",
													"// Definir CPF gerado como variável global convertida em string\r",
													"pm.globals.set(\"generatedCPF\", randomCPF.toString());\r",
													"\r",
													"console.log(\"CPF gerado: \" + randomCPF);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\": aa,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/ddd_00(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.expect(pm.response.text()).to.include(\"Internal Server Error\");\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Verificar se a resposta contém a mensagem de erro esperada\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).to.equal(\"Internal Server Error\");\r",
													"    pm.expect(jsonData.error.errorCode).to.equal(\"9999\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Função para gerar um número aleatório entre dois valores\r",
													"function getRandomNumber(min, max) {\r",
													"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
													"}\r",
													"\r",
													"// Função para gerar um CPF válido\r",
													"function generateCPF() {\r",
													"    var n1 = getRandomNumber(0, 9);\r",
													"    var n2 = getRandomNumber(0, 9);\r",
													"    var n3 = getRandomNumber(0, 9);\r",
													"    var n4 = getRandomNumber(0, 9);\r",
													"    var n5 = getRandomNumber(0, 9);\r",
													"    var n6 = getRandomNumber(0, 9);\r",
													"    var n7 = getRandomNumber(0, 9);\r",
													"    var n8 = getRandomNumber(0, 9);\r",
													"    var n9 = getRandomNumber(0, 9);\r",
													"    var d1 = n9 * 2 + n8 * 3 + n7 * 4 + n6 * 5 + n5 * 6 + n4 * 7 + n3 * 8 + n2 * 9 + n1 * 10;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n9 * 3 + n8 * 4 + n7 * 5 + n6 * 6 + n5 * 7 + n4 * 8 + n3 * 9 + n2 * 10 + n1 * 11;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n1 + n2 + n3 + n4 + n5 + n6 + n7 + n8 + n9 + d1 + d2;\r",
													"}\r",
													"\r",
													"// Gerar CPF aleatório\r",
													"var randomCPF = generateCPF();\r",
													"\r",
													"// Definir CPF gerado como variável global convertida em string\r",
													"pm.globals.set(\"generatedCPF\", randomCPF.toString());\r",
													"\r",
													"console.log(\"CPF gerado: \" + randomCPF);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":00 ,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/ddd_<_10(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.expect(pm.response.text()).to.include(\"Internal Server Error\");\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Verificar se a resposta contém a mensagem de erro esperada\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).to.equal(\"Internal Server Error\");\r",
													"    pm.expect(jsonData.error.errorCode).to.equal(\"9999\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Função para gerar um número aleatório entre dois valores\r",
													"function getRandomNumber(min, max) {\r",
													"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
													"}\r",
													"\r",
													"// Função para gerar um CPF válido\r",
													"function generateCPF() {\r",
													"    var n1 = getRandomNumber(0, 9);\r",
													"    var n2 = getRandomNumber(0, 9);\r",
													"    var n3 = getRandomNumber(0, 9);\r",
													"    var n4 = getRandomNumber(0, 9);\r",
													"    var n5 = getRandomNumber(0, 9);\r",
													"    var n6 = getRandomNumber(0, 9);\r",
													"    var n7 = getRandomNumber(0, 9);\r",
													"    var n8 = getRandomNumber(0, 9);\r",
													"    var n9 = getRandomNumber(0, 9);\r",
													"    var d1 = n9 * 2 + n8 * 3 + n7 * 4 + n6 * 5 + n5 * 6 + n4 * 7 + n3 * 8 + n2 * 9 + n1 * 10;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n9 * 3 + n8 * 4 + n7 * 5 + n6 * 6 + n5 * 7 + n4 * 8 + n3 * 9 + n2 * 10 + n1 * 11;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n1 + n2 + n3 + n4 + n5 + n6 + n7 + n8 + n9 + d1 + d2;\r",
													"}\r",
													"\r",
													"// Gerar CPF aleatório\r",
													"var randomCPF = generateCPF();\r",
													"\r",
													"// Definir CPF gerado como variável global convertida em string\r",
													"pm.globals.set(\"generatedCPF\", randomCPF.toString());\r",
													"\r",
													"console.log(\"CPF gerado: \" + randomCPF);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":09,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/ddd_>_99(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar descrição do retorno e mensagem\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    \r",
													"    pm.expect(jsonData[0].descricaoRetorno).to.equal(\"Erro na requisição\");\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"\\\"telefones[0].ddd\\\" must be less than or equal to 99\");\r",
													"       \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Função para gerar um número aleatório entre dois valores\r",
													"function getRandomNumber(min, max) {\r",
													"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
													"}\r",
													"\r",
													"// Função para gerar um CPF válido\r",
													"function generateCPF() {\r",
													"    var n1 = getRandomNumber(0, 9);\r",
													"    var n2 = getRandomNumber(0, 9);\r",
													"    var n3 = getRandomNumber(0, 9);\r",
													"    var n4 = getRandomNumber(0, 9);\r",
													"    var n5 = getRandomNumber(0, 9);\r",
													"    var n6 = getRandomNumber(0, 9);\r",
													"    var n7 = getRandomNumber(0, 9);\r",
													"    var n8 = getRandomNumber(0, 9);\r",
													"    var n9 = getRandomNumber(0, 9);\r",
													"    var d1 = n9 * 2 + n8 * 3 + n7 * 4 + n6 * 5 + n5 * 6 + n4 * 7 + n3 * 8 + n2 * 9 + n1 * 10;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n9 * 3 + n8 * 4 + n7 * 5 + n6 * 6 + n5 * 7 + n4 * 8 + n3 * 9 + n2 * 10 + n1 * 11;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n1 + n2 + n3 + n4 + n5 + n6 + n7 + n8 + n9 + d1 + d2;\r",
													"}\r",
													"\r",
													"// Gerar CPF aleatório\r",
													"var randomCPF = generateCPF();\r",
													"\r",
													"// Definir CPF gerado como variável global convertida em string\r",
													"pm.globals.set(\"generatedCPF\", randomCPF.toString());\r",
													"\r",
													"console.log(\"CPF gerado: \" + randomCPF);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":100,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/ddd_dentro-dominio(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Obter a resposta em formato JSON\r",
													"var responseJson = pm.response.json();\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"// Verificar se a mensagem está correta\r",
													"pm.test(\"Validar mensagem do campo descricaoRetorno\", function () {\r",
													"    var descricaoRetorno = responseJson.descricaoRetorno; \r",
													"    pm.expect(descricaoRetorno).to.equal(\"Solicitação cadastrada com sucesso\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":23,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 12,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/idTipoTelefone_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.expect(pm.response.text()).to.include(\"Internal Server Error\");\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Verificar se a resposta contém a mensagem de erro esperada\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).to.equal(\"Internal Server Error\");\r",
													"    pm.expect(jsonData.error.errorCode).to.equal(\"9999\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Função para gerar um número aleatório entre dois valores\r",
													"function getRandomNumber(min, max) {\r",
													"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
													"}\r",
													"\r",
													"// Função para gerar um CPF válido\r",
													"function generateCPF() {\r",
													"    var n1 = getRandomNumber(0, 9);\r",
													"    var n2 = getRandomNumber(0, 9);\r",
													"    var n3 = getRandomNumber(0, 9);\r",
													"    var n4 = getRandomNumber(0, 9);\r",
													"    var n5 = getRandomNumber(0, 9);\r",
													"    var n6 = getRandomNumber(0, 9);\r",
													"    var n7 = getRandomNumber(0, 9);\r",
													"    var n8 = getRandomNumber(0, 9);\r",
													"    var n9 = getRandomNumber(0, 9);\r",
													"    var d1 = n9 * 2 + n8 * 3 + n7 * 4 + n6 * 5 + n5 * 6 + n4 * 7 + n3 * 8 + n2 * 9 + n1 * 10;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n9 * 3 + n8 * 4 + n7 * 5 + n6 * 6 + n5 * 7 + n4 * 8 + n3 * 9 + n2 * 10 + n1 * 11;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n1 + n2 + n3 + n4 + n5 + n6 + n7 + n8 + n9 + d1 + d2;\r",
													"}\r",
													"\r",
													"// Gerar CPF aleatório\r",
													"var randomCPF = generateCPF();\r",
													"\r",
													"// Definir CPF gerado como variável global convertida em string\r",
													"pm.globals.set(\"generatedCPF\", randomCPF.toString());\r",
													"\r",
													"console.log(\"CPF gerado: \" + randomCPF);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": ,\n        \"ddd\":11 ,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/idTipoTelefone_com_Zero(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    \r",
													"    pm.expect(jsonData[0].descricaoRetorno).to.equal(\"Erro na requisição\");\r",
													"    pm.expect(jsonData[0].erros[0].propriedade).to.equal(\"idTipoTelefone\");\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"\\\"telefones[0].idTipoTelefone\\\" must be a positive number\");\r",
													"    pm.expect(jsonData[0].erros[1].propriedade).to.equal(\"telefone\");\r",
													"    pm.expect(jsonData[0].erros[1].mensagem).to.equal(\"O número do telefone está incorreto\");\r",
													"    pm.expect(jsonData[0].erros[2].propriedade).to.equal(\"telefones\");\r",
													"    pm.expect(jsonData[0].erros[2].mensagem).to.equal(\"\\\"telefones\\\" does not contain at least one required match\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Função para gerar um número aleatório entre dois valores\r",
													"function getRandomNumber(min, max) {\r",
													"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
													"}\r",
													"\r",
													"// Função para gerar um CPF válido\r",
													"function generateCPF() {\r",
													"    var n1 = getRandomNumber(0, 9);\r",
													"    var n2 = getRandomNumber(0, 9);\r",
													"    var n3 = getRandomNumber(0, 9);\r",
													"    var n4 = getRandomNumber(0, 9);\r",
													"    var n5 = getRandomNumber(0, 9);\r",
													"    var n6 = getRandomNumber(0, 9);\r",
													"    var n7 = getRandomNumber(0, 9);\r",
													"    var n8 = getRandomNumber(0, 9);\r",
													"    var n9 = getRandomNumber(0, 9);\r",
													"    var d1 = n9 * 2 + n8 * 3 + n7 * 4 + n6 * 5 + n5 * 6 + n4 * 7 + n3 * 8 + n2 * 9 + n1 * 10;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n9 * 3 + n8 * 4 + n7 * 5 + n6 * 6 + n5 * 7 + n4 * 8 + n3 * 9 + n2 * 10 + n1 * 11;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n1 + n2 + n3 + n4 + n5 + n6 + n7 + n8 + n9 + d1 + d2;\r",
													"}\r",
													"\r",
													"// Gerar CPF aleatório\r",
													"var randomCPF = generateCPF();\r",
													"\r",
													"// Definir CPF gerado como variável global convertida em string\r",
													"pm.globals.set(\"generatedCPF\", randomCPF.toString());\r",
													"\r",
													"console.log(\"CPF gerado: \" + randomCPF);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 0,\n        \"ddd\":11 ,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/idTipoTelefone_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Função para gerar um número aleatório entre dois valores\r",
													"function getRandomNumber(min, max) {\r",
													"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
													"}\r",
													"\r",
													"// Função para gerar um CPF válido\r",
													"function generateCPF() {\r",
													"    var n1 = getRandomNumber(0, 9);\r",
													"    var n2 = getRandomNumber(0, 9);\r",
													"    var n3 = getRandomNumber(0, 9);\r",
													"    var n4 = getRandomNumber(0, 9);\r",
													"    var n5 = getRandomNumber(0, 9);\r",
													"    var n6 = getRandomNumber(0, 9);\r",
													"    var n7 = getRandomNumber(0, 9);\r",
													"    var n8 = getRandomNumber(0, 9);\r",
													"    var n9 = getRandomNumber(0, 9);\r",
													"    var d1 = n9 * 2 + n8 * 3 + n7 * 4 + n6 * 5 + n5 * 6 + n4 * 7 + n3 * 8 + n2 * 9 + n1 * 10;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n9 * 3 + n8 * 4 + n7 * 5 + n6 * 6 + n5 * 7 + n4 * 8 + n3 * 9 + n2 * 10 + n1 * 11;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n1 + n2 + n3 + n4 + n5 + n6 + n7 + n8 + n9 + d1 + d2;\r",
													"}\r",
													"\r",
													"// Gerar CPF aleatório\r",
													"var randomCPF = generateCPF();\r",
													"\r",
													"// Definir CPF gerado como variável global convertida em string\r",
													"pm.globals.set(\"generatedCPF\", randomCPF.toString());\r",
													"\r",
													"console.log(\"CPF gerado: \" + randomCPF);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": a,\n        \"ddd\":11 ,\n        \"telefone\": \"991882566\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/idTipoTelefone_fora_dominio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar as mensagens de erro\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0].descricaoRetorno).to.equal(\"Erro na requisição\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[0].propriedade).to.equal(\"telefone\");\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"O número do telefone está incorreto\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[1].propriedade).to.equal(\"telefones\");\r",
													"    pm.expect(jsonData[0].erros[1].mensagem).to.equal(\"\\\"telefones\\\" does not contain at least one required match\");\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 2,\n        \"ddd\":11,\n        \"telefone\": \"932456677\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 12,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/telefone_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar as mensagens de erro\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0].descricaoRetorno).to.equal(\"Erro na requisição\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[0].propriedade).to.equal(\"telefone\");\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"\\\"telefones[0].telefone\\\" is not allowed to be empty\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[1].propriedade).to.equal(\"telefones\");\r",
													"    pm.expect(jsonData[0].erros[1].mensagem).to.equal(\"\\\"telefones\\\" does not contain at least one required match\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11 ,\n        \"telefone\": \"\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/telefone_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0].descricaoRetorno).to.equal(\"Erro na requisição\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[0].propriedade).to.equal(\"telefoneCelular\");\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"O número do telefone celular está incorreto\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11 ,\n        \"telefone\": \"aaa\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/telefone_#_celular(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0].descricaoRetorno).to.equal(\"Erro na requisição\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[0].propriedade).to.equal(\"telefoneCelular\");\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"O número do telefone celular está incorreto\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Função para gerar um número aleatório entre dois valores\r",
													"function getRandomNumber(min, max) {\r",
													"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
													"}\r",
													"\r",
													"// Função para gerar um CPF válido\r",
													"function generateCPF() {\r",
													"    var n1 = getRandomNumber(0, 9);\r",
													"    var n2 = getRandomNumber(0, 9);\r",
													"    var n3 = getRandomNumber(0, 9);\r",
													"    var n4 = getRandomNumber(0, 9);\r",
													"    var n5 = getRandomNumber(0, 9);\r",
													"    var n6 = getRandomNumber(0, 9);\r",
													"    var n7 = getRandomNumber(0, 9);\r",
													"    var n8 = getRandomNumber(0, 9);\r",
													"    var n9 = getRandomNumber(0, 9);\r",
													"    var d1 = n9 * 2 + n8 * 3 + n7 * 4 + n6 * 5 + n5 * 6 + n4 * 7 + n3 * 8 + n2 * 9 + n1 * 10;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n9 * 3 + n8 * 4 + n7 * 5 + n6 * 6 + n5 * 7 + n4 * 8 + n3 * 9 + n2 * 10 + n1 * 11;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n1 + n2 + n3 + n4 + n5 + n6 + n7 + n8 + n9 + d1 + d2;\r",
													"}\r",
													"\r",
													"// Gerar CPF aleatório\r",
													"var randomCPF = generateCPF();\r",
													"\r",
													"// Definir CPF gerado como variável global convertida em string\r",
													"pm.globals.set(\"generatedCPF\", randomCPF.toString());\r",
													"\r",
													"console.log(\"CPF gerado: \" + randomCPF);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11 ,\n        \"telefone\": \"444444444\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/telefone_#_celular_>_permitido(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0].descricaoRetorno).to.equal(\"Erro na requisição\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[0].propriedade).to.equal(\"telefoneCelular\");\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"O número do telefone celular está incorreto\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11 ,\n        \"telefone\": \"9444444444444466666666666666666666666666677777777777777777777777\",\n        \"ramal\": \"22\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/ramal_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0].descricaoRetorno).to.equal(\"Erro na requisição\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[0].propriedade).to.equal(\"ramal\");\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"\\\"telefones[0].ramal\\\" is not allowed to be empty\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[1].propriedade).to.equal(\"telefones\");\r",
													"    pm.expect(jsonData[0].erros[1].mensagem).to.equal(\"\\\"telefones\\\" does not contain at least one required match\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11 ,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/ramal_somente_letras(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"\r",
													"// Validar a mensagem de erro\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0].descricaoRetorno).to.equal(\"Erro na requisição\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[0].propriedade).to.equal(\"ramal\");\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"\\\"telefones[0].ramal\\\" with value \\\"aa\\\" fails to match the ramal pattern\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Função para gerar um número aleatório entre dois valores\r",
													"function getRandomNumber(min, max) {\r",
													"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
													"}\r",
													"\r",
													"// Função para gerar um CPF válido\r",
													"function generateCPF() {\r",
													"    var n1 = getRandomNumber(0, 9);\r",
													"    var n2 = getRandomNumber(0, 9);\r",
													"    var n3 = getRandomNumber(0, 9);\r",
													"    var n4 = getRandomNumber(0, 9);\r",
													"    var n5 = getRandomNumber(0, 9);\r",
													"    var n6 = getRandomNumber(0, 9);\r",
													"    var n7 = getRandomNumber(0, 9);\r",
													"    var n8 = getRandomNumber(0, 9);\r",
													"    var n9 = getRandomNumber(0, 9);\r",
													"    var d1 = n9 * 2 + n8 * 3 + n7 * 4 + n6 * 5 + n5 * 6 + n4 * 7 + n3 * 8 + n2 * 9 + n1 * 10;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n9 * 3 + n8 * 4 + n7 * 5 + n6 * 6 + n5 * 7 + n4 * 8 + n3 * 9 + n2 * 10 + n1 * 11;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n1 + n2 + n3 + n4 + n5 + n6 + n7 + n8 + n9 + d1 + d2;\r",
													"}\r",
													"\r",
													"// Gerar CPF aleatório\r",
													"var randomCPF = generateCPF();\r",
													"\r",
													"// Definir CPF gerado como variável global convertida em string\r",
													"pm.globals.set(\"generatedCPF\", randomCPF.toString());\r",
													"\r",
													"console.log(\"CPF gerado: \" + randomCPF);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11 ,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"aa\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/ramal_tam>_4(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar a mensagem de erro\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0].descricaoRetorno).to.equal(\"Erro na requisição\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[0].propriedade).to.equal(\"ramal\");\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"\\\"telefones[0].ramal\\\" with value \\\"18888\\\" fails to match the ramal pattern\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11 ,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"18888\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 12,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/ramal_somente_zero(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\": 1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 12,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/valorRenda_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.expect(pm.response.text()).to.include(\"Internal Server Error\");\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Verificar se a resposta contém a mensagem de erro esperada\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).to.equal(\"Internal Server Error\");\r",
													"    pm.expect(jsonData.error.errorCode).to.equal(\"9999\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/valorRenda_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.expect(pm.response.text()).to.include(\"Internal Server Error\");\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Verificar se a resposta contém a mensagem de erro esperada\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).to.equal(\"Internal Server Error\");\r",
													"    pm.expect(jsonData.error.errorCode).to.equal(\"9999\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":aa,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/logradouro_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar as mensagens de erro\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0].descricaoRetorno).to.equal(\"Erro na requisição\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[0].propriedade).to.equal(\"logradouro\");\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"\\\"enderecos[0].logradouro\\\" is not allowed to be empty\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[1].propriedade).to.equal(\"enderecos\");\r",
													"    pm.expect(jsonData[0].erros[1].mensagem).to.equal(\"\\\"enderecos\\\" does not contain at least one required match\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"122\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/bairro_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar as mensagens de erro\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0].descricaoRetorno).to.equal(\"Erro na requisição\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[0].propriedade).to.equal(\"numero\");\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"\\\"enderecos[0].numero\\\" must be a number\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[1].propriedade).to.equal(\"enderecos\");\r",
													"    pm.expect(jsonData[0].erros[1].mensagem).to.equal(\"\\\"enderecos\\\" does not contain at least one required match\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/numero_endereco_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar as mensagens de erro\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0].descricaoRetorno).to.equal(\"Erro na requisição\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[0].propriedade).to.equal(\"numero\");\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"\\\"enderecos[0].numero\\\" must be a number\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[1].propriedade).to.equal(\"enderecos\");\r",
													"    pm.expect(jsonData[0].erros[1].mensagem).to.equal(\"\\\"enderecos\\\" does not contain at least one required match\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/numero_endereco_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar as mensagens de erro\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0].descricaoRetorno).to.equal(\"Erro na requisição\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[0].propriedade).to.equal(\"numero\");\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"\\\"enderecos[0].numero\\\" must be a number\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[1].propriedade).to.equal(\"enderecos\");\r",
													"    pm.expect(jsonData[0].erros[1].mensagem).to.equal(\"\\\"enderecos\\\" does not contain at least one required match\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"aa\",\n        \"cep\": \"02266000\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/CEP_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar as mensagens de erro\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0].descricaoRetorno).to.equal(\"Erro na requisição\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[0].propriedade).to.equal(\"cep\");\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"\\\"enderecos[0].cep\\\" is not allowed to be empty\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[1].propriedade).to.equal(\"enderecos\");\r",
													"    pm.expect(jsonData[0].erros[1].mensagem).to.equal(\"\\\"enderecos\\\" does not contain at least one required match\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/CEP_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar as mensagens de erro\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0].descricaoRetorno).to.equal(\"Erro na requisição\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[0].propriedade).to.equal(\"cep\");\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"\\\"enderecos[0].cep\\\" with value \\\"aaa\\\" fails to match the cep pattern\");\r",
													"    \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"aaa\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/CEP_letra_numero(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar as mensagens de erro\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0].descricaoRetorno).to.equal(\"Erro na requisição\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[0].propriedade).to.equal(\"cep\");\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"\\\"enderecos[0].cep\\\" with value \\\"222a2222\\\" fails to match the cep pattern\");\r",
													"    \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"222a2222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/CEP_tam_superior(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar as mensagens de erro\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0].descricaoRetorno).to.equal(\"Erro na requisição\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[0].propriedade).to.equal(\"cep\");\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"\\\"enderecos[0].cep\\\" with value \\\"222222222\\\" fails to match the cep pattern\");\r",
													"    \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"222222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/cidade_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar as mensagens de erro\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0].descricaoRetorno).to.equal(\"Erro na requisição\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[0].propriedade).to.equal(\"cidade\");\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"\\\"enderecos[0].cidade\\\" is not allowed to be empty\");\r",
													"    \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"22222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/uf_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar as mensagens de erro\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0].descricaoRetorno).to.equal(\"Erro na requisição\");\r",
													"\r",
													"    pm.expect(jsonData[0].erros[0].propriedade).to.equal(\"uf\");\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"\\\"enderecos[0].uf\\\" is not allowed to be empty\");\r",
													"    \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"22222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"\",\n        \"pais\": \"Brasil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 10,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/pais_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0].erros[0].propriedade).to.equal(\"pais\");\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"\\\"enderecos[0].pais\\\" is not allowed to be empty\");\r",
													"\r",
													"  });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"22222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 12,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 30,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/id_produto_zero(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar mensagem de erro\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0].erros[0].propriedade).to.equal(\"idProduto\");\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"\\\"conta.idProduto\\\" must be a positive number\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"22222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brazil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 0,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 30,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/id_produto_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar mensagem de erro\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"   pm.expect(jsonData.error.errorCode).to.equal(\"9999\");\r",
													"    pm.expect(jsonData.error.message).to.equal(\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"22222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brazil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": A,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 30,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/id_produto_inexistente(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar mensagem de retorno\r",
													"pm.test(\"Validar mensagem de retorno\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0].codRetorno).to.equal(400);\r",
													"    pm.expect(jsonData[0].descricaoRetorno).to.equal(\"Programa não encontrado\");\r",
													"    pm.expect(jsonData[0].source).to.equal(\"MIDDLEWARE\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"22222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brazil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 34,\n        \"idOrigemComercial\": 99,\n        \"diaVencimento\": 30,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/idOrigemComercial_zero(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal(\"\\\"conta.idOrigemComercial\\\" must be a positive number\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"22222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brazil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": 0,\n        \"diaVencimento\": 30,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/idOrigemComercial_>_16(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0].erros[0].mensagem).to.equal( \"\\\"conta.idOrigemComercial\\\" must be a safe number\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"22222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brazil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 12,\n        \"idOrigemComercial\": 345678996666666655,\n        \"diaVencimento\": 30,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/idOrigemComercial_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Verificar se a resposta contém a mensagem de erro esperada\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).to.equal(\"Internal Server Error\");\r",
													"    pm.expect(jsonData.error.errorCode).to.equal(\"9999\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"22222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brazil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 1,\n        \"idOrigemComercial\": A,\n        \"diaVencimento\": 30,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/diaVencimento_>_31(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0]).to.have.property(\"erros\");\r",
													"\r",
													"    var primeiroErro = jsonData[0].erros[0];\r",
													"    pm.expect(primeiroErro).to.have.property(\"mensagem\").that.is.eql(\"\\\"conta.diaVencimento\\\" must be less than or equal to 31\");\r",
													"  });  \r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"22222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brazil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 12,\n        \"idOrigemComercial\": 1,\n        \"diaVencimento\": 32,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/diaVencimento_zero(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0]).to.have.property(\"erros\");\r",
													"\r",
													"    var primeiroErro = jsonData[0].erros[0];\r",
													"    pm.expect(primeiroErro).to.have.property(\"mensagem\").that.is.eql(\"\\\"conta.diaVencimento\\\" must be a positive number\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"22222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brazil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 12,\n        \"idOrigemComercial\": 1,\n        \"diaVencimento\": 0,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/diaVencimento_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar mensagem de erro\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"   pm.expect(jsonData.error.errorCode).to.equal(\"9999\");\r",
													"    pm.expect(jsonData.error.message).to.equal(\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"22222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brazil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 12,\n        \"idOrigemComercial\": 1,\n        \"diaVencimento\": aaa,\n        \"limiteGlobal\": 777,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/limiteGlobal_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar mensagem de erro\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"   pm.expect(jsonData.error.errorCode).to.equal(\"9999\");\r",
													"    pm.expect(jsonData.error.message).to.equal(\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"22222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brazil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 12,\n        \"idOrigemComercial\": 1,\n        \"diaVencimento\": 1,\n        \"limiteGlobal\": aaa,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/limiteGlobal_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar mensagem de erro\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"   pm.expect(jsonData.error.errorCode).to.equal(\"9999\");\r",
													"    pm.expect(jsonData.error.message).to.equal(\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"22222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brazil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 12,\n        \"idOrigemComercial\": 1,\n        \"diaVencimento\": 1,\n        \"limiteGlobal\": ,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/limiteGlobal_>_valor_permitido(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0]).to.have.property(\"erros\");\r",
													"\r",
													"    var primeiroErro = jsonData[0].erros[0];\r",
													"    pm.expect(primeiroErro).to.have.property(\"mensagem\").that.is.eql( \"\\\"conta.limiteGlobal\\\" must be a safe number\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"22222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brazil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 12,\n        \"idOrigemComercial\": 1,\n        \"diaVencimento\": 1,\n        \"limiteGlobal\": 666666666666666666666,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/limite_maximo_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar mensagem de erro\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"   pm.expect(jsonData.error.errorCode).to.equal(\"9999\");\r",
													"    pm.expect(jsonData.error.message).to.equal(\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"22222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brazil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 12,\n        \"idOrigemComercial\": 1,\n        \"diaVencimento\": 1,\n        \"limiteGlobal\": 50,\n        \"limiteMaximo\": a,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/limite_maximo_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar mensagem de erro\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"   pm.expect(jsonData.error.errorCode).to.equal(\"9999\");\r",
													"    pm.expect(jsonData.error.message).to.equal(\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"22222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brazil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 12,\n        \"idOrigemComercial\": 1,\n        \"diaVencimento\": 1,\n        \"limiteGlobal\": 50,\n        \"limiteMaximo\": ,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/limite_maximo_>_permitido(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0]).to.have.property(\"erros\");\r",
													"\r",
													"    var primeiroErro = jsonData[0].erros[0];\r",
													"    pm.expect(primeiroErro).to.have.property(\"mensagem\").that.is.eql( \"\\\"conta.limiteMaximo\\\" must be a safe number\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"22222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brazil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 12,\n        \"idOrigemComercial\": 1,\n        \"diaVencimento\": 1,\n        \"limiteGlobal\": 50,\n        \"limiteMaximo\": 8889999999999999999,\n        \"limiteParcelas\": 1234,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/limiteParcelas_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar mensagem de erro\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"   pm.expect(jsonData.error.errorCode).to.equal(\"9999\");\r",
													"    pm.expect(jsonData.error.message).to.equal(\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"22222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brazil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 12,\n        \"idOrigemComercial\": 1,\n        \"diaVencimento\": 1,\n        \"limiteGlobal\": 50,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\":A,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/limiteParcelas_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar mensagem de erro\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"   pm.expect(jsonData.error.errorCode).to.equal(\"9999\");\r",
													"    pm.expect(jsonData.error.message).to.equal(\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"22222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brazil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 12,\n        \"idOrigemComercial\": 1,\n        \"diaVencimento\": 1,\n        \"limiteGlobal\": 50,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\":,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/limiteParcelas_>_permitido(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0]).to.have.property(\"erros\");\r",
													"\r",
													"    var primeiroErro = jsonData[0].erros[0];\r",
													"    pm.expect(primeiroErro).to.have.property(\"mensagem\").that.is.eql(\"\\\"conta.limiteParcelas\\\" must be a safe number\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"22222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brazil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 12,\n        \"idOrigemComercial\": 1,\n        \"diaVencimento\": 1,\n        \"limiteGlobal\": 50,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\":99898988888888999999999,\n        \"limiteConsignado\": 1234,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/limiteConsignado_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar mensagem de erro\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"   pm.expect(jsonData.error.errorCode).to.equal(\"9999\");\r",
													"    pm.expect(jsonData.error.message).to.equal(\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"22222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brazil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 12,\n        \"idOrigemComercial\": 1,\n        \"diaVencimento\": 1,\n        \"limiteGlobal\": 50,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\":1234,\n        \"limiteConsignado\": a,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/limiteConsignado_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Validar mensagem de erro\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"   pm.expect(jsonData.error.errorCode).to.equal(\"9999\");\r",
													"    pm.expect(jsonData.error.message).to.equal(\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"22222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brazil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 12,\n        \"idOrigemComercial\": 1,\n        \"diaVencimento\": 1,\n        \"limiteGlobal\": 50,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\":1234,\n        \"limiteConsignado\":,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM143 - POST: /propostas/limiteConsignado_>_permitido(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    pm.expect(jsonData[0]).to.have.property(\"erros\");\r",
													"\r",
													"    var primeiroErro = jsonData[0].erros[0];\r",
													"    pm.expect(primeiroErro).to.have.property(\"mensagem\").that.is.eql( \"\\\"conta.limiteConsignado\\\" must be a safe number\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"cpf\": \"{{generatedCPF}}\",\n    \"nome\": \"Julia Teste\",\n    \"nomeMae\": \"Josefa Josefina\",\n    \"nomePai\": \"João Souza\",\n    \"dataNascimento\": \"1995-03-03\",\n    \"sexo\": \"F\",\n    \"idNacionalidade\":1,\n    \"numeroIdentidade\": \"97549788\",\n    \"dataEmissaoIdentidade\": \"1995-03-03\",\n    \"dataEmissaoCnh\": \"1995-03-03\",\n    \"orgaoExpedidorIdentidade\": \"SSP\",\n    \"numeroCNH\": \"32134354343\",\n    \"unidadeFederativaIdentidade\": \"SP\",\n    \"naturalidadeCidade\": \"São Paulo\",\n    \"naturalidadeEstado\": \"SP\", \n    \"codigoRamoAtividade\": 0,\n    \"valorRenda\":1000,\n    \"patrimonioTotal\": 0,\n    \"email\": \"email@email.com\",\n    \"idEstabelecimento\": 0,\n    \"idEstadoCivil\": 1,\n    \"matricula\": 0,\n    \"idPromotorVenda\": 55,\n    \"tokenIndicacaoAmigo\": \"t1\",\n    \"valorPontuacao\": 0,\n    \"encaminharCartaoEndereco\": true,\n    \"pessoaPoliticamenteExposta\": true,\n    \"canalEntrada\": \"Canal_TESTE\",\n    \"deficienteVisual\": true,\n    \"telefones\": [\n        {\n        \"idTipoTelefone\": 3,\n        \"ddd\":11,\n        \"telefone\": \"944444444\",\n        \"ramal\": \"00\"\n        }\n    ],\n    \"enderecos\": [\n        {\n        \"idTipoEndereco\": 1,\n        \"logradouro\": \"Paulista\",\n        \"complemento\": \"22A\",\n        \"bairro\": \"Centro\",\n        \"numero\": \"226\",\n        \"cep\": \"22222222\",\n        \"pontoReferencia\": \"Prox Parque\",\n        \"cidade\": \"São Paulo\",\n        \"uf\": \"SP\",\n        \"pais\": \"Brazil\",\n        \"enderecoCorrespondencia\": true\n        }\n    ],\n    \"conta\": {\n        \"idProduto\": 12,\n        \"idOrigemComercial\": 1,\n        \"diaVencimento\": 1,\n        \"limiteGlobal\": 50,\n        \"limiteMaximo\": 1234,\n        \"limiteParcelas\":1234,\n        \"limiteConsignado\":233333333333333333333,\n        \"faturaPorEmail\": true,\n        \"pacoteTarifa\": 1,\n        \"flagCreditoAtivo\": true,\n        \"flagDebitoAtivo\": true,\n        \"flagPLDiferenciado\": true,\n        \"flagOverLimit\": true,\n        \"flagCarteiraDigital\": true,\n        \"bonusCelular\": {\n        \"codigoOperadora\": 1,\n        \"ddd\": 11,\n        \"celular\": \"998556322\"\n        },\n        \"adicionais\": [\n        \n\t\t\t]\n    },\n    \"assinaturaCliente\": \"string\",\n    \"neurotech\": {\n        \"imagesProcessId\": \"string\",\n        \"fotoBiometriaContingencia\": true,\n        \"fotoBiometriaRepositorio\": true,\n        \"fotoDocumentoContingencia\": true,\n        \"fotoDocumentoRepositorio\": true,\n        \"tokenAppStatus\": \"string\",\n        \"tokenAppReenvio\": \"string\",\n        \"tokenAppInvalido\": \"string\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/propostas/api/propostas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"propostas",
												"api",
												"propostas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "09656853067",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Endereços",
							"item": [
								{
									"name": "PIER118 - POST: /api/enderecos/",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"const schema = {\r",
													"    \"type\": \"object\",\r",
													"    \"default\": {},\r",
													"    \"title\": \"Root Schema\",\r",
													"    \"required\": [\r",
													"        \"id\",\r",
													"        \"idPessoa\",\r",
													"        \"idTipoEndereco\",\r",
													"        \"cep\",\r",
													"        \"logradouro\",\r",
													"        \"numero\",\r",
													"        \"cidade\",\r",
													"        \"uf\",\r",
													"        \"pais\",\r",
													"        \"dataInclusao\",\r",
													"        \"dataUltimaAtualizacao\",\r",
													"        \"flagCorrespondencia\",\r",
													"        \"complemento\",\r",
													"        \"pontoReferencia\",\r",
													"        \"bairro\",\r",
													"        \"tempoResidenciaAnos\",\r",
													"        \"tempoResidenciaMeses\"\r",
													"    ],\r",
													"    \"properties\": {\r",
													"        \"id\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The id Schema\",\r",
													"            \"examples\": [\r",
													"                2830\r",
													"            ]\r",
													"        },\r",
													"        \"idPessoa\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The idPessoa Schema\",\r",
													"            \"examples\": [\r",
													"                264\r",
													"            ]\r",
													"        },\r",
													"        \"idTipoEndereco\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The idTipoEndereco Schema\",\r",
													"            \"examples\": [\r",
													"                4\r",
													"            ]\r",
													"        },\r",
													"        \"cep\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The cep Schema\",\r",
													"            \"examples\": [\r",
													"                \"01500005\"\r",
													"            ]\r",
													"        },\r",
													"        \"logradouro\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The logradouro Schema\",\r",
													"            \"examples\": [\r",
													"                \"Avenida Paulista\"\r",
													"            ]\r",
													"        },\r",
													"        \"numero\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The numero Schema\",\r",
													"            \"examples\": [\r",
													"                1501\r",
													"            ]\r",
													"        },\r",
													"        \"cidade\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The cidade Schema\",\r",
													"            \"examples\": [\r",
													"                \"São Paulo\"\r",
													"            ]\r",
													"        },\r",
													"        \"uf\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The uf Schema\",\r",
													"            \"examples\": [\r",
													"                \"SP\"\r",
													"            ]\r",
													"        },\r",
													"        \"pais\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The pais Schema\",\r",
													"            \"examples\": [\r",
													"                \"Brasil\"\r",
													"            ]\r",
													"        },\r",
													"        \"dataInclusao\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The dataInclusao Schema\",\r",
													"            \"examples\": [\r",
													"                \"2023-05-15T13:33:42.757-03:00\"\r",
													"            ]\r",
													"        },\r",
													"        \"dataUltimaAtualizacao\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The dataUltimaAtualizacao Schema\",\r",
													"            \"examples\": [\r",
													"                \"2023-05-15T13:33:42.757-03:00\"\r",
													"            ]\r",
													"        },\r",
													"        \"flagCorrespondencia\": {\r",
													"            \"type\": \"boolean\",\r",
													"            \"default\": false,\r",
													"            \"title\": \"The flagCorrespondencia Schema\",\r",
													"            \"examples\": [\r",
													"                true\r",
													"            ]\r",
													"        },\r",
													"        \"complemento\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The complemento Schema\",\r",
													"            \"examples\": [\r",
													"                \"Apto 100\"\r",
													"            ]\r",
													"        },\r",
													"        \"pontoReferencia\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The pontoReferencia Schema\",\r",
													"            \"examples\": [\r",
													"                \"Em frente ao posto de gasolina\"\r",
													"            ]\r",
													"        },\r",
													"        \"bairro\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The bairro Schema\",\r",
													"            \"examples\": [\r",
													"                \"Bela Vista\"\r",
													"            ]\r",
													"        },\r",
													"        \"tempoResidenciaAnos\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The tempoResidenciaAnos Schema\",\r",
													"            \"examples\": [\r",
													"                2\r",
													"            ]\r",
													"        },\r",
													"        \"tempoResidenciaMeses\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The tempoResidenciaMeses Schema\",\r",
													"            \"examples\": [\r",
													"                8\r",
													"            ]\r",
													"        }\r",
													"    },\r",
													"    \"examples\": [{\r",
													"        \"id\": 2830,\r",
													"        \"idPessoa\": 264,\r",
													"        \"idTipoEndereco\": 4,\r",
													"        \"cep\": \"01500005\",\r",
													"        \"logradouro\": \"Avenida Paulista\",\r",
													"        \"numero\": 1501,\r",
													"        \"cidade\": \"São Paulo\",\r",
													"        \"uf\": \"SP\",\r",
													"        \"pais\": \"Brasil\",\r",
													"        \"dataInclusao\": \"2023-05-15T13:33:42.757-03:00\",\r",
													"        \"dataUltimaAtualizacao\": \"2023-05-15T13:33:42.757-03:00\",\r",
													"        \"flagCorrespondencia\": true,\r",
													"        \"complemento\": \"Apto 100\",\r",
													"        \"pontoReferencia\": \"Em frente ao posto de gasolina\",\r",
													"        \"bairro\": \"Bela Vista\",\r",
													"        \"tempoResidenciaAnos\": 2,\r",
													"        \"tempoResidenciaMeses\": 8\r",
													"    }]\r",
													"}\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.ok\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"// Extrair o valor do campo \"idPessoa\" do response\r",
													"var responseJson = pm.response.json();\r",
													"var idPessoaResponse = responseJson.idPessoa;\r",
													"\r",
													"// Extrair o valor do campo \"idPessoa\" do request\r",
													"var queryParams = pm.request.url.query.all();\r",
													"var idPessoaRequest = null;\r",
													"\r",
													"for (var i = 0; i < queryParams.length; i++) {\r",
													"    if (queryParams[i].key === 'idPessoa') {\r",
													"        idPessoaRequest = parseInt(queryParams[i].value);\r",
													"        break;\r",
													"    }\r",
													"}\r",
													"\r",
													"// Comparar os valores\r",
													"pm.test(\"Validar o valor do campo idPessoa no response\", function () {\r",
													"    pm.expect(idPessoaResponse).to.eql(idPessoaRequest);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/enderecos/api/enderecos?idPessoa=264&idTipoEndereco=4&cep=01500005&logradouro=Avenida Paulista&numero=1501&complemento=Apto 100&pontoReferencia=Em frente ao posto de gasolina&bairro=Bela Vista&cidade=São Paulo&uf=SP&pais=Brasil&tempoResidenciaAnos=2&tempoResidenciaMeses=8&aplicativoAlteracao=string&usuarioAlteracao=Aguiar",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"enderecos",
												"api",
												"enderecos"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "264"
												},
												{
													"key": "idTipoEndereco",
													"value": "4"
												},
												{
													"key": "cep",
													"value": "01500005"
												},
												{
													"key": "logradouro",
													"value": "Avenida Paulista"
												},
												{
													"key": "numero",
													"value": "1501"
												},
												{
													"key": "complemento",
													"value": "Apto 100"
												},
												{
													"key": "pontoReferencia",
													"value": "Em frente ao posto de gasolina"
												},
												{
													"key": "bairro",
													"value": "Bela Vista"
												},
												{
													"key": "cidade",
													"value": "São Paulo"
												},
												{
													"key": "uf",
													"value": "SP"
												},
												{
													"key": "pais",
													"value": "Brasil"
												},
												{
													"key": "tempoResidenciaAnos",
													"value": "2"
												},
												{
													"key": "tempoResidenciaMeses",
													"value": "8"
												},
												{
													"key": "aplicativoAlteracao",
													"value": "string"
												},
												{
													"key": "usuarioAlteracao",
													"value": "Aguiar"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER118 - POST: /api/enderecos/id_pessoa_branco(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"deve ser um número\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/enderecos/api/enderecos?idPessoa=&idTipoEndereco=4&cep=01500005&logradouro=Avenida Paulista&numero=1501&complemento=Apto 100&pontoReferencia=Em frente ao posto de gasolina&bairro=Bela Vista&cidade=São Paulo&uf=SP&pais=Brasil&tempoResidenciaAnos=2&tempoResidenciaMeses=8&aplicativoAlteracao=string&usuarioAlteracao=Aguiar",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"enderecos",
												"api",
												"enderecos"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": ""
												},
												{
													"key": "idTipoEndereco",
													"value": "4"
												},
												{
													"key": "cep",
													"value": "01500005"
												},
												{
													"key": "logradouro",
													"value": "Avenida Paulista"
												},
												{
													"key": "numero",
													"value": "1501"
												},
												{
													"key": "complemento",
													"value": "Apto 100"
												},
												{
													"key": "pontoReferencia",
													"value": "Em frente ao posto de gasolina"
												},
												{
													"key": "bairro",
													"value": "Bela Vista"
												},
												{
													"key": "cidade",
													"value": "São Paulo"
												},
												{
													"key": "uf",
													"value": "SP"
												},
												{
													"key": "pais",
													"value": "Brasil"
												},
												{
													"key": "tempoResidenciaAnos",
													"value": "2"
												},
												{
													"key": "tempoResidenciaMeses",
													"value": "8"
												},
												{
													"key": "aplicativoAlteracao",
													"value": "string"
												},
												{
													"key": "usuarioAlteracao",
													"value": "Aguiar"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER118 - POST: /api/enderecos/id_pessoa_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"deve ser um número\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/enderecos/api/enderecos?idPessoa=A&idTipoEndereco=4&cep=01500005&logradouro=Avenida Paulista&numero=1501&complemento=Apto 100&pontoReferencia=Em frente ao posto de gasolina&bairro=Bela Vista&cidade=São Paulo&uf=SP&pais=Brasil&tempoResidenciaAnos=2&tempoResidenciaMeses=8&aplicativoAlteracao=string&usuarioAlteracao=Aguiar",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"enderecos",
												"api",
												"enderecos"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "A"
												},
												{
													"key": "idTipoEndereco",
													"value": "4"
												},
												{
													"key": "cep",
													"value": "01500005"
												},
												{
													"key": "logradouro",
													"value": "Avenida Paulista"
												},
												{
													"key": "numero",
													"value": "1501"
												},
												{
													"key": "complemento",
													"value": "Apto 100"
												},
												{
													"key": "pontoReferencia",
													"value": "Em frente ao posto de gasolina"
												},
												{
													"key": "bairro",
													"value": "Bela Vista"
												},
												{
													"key": "cidade",
													"value": "São Paulo"
												},
												{
													"key": "uf",
													"value": "SP"
												},
												{
													"key": "pais",
													"value": "Brasil"
												},
												{
													"key": "tempoResidenciaAnos",
													"value": "2"
												},
												{
													"key": "tempoResidenciaMeses",
													"value": "8"
												},
												{
													"key": "aplicativoAlteracao",
													"value": "string"
												},
												{
													"key": "usuarioAlteracao",
													"value": "Aguiar"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER118 - POST: /api/enderecos/id_pessoa_caractere_especial(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"deve ser um número\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/enderecos/api/enderecos?idPessoa=$%26*@&idTipoEndereco=4&cep=01500005&logradouro=Avenida Paulista&numero=1501&complemento=Apto 100&pontoReferencia=Em frente ao posto de gasolina&bairro=Bela Vista&cidade=São Paulo&uf=SP&pais=Brasil&tempoResidenciaAnos=2&tempoResidenciaMeses=8&aplicativoAlteracao=string&usuarioAlteracao=Aguiar",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"enderecos",
												"api",
												"enderecos"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "$%26*@"
												},
												{
													"key": "idTipoEndereco",
													"value": "4"
												},
												{
													"key": "cep",
													"value": "01500005"
												},
												{
													"key": "logradouro",
													"value": "Avenida Paulista"
												},
												{
													"key": "numero",
													"value": "1501"
												},
												{
													"key": "complemento",
													"value": "Apto 100"
												},
												{
													"key": "pontoReferencia",
													"value": "Em frente ao posto de gasolina"
												},
												{
													"key": "bairro",
													"value": "Bela Vista"
												},
												{
													"key": "cidade",
													"value": "São Paulo"
												},
												{
													"key": "uf",
													"value": "SP"
												},
												{
													"key": "pais",
													"value": "Brasil"
												},
												{
													"key": "tempoResidenciaAnos",
													"value": "2"
												},
												{
													"key": "tempoResidenciaMeses",
													"value": "8"
												},
												{
													"key": "aplicativoAlteracao",
													"value": "string"
												},
												{
													"key": "usuarioAlteracao",
													"value": "Aguiar"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER118 - POST: /api/enderecos/id_pessoa_nao_encontrado(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"O participante informado é inexistente\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/enderecos/api/enderecos?idPessoa=8888888888&idTipoEndereco=4&cep=01500005&logradouro=Avenida Paulista&numero=1501&complemento=Apto 100&pontoReferencia=Em frente ao posto de gasolina&bairro=Bela Vista&cidade=São Paulo&uf=SP&pais=Brasil&tempoResidenciaAnos=2&tempoResidenciaMeses=8&aplicativoAlteracao=string&usuarioAlteracao=Aguiar",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"enderecos",
												"api",
												"enderecos"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "8888888888"
												},
												{
													"key": "idTipoEndereco",
													"value": "4"
												},
												{
													"key": "cep",
													"value": "01500005"
												},
												{
													"key": "logradouro",
													"value": "Avenida Paulista"
												},
												{
													"key": "numero",
													"value": "1501"
												},
												{
													"key": "complemento",
													"value": "Apto 100"
												},
												{
													"key": "pontoReferencia",
													"value": "Em frente ao posto de gasolina"
												},
												{
													"key": "bairro",
													"value": "Bela Vista"
												},
												{
													"key": "cidade",
													"value": "São Paulo"
												},
												{
													"key": "uf",
													"value": "SP"
												},
												{
													"key": "pais",
													"value": "Brasil"
												},
												{
													"key": "tempoResidenciaAnos",
													"value": "2"
												},
												{
													"key": "tempoResidenciaMeses",
													"value": "8"
												},
												{
													"key": "aplicativoAlteracao",
													"value": "string"
												},
												{
													"key": "usuarioAlteracao",
													"value": "Aguiar"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER118 - POST: /api/enderecos/idTipoendereco_branco(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"deve ser um número\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/enderecos/api/enderecos?idPessoa=264&idTipoEndereco=&cep=01500005&logradouro=Avenida Paulista&numero=1501&complemento=Apto 100&pontoReferencia=Em frente ao posto de gasolina&bairro=Bela Vista&cidade=São Paulo&uf=SP&pais=Brasil&tempoResidenciaAnos=2&tempoResidenciaMeses=8&aplicativoAlteracao=string&usuarioAlteracao=Aguiar",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"enderecos",
												"api",
												"enderecos"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "264"
												},
												{
													"key": "idTipoEndereco",
													"value": ""
												},
												{
													"key": "cep",
													"value": "01500005"
												},
												{
													"key": "logradouro",
													"value": "Avenida Paulista"
												},
												{
													"key": "numero",
													"value": "1501"
												},
												{
													"key": "complemento",
													"value": "Apto 100"
												},
												{
													"key": "pontoReferencia",
													"value": "Em frente ao posto de gasolina"
												},
												{
													"key": "bairro",
													"value": "Bela Vista"
												},
												{
													"key": "cidade",
													"value": "São Paulo"
												},
												{
													"key": "uf",
													"value": "SP"
												},
												{
													"key": "pais",
													"value": "Brasil"
												},
												{
													"key": "tempoResidenciaAnos",
													"value": "2"
												},
												{
													"key": "tempoResidenciaMeses",
													"value": "8"
												},
												{
													"key": "aplicativoAlteracao",
													"value": "string"
												},
												{
													"key": "usuarioAlteracao",
													"value": "Aguiar"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER118 - POST: /api/enderecos/idTipoendereco_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"deve ser um número\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/enderecos/api/enderecos?idPessoa=264&idTipoEndereco=A&cep=01500005&logradouro=Avenida Paulista&numero=1501&complemento=Apto 100&pontoReferencia=Em frente ao posto de gasolina&bairro=Bela Vista&cidade=São Paulo&uf=SP&pais=Brasil&tempoResidenciaAnos=2&tempoResidenciaMeses=8&aplicativoAlteracao=string&usuarioAlteracao=Aguiar",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"enderecos",
												"api",
												"enderecos"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "264"
												},
												{
													"key": "idTipoEndereco",
													"value": "A"
												},
												{
													"key": "cep",
													"value": "01500005"
												},
												{
													"key": "logradouro",
													"value": "Avenida Paulista"
												},
												{
													"key": "numero",
													"value": "1501"
												},
												{
													"key": "complemento",
													"value": "Apto 100"
												},
												{
													"key": "pontoReferencia",
													"value": "Em frente ao posto de gasolina"
												},
												{
													"key": "bairro",
													"value": "Bela Vista"
												},
												{
													"key": "cidade",
													"value": "São Paulo"
												},
												{
													"key": "uf",
													"value": "SP"
												},
												{
													"key": "pais",
													"value": "Brasil"
												},
												{
													"key": "tempoResidenciaAnos",
													"value": "2"
												},
												{
													"key": "tempoResidenciaMeses",
													"value": "8"
												},
												{
													"key": "aplicativoAlteracao",
													"value": "string"
												},
												{
													"key": "usuarioAlteracao",
													"value": "Aguiar"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER118 - POST: /api/enderecos/idTipoendereco_fora_dominio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"[instance value (6) not found in enum (possible values: [1,2,3,4,5])]\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/enderecos/api/enderecos?idPessoa=264&idTipoEndereco=6&cep=01500005&logradouro=Avenida Paulista&numero=1501&complemento=Apto 100&pontoReferencia=Em frente ao posto de gasolina&bairro=Bela Vista&cidade=São Paulo&uf=SP&pais=Brasil&tempoResidenciaAnos=2&tempoResidenciaMeses=8&aplicativoAlteracao=string&usuarioAlteracao=Aguiar",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"enderecos",
												"api",
												"enderecos"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "264"
												},
												{
													"key": "idTipoEndereco",
													"value": "6"
												},
												{
													"key": "cep",
													"value": "01500005"
												},
												{
													"key": "logradouro",
													"value": "Avenida Paulista"
												},
												{
													"key": "numero",
													"value": "1501"
												},
												{
													"key": "complemento",
													"value": "Apto 100"
												},
												{
													"key": "pontoReferencia",
													"value": "Em frente ao posto de gasolina"
												},
												{
													"key": "bairro",
													"value": "Bela Vista"
												},
												{
													"key": "cidade",
													"value": "São Paulo"
												},
												{
													"key": "uf",
													"value": "SP"
												},
												{
													"key": "pais",
													"value": "Brasil"
												},
												{
													"key": "tempoResidenciaAnos",
													"value": "2"
												},
												{
													"key": "tempoResidenciaMeses",
													"value": "8"
												},
												{
													"key": "aplicativoAlteracao",
													"value": "string"
												},
												{
													"key": "usuarioAlteracao",
													"value": "Aguiar"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER118 - POST: /api/enderecos/idTipoendereco_dentro_dominio(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"const responseJson = pm.response.json();\r",
													"pm.test(\"Check o dominio 'idTipoEndereco' 1..5\", function() {\r",
													"    pm.expect(responseJson.idTipoEndereco).to.be.oneOf([1, 2, 3, 4, 5]);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/enderecos/api/enderecos?idPessoa=264&idTipoEndereco=5&cep=01500005&logradouro=Avenida Paulista&numero=1501&complemento=Apto 100&pontoReferencia=Em frente ao posto de gasolina&bairro=Bela Vista&cidade=São Paulo&uf=SP&pais=Brasil&tempoResidenciaAnos=2&tempoResidenciaMeses=8&aplicativoAlteracao=string&usuarioAlteracao=Aguiar",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"enderecos",
												"api",
												"enderecos"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "264"
												},
												{
													"key": "idTipoEndereco",
													"value": "5"
												},
												{
													"key": "cep",
													"value": "01500005"
												},
												{
													"key": "logradouro",
													"value": "Avenida Paulista"
												},
												{
													"key": "numero",
													"value": "1501"
												},
												{
													"key": "complemento",
													"value": "Apto 100"
												},
												{
													"key": "pontoReferencia",
													"value": "Em frente ao posto de gasolina"
												},
												{
													"key": "bairro",
													"value": "Bela Vista"
												},
												{
													"key": "cidade",
													"value": "São Paulo"
												},
												{
													"key": "uf",
													"value": "SP"
												},
												{
													"key": "pais",
													"value": "Brasil"
												},
												{
													"key": "tempoResidenciaAnos",
													"value": "2"
												},
												{
													"key": "tempoResidenciaMeses",
													"value": "8"
												},
												{
													"key": "aplicativoAlteracao",
													"value": "string"
												},
												{
													"key": "usuarioAlteracao",
													"value": "Aguiar"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER118 - POST: /api/enderecos/cep_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"const responseJson = pm.response.json();\r",
													"pm.test(\"Check o dominio 'idTipoEndereco' 1..5\", function() {\r",
													"    pm.expect(responseJson.idTipoEndereco).to.be.oneOf([1, 2, 3, 4, 5]);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/enderecos/api/enderecos?idPessoa=264&idTipoEndereco=5&cep=05074010&logradouro=Avenida Paulista&numero=1501&complemento=Apto 100&pontoReferencia=Em frente ao posto de gasolina&bairro=Bela Vista&cidade=São Paulo&uf=SP&pais=Brasil&tempoResidenciaAnos=2&tempoResidenciaMeses=8&aplicativoAlteracao=string&usuarioAlteracao=Aguiar",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"enderecos",
												"api",
												"enderecos"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "264"
												},
												{
													"key": "idTipoEndereco",
													"value": "5"
												},
												{
													"key": "cep",
													"value": "05074010"
												},
												{
													"key": "logradouro",
													"value": "Avenida Paulista"
												},
												{
													"key": "numero",
													"value": "1501"
												},
												{
													"key": "complemento",
													"value": "Apto 100"
												},
												{
													"key": "pontoReferencia",
													"value": "Em frente ao posto de gasolina"
												},
												{
													"key": "bairro",
													"value": "Bela Vista"
												},
												{
													"key": "cidade",
													"value": "São Paulo"
												},
												{
													"key": "uf",
													"value": "SP"
												},
												{
													"key": "pais",
													"value": "Brasil"
												},
												{
													"key": "tempoResidenciaAnos",
													"value": "2"
												},
												{
													"key": "tempoResidenciaMeses",
													"value": "8"
												},
												{
													"key": "aplicativoAlteracao",
													"value": "string"
												},
												{
													"key": "usuarioAlteracao",
													"value": "Aguiar"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER117 - GET: /api/enderecos_idPessoa(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.ok;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Verificar se o campo \"content\" não está vazio\r",
													"pm.test(\"Validar se conteudo não está vazio\", function () {\r",
													"    pm.expect(pm.response.json().content.length).to.be.greaterThan(0);\r",
													"});\r",
													"\r",
													"const responseCorpo = pm.response.json().content;\r",
													"\r",
													"pm.test(\"Validar os campos em cada item da resposta\", function () {\r",
													"    pm.expect(responseCorpo).to.be.an('array').and.to.not.be.empty;\r",
													"\r",
													"    responseCorpo.forEach(function (item) {\r",
													"        pm.expect(item).to.have.property(\"id\");\r",
													"        pm.expect(item).to.have.property(\"idTipoEndereco\");\r",
													"        pm.expect(item).to.have.property(\"cep\");\r",
													"        pm.expect(item).to.have.property(\"logradouro\");\r",
													"        pm.expect(item).to.have.property(\"numero\");\r",
													"        pm.expect(item).to.have.property(\"cidade\");\r",
													"        pm.expect(item).to.have.property(\"uf\");\r",
													"        pm.expect(item).to.have.property(\"pais\");\r",
													"        pm.expect(item).to.have.property(\"dataInclusao\");\r",
													"        pm.expect(item).to.have.property(\"dataUltimaAtualizacao\");\r",
													"        pm.expect(item).to.have.property(\"flagCorrespondencia\");\r",
													"        pm.expect(item).to.have.property(\"idPessoa\");\r",
													"        pm.expect(item).to.have.property(\"complemento\");\r",
													"        pm.expect(item).to.have.property(\"pontoReferencia\");\r",
													"        pm.expect(item).to.have.property(\"bairro\");\r",
													"    });\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/enderecos/api/enderecos?idPessoa=1",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"enderecos",
												"api",
												"enderecos"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER117 - GET: /api/enderecos_idPessoa_invalido(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"O participante informado é inexistente\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/enderecos/api/enderecos?idPessoa=0",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"enderecos",
												"api",
												"enderecos"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "0"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER117 - GET: /api/enderecos_idPessoa_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"deve ser um número\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/enderecos/api/enderecos?idPessoa=a",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"enderecos",
												"api",
												"enderecos"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "a"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER117 - GET: /api/enderecos_idPessoa_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"deve ser um número\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/enderecos/api/enderecos?idPessoa=",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"enderecos",
												"api",
												"enderecos"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER119 - PUT /api/enderecos",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "https://kong-psd-hml-gke.pernambucanas.com.br/accenture/out/ci/test/enderecos/api/enderecos?idPessoa=70000844&idTipoEndereco=1&cep=01500005&logradouro=Avenida%20Paulista&numero=1501&complemento=Apto%20100&pontoReferencia=Em%20frente%20ao%20posto%20de%20gasolina&bairro=Bela%20Vista&cidade=S%C3%A3o%20Paulo&uf=SP&pais=Brasil&tempoResidenciaAnos=2&tempoResidenciaMeses=8&aplicativoAlteracao=string&usuarioAlteracao=AGuiar&id=3387",
											"protocol": "https",
											"host": [
												"kong-psd-hml-gke",
												"pernambucanas",
												"com",
												"br"
											],
											"path": [
												"accenture",
												"out",
												"ci",
												"test",
												"enderecos",
												"api",
												"enderecos"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "70000844"
												},
												{
													"key": "idTipoEndereco",
													"value": "1"
												},
												{
													"key": "cep",
													"value": "01500005"
												},
												{
													"key": "logradouro",
													"value": "Avenida%20Paulista"
												},
												{
													"key": "numero",
													"value": "1501"
												},
												{
													"key": "complemento",
													"value": "Apto%20100"
												},
												{
													"key": "pontoReferencia",
													"value": "Em%20frente%20ao%20posto%20de%20gasolina"
												},
												{
													"key": "bairro",
													"value": "Bela%20Vista"
												},
												{
													"key": "cidade",
													"value": "S%C3%A3o%20Paulo"
												},
												{
													"key": "uf",
													"value": "SP"
												},
												{
													"key": "pais",
													"value": "Brasil"
												},
												{
													"key": "tempoResidenciaAnos",
													"value": "2"
												},
												{
													"key": "tempoResidenciaMeses",
													"value": "8"
												},
												{
													"key": "aplicativoAlteracao",
													"value": "string"
												},
												{
													"key": "usuarioAlteracao",
													"value": "AGuiar"
												},
												{
													"key": "id",
													"value": "3387"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Telefones",
							"item": [
								{
									"name": "PIER138 - POST: /api/telefones_inclui_valido(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.ok;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Obter o valor do campo \"idPessoa\" do response\r",
													"var idPessoaResponse = pm.response.json().idPessoa;\r",
													"// Obter o valor da variável global \"id_pessoa\"\r",
													"var idPessoaGlobal = pm.globals.get(\"id_pessoa\");\r",
													"// Verificar se o valor da variável global é igual ao campo \"idPessoa\" do response\r",
													"pm.test(\"Validar se id_pessoa do response é = var global do request\", function () {\r",
													"    pm.expect(idPessoaResponse).to.equal(idPessoaGlobal);\r",
													"});\r",
													"\r",
													"pm.test(\"idTipoTelefone não pode devolver nullo\", function () {\r",
													"    const responseBody = pm.response.json();\r",
													"    const nomeCampo = responseBody.idTipoTelefone; \r",
													"    pm.expect(nomeCampo).to.not.equal(null);\r",
													"});\r",
													"\r",
													"pm.test(\"idPessoa não pode devolver nullo\", function () {\r",
													"    const responseBody = pm.response.json();\r",
													"    const nomeCampo = responseBody.idPessoa; \r",
													"    pm.expect(nomeCampo).to.not.equal(null);\r",
													"});\r",
													"\r",
													"pm.test(\"ddd não pode devolver nullo\", function () {\r",
													"    const responseBody = pm.response.json();\r",
													"    const nomeCampo = responseBody.ddd; \r",
													"    pm.expect(nomeCampo).to.not.equal(null);\r",
													"});\r",
													"\r",
													"pm.test(\"telefone não pode devolver nullo\", function () {\r",
													"    const responseBody = pm.response.json();\r",
													"    const nomeCampo = responseBody.telefone; \r",
													"    pm.expect(nomeCampo).to.not.equal(null);\r",
													"});\r",
													"\r",
													"pm.test(\"ramal não pode devolver nullo\", function () {\r",
													"    const responseBody = pm.response.json();\r",
													"    const nomeCampo = responseBody.ramal; \r",
													"    pm.expect(nomeCampo).to.not.equal(null);\r",
													"});\r",
													"\r",
													"pm.test(\"status pode devolver nullo\", function () {\r",
													"    const responseBody = pm.response.json();\r",
													"    const nomeCampo = responseBody.status; \r",
													"    pm.expect(nomeCampo).to.not.equal(null);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar campo telefone como numérico\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    var telefone = jsonData.telefone;\r",
													"    pm.expect(/^\\d+$/.test(telefone)).to.be.true;\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var id_pessoa = 1323;\r",
													"pm.globals.set(\"id_pessoa\", id_pessoa);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=18&idPessoa={{id_pessoa}}&ddd=11&telefone=991882511&ramal=1",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "18"
												},
												{
													"key": "idPessoa",
													"value": "{{id_pessoa}}"
												},
												{
													"key": "ddd",
													"value": "11"
												},
												{
													"key": "telefone",
													"value": "991882511"
												},
												{
													"key": "ramal",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_tamanho_maior_que_9(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"não deve ser maior que 9 caracteres\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa=1323&ddd=11&telefone=9918825112&ramal=1",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "11"
												},
												{
													"key": "telefone",
													"value": "9918825112"
												},
												{
													"key": "ramal",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_tamanho_menor_que_9(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"phone, areaCode ou countryCode informado não estão de acordo com o padrão\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa=1323&ddd=11&telefone=99188258&ramal=1",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "11"
												},
												{
													"key": "telefone",
													"value": "99188258"
												},
												{
													"key": "ramal",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_ddd_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"phone, areaCode ou countryCode informado não estão de acordo com o padrão\");\r",
													"});\r",
													"\r",
													"// Verifica se o campo não é nulo\r",
													"pm.test(\"Não pode ser nullo\", function () {\r",
													"    pm.expect(pm.response.json().ddd).to.not.be.null; \r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var ddd_tel =\"\";\r",
													"pm.globals.set(\"ddd_tel\", ddd_tel);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa=1323&ddd={{ddd_tel}}&telefone=111111111&ramal=10",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "{{ddd_tel}}"
												},
												{
													"key": "telefone",
													"value": "111111111"
												},
												{
													"key": "ramal",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_ddd_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"phone, areaCode ou countryCode informado não estão de acordo com o padrão\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var ddd_tel = \"AA\";\r",
													"pm.globals.set(\"ddd_tel\", ddd_tel);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa=1323&ddd={{ddd_tel}}&telefone=111111111&ramal=10",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "{{ddd_tel}}"
												},
												{
													"key": "telefone",
													"value": "111111111"
												},
												{
													"key": "ramal",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_ddd_inicio_Zero(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"phone, areaCode ou countryCode informado não estão de acordo com o padrão\");\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var ddd_tel = \"01\";\r",
													"pm.globals.set(\"ddd_tel\", ddd_tel);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa=1323&ddd={{ddd_tel}}&telefone=111111111&ramal=10",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "{{ddd_tel}}"
												},
												{
													"key": "telefone",
													"value": "111111111"
												},
												{
													"key": "ramal",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_ddd_somente_Zero(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"phone, areaCode ou countryCode informado não estão de acordo com o padrão\");\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var ddd_tel = \"00\";\r",
													"pm.globals.set(\"ddd_tel\", ddd_tel);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa=1323&ddd={{ddd_tel}}&telefone=111111111&ramal=10",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "{{ddd_tel}}"
												},
												{
													"key": "telefone",
													"value": "111111111"
												},
												{
													"key": "ramal",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_ddd_<_1(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"phone, areaCode ou countryCode informado não estão de acordo com o padrão\");\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var ddd_tel = \"1\";\r",
													"pm.globals.set(\"ddd_tel\", ddd_tel);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa=1323&ddd={{ddd_tel}}&telefone=111111111&ramal=10",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "{{ddd_tel}}"
												},
												{
													"key": "telefone",
													"value": "111111111"
												},
												{
													"key": "ramal",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_ddd_>_2(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"phone, areaCode ou countryCode informado não estão de acordo com o padrão\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var ddd_tel = \"111\";\r",
													"pm.globals.set(\"ddd_tel\", ddd_tel);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa=1323&ddd={{ddd_tel}}&telefone=111111111&ramal=10",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "{{ddd_tel}}"
												},
												{
													"key": "telefone",
													"value": "111111111"
												},
												{
													"key": "ramal",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_telefone_com_letras(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"phone, areaCode ou countryCode informado não estão de acordo com o padrão\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var ddd_tel = \"011\";\r",
													"pm.globals.set(\"ddd_tel\", ddd_tel);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=18&idPessoa=1323&ddd={{ddd_tel}}&telefone=fghytresw&ramal=10",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "18"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "{{ddd_tel}}"
												},
												{
													"key": "telefone",
													"value": "fghytresw"
												},
												{
													"key": "ramal",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_telefone_com_letras_numeros(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"phone, areaCode ou countryCode informado não estão de acordo com o padrão\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var ddd_tel = \"011\";\r",
													"pm.globals.set(\"ddd_tel\", ddd_tel);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa=1323&ddd={{ddd_tel}}&telefone=fghy3resw&ramal=10",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "{{ddd_tel}}"
												},
												{
													"key": "telefone",
													"value": "fghy3resw"
												},
												{
													"key": "ramal",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_telefone_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"não deve ser mais curta que 8 caracteres\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var ddd_tel = \"011\";\r",
													"pm.globals.set(\"ddd_tel\", ddd_tel);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa=1323&ddd={{ddd_tel}}&telefone=&ramal=10",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "{{ddd_tel}}"
												},
												{
													"key": "telefone",
													"value": ""
												},
												{
													"key": "ramal",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_idPessoa_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"deve ser um número\");\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Verifica se o campo não é nulo\r",
													"pm.test(\"Não pode ser nullo\", function () {\r",
													"    pm.expect(pm.response.json().idPessoa).to.not.be.null; \r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var id_pessoa = \"A\";\r",
													"pm.globals.set(\"id_pessoa\", id_pessoa);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa={{id_pessoa}}&ddd=11&telefone=111111111&ramal=10",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "{{id_pessoa}}"
												},
												{
													"key": "ddd",
													"value": "11"
												},
												{
													"key": "telefone",
													"value": "111111111"
												},
												{
													"key": "ramal",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_idPessoa_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"deve ser um número\");\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var id_pessoa = \"\";\r",
													"pm.globals.set(\"id_pessoa\", id_pessoa);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa={{id_pessoa}}&ddd=11&telefone=111111111&ramal=10",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "{{id_pessoa}}"
												},
												{
													"key": "ddd",
													"value": "11"
												},
												{
													"key": "telefone",
													"value": "111111111"
												},
												{
													"key": "ramal",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_idPessoa_inexistente(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"O participante informado é inexistente\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var id_pessoa = 5900777777;\r",
													"pm.globals.set(\"id_pessoa\", id_pessoa);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa={{id_pessoa}}&ddd=11&telefone=54667788&ramal=10",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "{{id_pessoa}}"
												},
												{
													"key": "ddd",
													"value": "11"
												},
												{
													"key": "telefone",
													"value": "54667788"
												},
												{
													"key": "ramal",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_tipotelefone_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"deve ser um número\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var tpfone = \"A\";\r",
													"pm.globals.set(\"tpfone\", tpfone);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone={{tpfone}}&idPessoa=1323&ddd=11&telefone=991882511&ramal=",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "{{tpfone}}"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "11"
												},
												{
													"key": "telefone",
													"value": "991882511"
												},
												{
													"key": "ramal",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_tipotelefone_branco(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"deve ser um número\");\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var tpfone = \"\";\r",
													"pm.globals.set(\"tpfone\", tpfone);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone={{tpfone}}&idPessoa=1323&ddd=11&telefone=991882511&ramal=22",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "{{tpfone}}"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "11"
												},
												{
													"key": "telefone",
													"value": "991882511"
												},
												{
													"key": "ramal",
													"value": "22"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_tipotelefone_invalido(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"ID do tipo de telefone inválido.\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var tpfone = \"3248604\";\r",
													"pm.globals.set(\"tpfone\", tpfone);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone={{tpfone}}&idPessoa=1323&ddd=11&telefone=991882511&ramal=22",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "{{tpfone}}"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "11"
												},
												{
													"key": "telefone",
													"value": "991882511"
												},
												{
													"key": "ramal",
													"value": "22"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_tipotelefone_fora_dominio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"ID do tipo de telefone inválido.\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=6&idPessoa=1323&ddd=11&telefone=991882511&ramal=22",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "6"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "11"
												},
												{
													"key": "telefone",
													"value": "991882511"
												},
												{
													"key": "ramal",
													"value": "22"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER138 - POST: /api/telefones_ramal_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"phone, areaCode ou countryCode informado não estão de acordo com o padrão\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var vramal = \"AA\";\r",
													"pm.globals.set(\"vramal\", vramal);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"strictSSL": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa=1323&ddd=11&telefone=991882511&ramal={{vramal}}",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "1323"
												},
												{
													"key": "ddd",
													"value": "11"
												},
												{
													"key": "telefone",
													"value": "991882511"
												},
												{
													"key": "ramal",
													"value": "{{vramal}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER139 - PUT /api/telefones",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=1&idPessoa=70000844&ddd=11&telefone=991882511&ramal=10&id=6674",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idTipoTelefone",
													"value": "1"
												},
												{
													"key": "idPessoa",
													"value": "70000844"
												},
												{
													"key": "ddd",
													"value": "11"
												},
												{
													"key": "telefone",
													"value": "991882511"
												},
												{
													"key": "ramal",
													"value": "10"
												},
												{
													"key": "id",
													"value": "6674"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Pier132 - GET:/api/pessoas/{id}/historico-telefones N/A",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Cookie",
												"value": "incap_ses_1354_2842573=B0eCFMpR2SO9VJTIjWDKElmxeGQAAAAAa24DNkRMcQl7vqTNxddZDQ==; incap_ses_1452_2842573=ur7nRCPa8TdnC0H/yYomFO33d2QAAAAAotkyJghJVrOOkog5itM2rQ==; nlbi_2842573=/1UuY+ikyxatXQMFxcIi6gAAAAC+4+LESALKv+LQHug7irT4; visid_incap_2842573=OJnrMLxXSuu4WJzezUt89GIVUWQAAAAAQUIPAAAAAABAmXfPPG8q86a0RGPVtHnX"
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/pessoas/70000960/historico-telefones",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"pessoas",
												"70000960",
												"historico-telefones"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER137 - GET: /api/telefones_id_pessoa_existente(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Cenário 1: Status code is 200\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"    pm.test(\"A resposta é válida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.ok;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"    });\r",
													"\r",
													"  \r",
													" \r",
													" \r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idPessoa=1323",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1323"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER137 - GET: /api/telefones_idPessoa_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Valida mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.errors[0].message).to.eql(\"deve ser um número\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idPessoa=",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER137 - GET: /api/telefones_idPessoa_listar_telefones(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.ok;\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Validar campo idPessoa do response\", function () {\r",
													"    var request_idPessoa = pm.request.url.query.get(\"idPessoa\");\r",
													"    console.log(request_idPessoa);\r",
													"    var response_idPessoa = pm.response.json().content[0].idPessoa;\r",
													"    console.log(response_idPessoa);\r",
													"    pm.expect(request_idPessoa).to.equal(String(response_idPessoa));\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idPessoa=70000844",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "70000844"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER137 - GET: /api/telefones_idPessoa_inexistente(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Valida mensagem de erro\", function () {\r",
													"    var responseBody = pm.response.json();\r",
													"    pm.expect(responseBody.error.message).to.equal(\"O participante informado é inexistente.\");\r",
													"});\r",
													"\r",
													"pm.test(`O número aleatório gerado é ${pm.variables.get(\"randomId\")}`, function () {\r",
													"   \r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var randomId = Math.floor(Math.random() * 15151515) + 1;\r",
													"pm.globals.set(\"randomId\", randomId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idPessoa={{randomId}}",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "{{randomId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER137 - GET: /api/telefones_idPessoa_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar a mensagem de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.errors[0].message).to.eql(\"deve ser um número\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones?idPessoa=A",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "A"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER140 - GET: /api/telefones/id_existente(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.ok;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Buscar por ID existente e valida se o id da resposta é mesmo informado na busca\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.id).to.eql(2879);\r",
													"});\r",
													"\r",
													"// Verifica se o campo \"idTipoTelefone\" contém um valor válido\r",
													"pm.test(\"Verifica o campo idTipoTelefone\", function () {\r",
													"    const idTipoTelefone = pm.response.json().idTipoTelefone;\r",
													"    pm.expect([1, 2, 3]).to.include(idTipoTelefone);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones/2879",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones",
												"2879"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER140 - GET: /api/telefones/id_inexistente(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 422\", function () {\r",
													"    pm.response.to.have.status(422);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Valida mensagem de erro\", function () {\r",
													"    var responseBody = pm.response.json();\r",
													"    pm.expect(responseBody.error.message).to.equal(\"O telefone informado é inexistente.\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones/287977777",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones",
												"287977777"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER140 - GET: /api/telefones/em_branco(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Valida mensagem de erro\", function () {\r",
													"    var responseBody = pm.response.json();\r",
													"    pm.expect(responseBody.error.message).to.equal(\"Faltando query string parameters.\");\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/telefones/api/telefones/",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"telefones",
												"api",
												"telefones",
												""
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Pessoas",
							"item": [
								{
									"name": "HEIM010 - GET:/api/atendimentos/pessoas /v3",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas/api/atendimentos/pessoas/v3?cpf=54087915050",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas",
												"api",
												"atendimentos",
												"pessoas",
												"v3"
											],
											"query": [
												{
													"key": "cpf",
													"value": "54087915050"
												},
												{
													"key": "nome",
													"value": "Jos%C3%A9%20Lima%20da%20Silva",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER054 - GET: /api/pessoas/cpf_inexistente(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Cliente não encontrado\");\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"documentNumber informado não encontrado\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/pessoas/api/pessoas?cpf=55461174605",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas",
												"api",
												"pessoas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "55461174605"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER054 - GET: /api/pessoas/cpf_existente(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"   });\r",
													"\r",
													"   pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.ok;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"    });\r",
													"\r",
													"pm.test(\"Valida a estrutura do corpo\", function () {\r",
													"    const schema = pm.variables.get(\"schema\");\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"pm.test(\"Valida que o campo id não pode ser vazio\", function () {\r",
													"       const resp = pm.response.json()\r",
													"       pm.expect(resp.content[0].id).not.to.equal(\"\");  \r",
													" });\r",
													"\r",
													"pm.test(\"Valida que o campo id não pode ser nulo\", function () {\r",
													"       const resp = pm.response.json()\r",
													"       pm.expect(resp.content[0].id).not.equal(null);   \r",
													"});\r",
													"\r",
													"pm.test(\"Validar o valor do query param com o valor cpf do response\", function () {\r",
													"        const str = pm.request.url.getQueryString();\r",
													"        let arr = str.split(\"=\")\r",
													"        const res = pm.response.json()\r",
													"        pm.expect(res.content[0].cpf).to.equal(arr[1]); \r",
													"        console.log(\"valor\", arr[1]);   \r",
													"});    \r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"content\": {\r",
													"      \"type\": \"array\",\r",
													"      \"items\": {\r",
													"        \"type\": \"object\",\r",
													"        \"properties\": {\r",
													"          \"id\": {\r",
													"            \"type\": \"number\"\r",
													"          },\r",
													"          \"nome\": {\r",
													"            \"type\": \"string\"\r",
													"          },\r",
													"          \"tipo\": {\r",
													"            \"type\": \"string\"\r",
													"          },\r",
													"          \"cpf\": {\r",
													"            \"type\": \"string\"\r",
													"          },\r",
													"          \"dataNascimento\": {\r",
													"            \"type\": \"string\"\r",
													"          },\r",
													"          \"sexo\": {\r",
													"            \"type\": \"string\"\r",
													"          }\r",
													"        },\r",
													"        \"required\": [\r",
													"          \"id\",\r",
													"          \"nome\",\r",
													"          \"tipo\",\r",
													"          \"cpf\",\r",
													"          \"dataNascimento\",\r",
													"          \"sexo\"\r",
													"        ]\r",
													"      }\r",
													"    },\r",
													"    \"first\": {\r",
													"      \"type\": \"boolean\"\r",
													"    },\r",
													"    \"firstPage\": {\r",
													"      \"type\": \"boolean\"\r",
													"    },\r",
													"    \"hasContent\": {\r",
													"      \"type\": \"boolean\"\r",
													"    },\r",
													"    \"hasNextPage\": {\r",
													"      \"type\": \"boolean\"\r",
													"    },\r",
													"    \"hasPreviousPage\": {\r",
													"      \"type\": \"boolean\"\r",
													"    },\r",
													"    \"last\": {\r",
													"      \"type\": \"boolean\"\r",
													"    },\r",
													"    \"nextPage\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"number\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"numberOfElements\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"previousPage\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"size\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"totalElements\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"totalPages\": {\r",
													"      \"type\": \"number\"\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"content\",\r",
													"    \"first\",\r",
													"    \"firstPage\",\r",
													"    \"hasContent\",\r",
													"    \"hasNextPage\",\r",
													"    \"hasPreviousPage\",\r",
													"    \"last\",\r",
													"    \"nextPage\",\r",
													"    \"number\",\r",
													"    \"numberOfElements\",\r",
													"    \"previousPage\",\r",
													"    \"size\",\r",
													"    \"totalElements\",\r",
													"    \"totalPages\"\r",
													"  ]\r",
													"}\r",
													");"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/pessoas/api/pessoas?cpf=34912196800",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas",
												"api",
												"pessoas"
											],
											"query": [
												{
													"key": "cpf",
													"value": "34912196800"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER055 - GET: /api/pessoas-detalhes/idPessoa_existente(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"    pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    const schema = pm.variables.get(\"schema\");\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"    });\r",
													"\r",
													"\r",
													"    pm.test(\"Validar o formato do campo email\", function () {\r",
													"        var data = pm.response.json();\r",
													"        pm.expect(data.email).to.match(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/);\r",
													"\r",
													"    });\r",
													"\r",
													"    pm.test(\"Validar a comparação idPessoa entre Request e Response\", function () {\r",
													"       var url = pm.request.url.toString();\r",
													"       var value = url.split(\"/\");\r",
													"       for(var x=0; x<=value.length-1; x++){\r",
													"           if(value[x].match(value[x], /^[0-9]+$/)){\r",
													"               var requestIdUrl = value[x].toString();\r",
													"           }\r",
													"       }\r",
													"       var respondeIdPessoa = pm.response.json();\r",
													"       pm.expect(respondeIdPessoa.idPessoa).to.equal(parseInt(requestIdUrl));\r",
													"       \r",
													"    });\r",
													"\r",
													"\r",
													"    pm.test(\"GET Status code is 200\", function () {\r",
													"        pm.response.to.have.status(200);\r",
													"    });\r",
													"\r",
													"    pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.ok;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"    });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"idPessoa\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"nomeMae\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"idEstadoCivil\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"idNacionalidade\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"email\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"salario\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"impedidoFinanciamento\": {\r",
													"      \"type\": \"boolean\"\r",
													"    },\r",
													"    \"naturalidadeCidade\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"naturalidadeEstado\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"grauInstrucao\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"numeroDependentes\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"nomePai\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"pessoaPoliticamenteExposta\": {\r",
													"      \"type\": \"boolean\"\r",
													"    },\r",
													"    \"patrimonioTotal\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"flagNomePaiNaoInformado\": {\r",
													"      \"type\": \"boolean\"\r",
													"    },\r",
													"    \"flagSemEnderecoComercialFixo\": {\r",
													"      \"type\": \"boolean\"\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"idPessoa\",\r",
													"    \"nomeMae\",\r",
													"    \"idEstadoCivil\",\r",
													"    \"idNacionalidade\",\r",
													"    \"email\",\r",
													"    \"salario\",\r",
													"    \"impedidoFinanciamento\",\r",
													"    \"naturalidadeCidade\",\r",
													"    \"naturalidadeEstado\",\r",
													"    \"grauInstrucao\",\r",
													"    \"numeroDependentes\",\r",
													"    \"nomePai\",\r",
													"    \"pessoaPoliticamenteExposta\",\r",
													"    \"patrimonioTotal\",\r",
													"    \"flagNomePaiNaoInformado\",\r",
													"    \"flagSemEnderecoComercialFixo\"\r",
													"  ]\r",
													"}\r",
													");\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/1598",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"1598"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER055 - GET: /api/pessoas-detalhes/idPessoa_inexistente(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"    pm.test(\"GET Status code is 400\", function () {\r",
													"        pm.response.to.have.status(400);\r",
													"    });\r",
													"    pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.badRequest;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"        \r",
													"    pm.test(\"Validar a estrutura do response\", function () {\r",
													"        var jsonData = pm.response.json();\r",
													"        pm.expect(jsonData.error.errors).to.be.an(\"array\");\r",
													"        pm.expect(jsonData.error.errorCode).equal(\"0009\");\r",
													"        pm.expect(jsonData.error.message).equal(\"O participante informado é inexistente.\"); \r",
													"    });\r",
													"\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/9910491111",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"9910491111"
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM065 - GET:/api/pessoas/{id}/cadastro/v1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas/api/pessoas/23/cadastro",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas",
												"api",
												"pessoas",
												"23",
												"cadastro"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER129 - GET: api/pessoas/{id} - id inexistente(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"  pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"    });\r",
													"\r",
													"    pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"        pm.response.to.be.notFound;\r",
													"        pm.response.to.be.withBody;\r",
													"        pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar a estrutura do response\", function () {\r",
													"        var jsonData = pm.response.json();\r",
													"        pm.expect(jsonData.error.errors).to.be.an(\"array\");\r",
													"        pm.expect(jsonData.error.errorCode).equal(\"0009\");\r",
													"        pm.expect(jsonData.error.message).equal(\"O participante informado é inexistente.\"); \r",
													"        \r",
													" });\r",
													"\r",
													"  \r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-trace-id",
												"value": "70bf9eb7-1153-41a1-83a4-353ea878dc06",
												"type": "text"
											},
											{
												"key": "x-correlation-id",
												"value": "9c6cea8d-0e5e-46ac-adfd-56c6cc848c71",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas/api/pessoas?id=1196666",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas",
												"api",
												"pessoas"
											],
											"query": [
												{
													"key": "id",
													"value": "1196666"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER135 - GET: /api/pessoas-detalhes/{id}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/23",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"23"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER131 - PATCH: /api/pessoas/{id}/detalhes",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas/123/detalhes",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas",
												"123",
												"detalhes"
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM020 - Atualizar Nome Impresso",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "apikey",
												"value": "TGoGobRgn3lHBpYeLdL66EXiDjFM82EZ",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"nomeImpresso\":\"Joao Pedro da Silva\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/{id}/pessoas/{idPessoa}/portadores/v2",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"{id}",
												"pessoas",
												"{idPessoa}",
												"portadores",
												"v2"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/incluir_pessoa(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.ok\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"const schema = \r",
													"    \r",
													"   {\r",
													"    \"type\": \"object\",\r",
													"    \"default\": {},\r",
													"    \"title\": \"Root Schema\",\r",
													"    \"required\": [\r",
													"        \"idPessoa\",\r",
													"        \"nomeMae\",\r",
													"        \"idEstadoCivil\",\r",
													"        \"idNaturezaOcupacao\",\r",
													"        \"idProfissao\",\r",
													"        \"idNacionalidade\",\r",
													"        \"naturalidadeCidade\",\r",
													"        \"naturalidadeEstado\",\r",
													"        \"grauInstrucao\",\r",
													"        \"email\",\r",
													"        \"numeroCnh\",\r",
													"        \"dataEmissaoCnh\",\r",
													"        \"pessoaPoliticamenteExposta\",\r",
													"        \"patrimonioTotal\",\r",
													"        \"salario\",\r",
													"        \"nomeEmpresa\",\r",
													"        \"impedidoFinanciamento\",\r",
													"        \"chequeEspecial\",\r",
													"        \"flagSemEnderecoComercialFixo\",\r",
													"        \"nomePai\",\r",
													"        \"numeroDependentes\",\r",
													"        \"numeroBanco\",\r",
													"        \"numeroAgencia\",\r",
													"        \"numeroContaCorrente\",\r",
													"        \"nomeReferencia1\",\r",
													"        \"enderecoReferencia1\",\r",
													"        \"nomeReferencia2\",\r",
													"        \"enderecoReferencia2\"\r",
													"    ],\r",
													"    \"properties\": {\r",
													"        \"idPessoa\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The idPessoa Schema\",\r",
													"            \"examples\": [\r",
													"                1497\r",
													"            ]\r",
													"        },\r",
													"        \"nomeMae\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The nomeMae Schema\",\r",
													"            \"examples\": [\r",
													"                \"Annie Lennox\"\r",
													"            ]\r",
													"        },\r",
													"        \"idEstadoCivil\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The idEstadoCivil Schema\",\r",
													"            \"examples\": [\r",
													"                1\r",
													"            ]\r",
													"        },\r",
													"        \"idNaturezaOcupacao\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The idNaturezaOcupacao Schema\",\r",
													"            \"examples\": [\r",
													"                9876987\r",
													"            ]\r",
													"        },\r",
													"        \"idProfissao\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The idProfissao Schema\",\r",
													"            \"examples\": [\r",
													"                \"Engenheiro\"\r",
													"            ]\r",
													"        },\r",
													"        \"idNacionalidade\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The idNacionalidade Schema\",\r",
													"            \"examples\": [\r",
													"                76\r",
													"            ]\r",
													"        },\r",
													"        \"naturalidadeCidade\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The naturalidadeCidade Schema\",\r",
													"            \"examples\": [\r",
													"                \"São Paulo\"\r",
													"            ]\r",
													"        },\r",
													"        \"naturalidadeEstado\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The naturalidadeEstado Schema\",\r",
													"            \"examples\": [\r",
													"                \"SP\"\r",
													"            ]\r",
													"        },\r",
													"        \"grauInstrucao\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The grauInstrucao Schema\",\r",
													"            \"examples\": [\r",
													"                1\r",
													"            ]\r",
													"        },\r",
													"        \"email\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The email Schema\",\r",
													"            \"examples\": [\r",
													"                \"massa@email.com\"\r",
													"            ]\r",
													"        },\r",
													"        \"numeroCnh\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The numeroCnh Schema\",\r",
													"            \"examples\": [\r",
													"                \"23143031556\"\r",
													"            ]\r",
													"        },\r",
													"        \"dataEmissaoCnh\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The dataEmissaoCnh Schema\",\r",
													"            \"examples\": [\r",
													"                \"2020-10-31\"\r",
													"            ]\r",
													"        },\r",
													"        \"pessoaPoliticamenteExposta\": {\r",
													"            \"type\": \"boolean\",\r",
													"            \"default\": false,\r",
													"            \"title\": \"The pessoaPoliticamenteExposta Schema\",\r",
													"            \"examples\": [\r",
													"                false\r",
													"            ]\r",
													"        },\r",
													"        \"patrimonioTotal\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The patrimonioTotal Schema\",\r",
													"            \"examples\": [\r",
													"                100000\r",
													"            ]\r",
													"        },\r",
													"        \"salario\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The salario Schema\",\r",
													"            \"examples\": [\r",
													"                2200\r",
													"            ]\r",
													"        },\r",
													"        \"nomeEmpresa\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The nomeEmpresa Schema\",\r",
													"            \"examples\": [\r",
													"                \"some company\"\r",
													"            ]\r",
													"        },\r",
													"        \"impedidoFinanciamento\": {\r",
													"            \"type\": \"boolean\",\r",
													"            \"default\": false,\r",
													"            \"title\": \"The impedidoFinanciamento Schema\",\r",
													"            \"examples\": [\r",
													"                false\r",
													"            ]\r",
													"        },\r",
													"        \"chequeEspecial\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The chequeEspecial Schema\",\r",
													"            \"examples\": [\r",
													"                0\r",
													"            ]\r",
													"        },\r",
													"        \"flagSemEnderecoComercialFixo\": {\r",
													"            \"type\": \"boolean\",\r",
													"            \"default\": false,\r",
													"            \"title\": \"The flagSemEnderecoComercialFixo Schema\",\r",
													"            \"examples\": [\r",
													"                false\r",
													"            ]\r",
													"        },\r",
													"        \"nomePai\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The nomePai Schema\",\r",
													"            \"examples\": [\r",
													"                \"Pai da Silva\"\r",
													"            ]\r",
													"        },\r",
													"        \"numeroDependentes\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The numeroDependentes Schema\",\r",
													"            \"examples\": [\r",
													"                2\r",
													"            ]\r",
													"        },\r",
													"        \"numeroBanco\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The numeroBanco Schema\",\r",
													"            \"examples\": [\r",
													"                12345\r",
													"            ]\r",
													"        },\r",
													"        \"numeroAgencia\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The numeroAgencia Schema\",\r",
													"            \"examples\": [\r",
													"                12349\r",
													"            ]\r",
													"        },\r",
													"        \"numeroContaCorrente\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The numeroContaCorrente Schema\",\r",
													"            \"examples\": [\r",
													"                \"9865544\"\r",
													"            ]\r",
													"        },\r",
													"        \"nomeReferencia1\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The nomeReferencia1 Schema\",\r",
													"            \"examples\": [\r",
													"                \"some nomeReferencia1\"\r",
													"            ]\r",
													"        },\r",
													"        \"enderecoReferencia1\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The enderecoReferencia1 Schema\",\r",
													"            \"examples\": [\r",
													"                \"some enderecoReferencia1\"\r",
													"            ]\r",
													"        },\r",
													"        \"nomeReferencia2\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The nomeReferencia2 Schema\",\r",
													"            \"examples\": [\r",
													"                \"some nomeReferencia2\"\r",
													"            ]\r",
													"        },\r",
													"        \"enderecoReferencia2\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The enderecoReferencia2 Schema\",\r",
													"            \"examples\": [\r",
													"                \"some enderecoReferencia2\"\r",
													"            ]\r",
													"        }\r",
													"    },\r",
													"    \"examples\": [{\r",
													"        \"idPessoa\": 1497,\r",
													"        \"nomeMae\": \"Annie Lennox\",\r",
													"        \"idEstadoCivil\": 1,\r",
													"        \"idNaturezaOcupacao\": 9876987,\r",
													"        \"idProfissao\": \"Engenheiro\",\r",
													"        \"idNacionalidade\": 76,\r",
													"        \"naturalidadeCidade\": \"São Paulo\",\r",
													"        \"naturalidadeEstado\": \"SP\",\r",
													"        \"grauInstrucao\": 1,\r",
													"        \"email\": \"massa@email.com\",\r",
													"        \"numeroCnh\": \"23143031556\",\r",
													"        \"dataEmissaoCnh\": \"2020-10-31\",\r",
													"        \"pessoaPoliticamenteExposta\": false,\r",
													"        \"patrimonioTotal\": 100000,\r",
													"        \"salario\": 2200,\r",
													"        \"nomeEmpresa\": \"some company\",\r",
													"        \"impedidoFinanciamento\": false,\r",
													"        \"chequeEspecial\": 0,\r",
													"        \"flagSemEnderecoComercialFixo\": false,\r",
													"        \"nomePai\": \"Pai da Silva\",\r",
													"        \"numeroDependentes\": 2,\r",
													"        \"numeroBanco\": 12345,\r",
													"        \"numeroAgencia\": 12349,\r",
													"        \"numeroContaCorrente\": \"9865544\",\r",
													"        \"nomeReferencia1\": \"some nomeReferencia1\",\r",
													"        \"enderecoReferencia1\": \"some enderecoReferencia1\",\r",
													"        \"nomeReferencia2\": \"some nomeReferencia2\",\r",
													"        \"enderecoReferencia2\": \"some enderecoReferencia2\"\r",
													"    }]\r",
													"}\r",
													"\r",
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"const schema = \r",
													"    \r",
													"   {\r",
													"    \"type\": \"object\",\r",
													"    \"default\": {},\r",
													"    \"title\": \"Root Schema\",\r",
													"    \"required\": [\r",
													"        \"idPessoa\",\r",
													"        \"nomeMae\",\r",
													"        \"idEstadoCivil\",\r",
													"        \"idNaturezaOcupacao\",\r",
													"        \"idProfissao\",\r",
													"        \"idNacionalidade\",\r",
													"        \"naturalidadeCidade\",\r",
													"        \"naturalidadeEstado\",\r",
													"        \"grauInstrucao\",\r",
													"        \"email\",\r",
													"        \"numeroCnh\",\r",
													"        \"dataEmissaoCnh\",\r",
													"        \"pessoaPoliticamenteExposta\",\r",
													"        \"patrimonioTotal\",\r",
													"        \"salario\",\r",
													"        \"nomeEmpresa\",\r",
													"        \"impedidoFinanciamento\",\r",
													"        \"chequeEspecial\",\r",
													"        \"flagSemEnderecoComercialFixo\",\r",
													"        \"nomePai\",\r",
													"        \"numeroDependentes\",\r",
													"        \"numeroBanco\",\r",
													"        \"numeroAgencia\",\r",
													"        \"numeroContaCorrente\",\r",
													"        \"nomeReferencia1\",\r",
													"        \"enderecoReferencia1\",\r",
													"        \"nomeReferencia2\",\r",
													"        \"enderecoReferencia2\"\r",
													"    ],\r",
													"    \"properties\": {\r",
													"        \"idPessoa\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The idPessoa Schema\",\r",
													"            \"examples\": [\r",
													"                1497\r",
													"            ]\r",
													"        },\r",
													"        \"nomeMae\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The nomeMae Schema\",\r",
													"            \"examples\": [\r",
													"                \"Annie Lennox\"\r",
													"            ]\r",
													"        },\r",
													"        \"idEstadoCivil\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The idEstadoCivil Schema\",\r",
													"            \"examples\": [\r",
													"                1\r",
													"            ]\r",
													"        },\r",
													"        \"idNaturezaOcupacao\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The idNaturezaOcupacao Schema\",\r",
													"            \"examples\": [\r",
													"                9876987\r",
													"            ]\r",
													"        },\r",
													"        \"idProfissao\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The idProfissao Schema\",\r",
													"            \"examples\": [\r",
													"                \"Engenheiro\"\r",
													"            ]\r",
													"        },\r",
													"        \"idNacionalidade\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The idNacionalidade Schema\",\r",
													"            \"examples\": [\r",
													"                76\r",
													"            ]\r",
													"        },\r",
													"        \"naturalidadeCidade\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The naturalidadeCidade Schema\",\r",
													"            \"examples\": [\r",
													"                \"São Paulo\"\r",
													"            ]\r",
													"        },\r",
													"        \"naturalidadeEstado\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The naturalidadeEstado Schema\",\r",
													"            \"examples\": [\r",
													"                \"SP\"\r",
													"            ]\r",
													"        },\r",
													"        \"grauInstrucao\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The grauInstrucao Schema\",\r",
													"            \"examples\": [\r",
													"                1\r",
													"            ]\r",
													"        },\r",
													"        \"email\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The email Schema\",\r",
													"            \"examples\": [\r",
													"                \"massa@email.com\"\r",
													"            ]\r",
													"        },\r",
													"        \"numeroCnh\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The numeroCnh Schema\",\r",
													"            \"examples\": [\r",
													"                \"23143031556\"\r",
													"            ]\r",
													"        },\r",
													"        \"dataEmissaoCnh\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The dataEmissaoCnh Schema\",\r",
													"            \"examples\": [\r",
													"                \"2020-10-31\"\r",
													"            ]\r",
													"        },\r",
													"        \"pessoaPoliticamenteExposta\": {\r",
													"            \"type\": \"boolean\",\r",
													"            \"default\": false,\r",
													"            \"title\": \"The pessoaPoliticamenteExposta Schema\",\r",
													"            \"examples\": [\r",
													"                false\r",
													"            ]\r",
													"        },\r",
													"        \"patrimonioTotal\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The patrimonioTotal Schema\",\r",
													"            \"examples\": [\r",
													"                100000\r",
													"            ]\r",
													"        },\r",
													"        \"salario\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The salario Schema\",\r",
													"            \"examples\": [\r",
													"                2200\r",
													"            ]\r",
													"        },\r",
													"        \"nomeEmpresa\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The nomeEmpresa Schema\",\r",
													"            \"examples\": [\r",
													"                \"some company\"\r",
													"            ]\r",
													"        },\r",
													"        \"impedidoFinanciamento\": {\r",
													"            \"type\": \"boolean\",\r",
													"            \"default\": false,\r",
													"            \"title\": \"The impedidoFinanciamento Schema\",\r",
													"            \"examples\": [\r",
													"                false\r",
													"            ]\r",
													"        },\r",
													"        \"chequeEspecial\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The chequeEspecial Schema\",\r",
													"            \"examples\": [\r",
													"                0\r",
													"            ]\r",
													"        },\r",
													"        \"flagSemEnderecoComercialFixo\": {\r",
													"            \"type\": \"boolean\",\r",
													"            \"default\": false,\r",
													"            \"title\": \"The flagSemEnderecoComercialFixo Schema\",\r",
													"            \"examples\": [\r",
													"                false\r",
													"            ]\r",
													"        },\r",
													"        \"nomePai\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The nomePai Schema\",\r",
													"            \"examples\": [\r",
													"                \"Pai da Silva\"\r",
													"            ]\r",
													"        },\r",
													"        \"numeroDependentes\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The numeroDependentes Schema\",\r",
													"            \"examples\": [\r",
													"                2\r",
													"            ]\r",
													"        },\r",
													"        \"numeroBanco\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The numeroBanco Schema\",\r",
													"            \"examples\": [\r",
													"                12345\r",
													"            ]\r",
													"        },\r",
													"        \"numeroAgencia\": {\r",
													"            \"type\": \"integer\",\r",
													"            \"default\": 0,\r",
													"            \"title\": \"The numeroAgencia Schema\",\r",
													"            \"examples\": [\r",
													"                12349\r",
													"            ]\r",
													"        },\r",
													"        \"numeroContaCorrente\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The numeroContaCorrente Schema\",\r",
													"            \"examples\": [\r",
													"                \"9865544\"\r",
													"            ]\r",
													"        },\r",
													"        \"nomeReferencia1\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The nomeReferencia1 Schema\",\r",
													"            \"examples\": [\r",
													"                \"some nomeReferencia1\"\r",
													"            ]\r",
													"        },\r",
													"        \"enderecoReferencia1\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The enderecoReferencia1 Schema\",\r",
													"            \"examples\": [\r",
													"                \"some enderecoReferencia1\"\r",
													"            ]\r",
													"        },\r",
													"        \"nomeReferencia2\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The nomeReferencia2 Schema\",\r",
													"            \"examples\": [\r",
													"                \"some nomeReferencia2\"\r",
													"            ]\r",
													"        },\r",
													"        \"enderecoReferencia2\": {\r",
													"            \"type\": \"string\",\r",
													"            \"default\": \"\",\r",
													"            \"title\": \"The enderecoReferencia2 Schema\",\r",
													"            \"examples\": [\r",
													"                \"some enderecoReferencia2\"\r",
													"            ]\r",
													"        }\r",
													"    },\r",
													"    \"examples\": [{\r",
													"        \"idPessoa\": 1497,\r",
													"        \"nomeMae\": \"Annie Lennox\",\r",
													"        \"idEstadoCivil\": 1,\r",
													"        \"idNaturezaOcupacao\": 9876987,\r",
													"        \"idProfissao\": \"Engenheiro\",\r",
													"        \"idNacionalidade\": 76,\r",
													"        \"naturalidadeCidade\": \"São Paulo\",\r",
													"        \"naturalidadeEstado\": \"SP\",\r",
													"        \"grauInstrucao\": 1,\r",
													"        \"email\": \"massa@email.com\",\r",
													"        \"numeroCnh\": \"23143031556\",\r",
													"        \"dataEmissaoCnh\": \"2020-10-31\",\r",
													"        \"pessoaPoliticamenteExposta\": false,\r",
													"        \"patrimonioTotal\": 100000,\r",
													"        \"salario\": 2200,\r",
													"        \"nomeEmpresa\": \"some company\",\r",
													"        \"impedidoFinanciamento\": false,\r",
													"        \"chequeEspecial\": 0,\r",
													"        \"flagSemEnderecoComercialFixo\": false,\r",
													"        \"nomePai\": \"Pai da Silva\",\r",
													"        \"numeroDependentes\": 2,\r",
													"        \"numeroBanco\": 12345,\r",
													"        \"numeroAgencia\": 12349,\r",
													"        \"numeroContaCorrente\": \"9865544\",\r",
													"        \"nomeReferencia1\": \"some nomeReferencia1\",\r",
													"        \"enderecoReferencia1\": \"some enderecoReferencia1\",\r",
													"        \"nomeReferencia2\": \"some nomeReferencia2\",\r",
													"        \"enderecoReferencia2\": \"some enderecoReferencia2\"\r",
													"    }]\r",
													"};"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1497&nomeMae=Annie Lennox&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=9865544&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=SP&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1497"
												},
												{
													"key": "nomeMae",
													"value": "Annie Lennox"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "9865544"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "SP"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/numeroBanco_>_esperado(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//https://viverebrasil.atlassian.net/browse/FLOR-7174 rejeitado pelo DEV\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1498&nomeMae=Mae Silva&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=344&numeroAgencia=12349&numeroContaCorrente=123456789&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=SP&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1498"
												},
												{
													"key": "nomeMae",
													"value": "Mae Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "344"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "SP"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/numeroBanco - letra e numero(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    const schema = pm.variables.get(\"schema\");\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"   \r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"deve ser um número\");\r",
													"\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"error\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"errorCode\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"message\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"errors\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": {\r",
													"            \"type\": \"object\",\r",
													"            \"properties\": {\r",
													"              \"schemaPath\": {\r",
													"                \"type\": \"string\"\r",
													"              },\r",
													"              \"params\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                  \"type\": {\r",
													"                    \"type\": \"string\"\r",
													"                  }\r",
													"                },\r",
													"                \"required\": [\r",
													"                  \"type\"\r",
													"                ]\r",
													"              },\r",
													"              \"message\": {\r",
													"                \"type\": \"string\"\r",
													"              }\r",
													"            },\r",
													"            \"required\": [\r",
													"              \"schemaPath\",\r",
													"              \"params\",\r",
													"              \"message\"\r",
													"            ]\r",
													"          }\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"errorCode\",\r",
													"        \"message\",\r",
													"        \"errors\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"error\"\r",
													"  ]\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1498&nomeMae=Mae Silva&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=99a&numeroAgencia=12349&numeroContaCorrente=123456789&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1498"
												},
												{
													"key": "nomeMae",
													"value": "Mae Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "99a"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ numeroagencia_>_5(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//https://viverebrasil.atlassian.net/browse/FLOR-7219 rejeitado pelo DEV\r",
													"\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1498&nomeMae=Mae Silva&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=999999&numeroContaCorrente=123456789&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=SP&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1498"
												},
												{
													"key": "nomeMae",
													"value": "Mae Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "999999"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "SP"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ Validação da tag numeroagencia com digito(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    const schema = pm.variables.get(\"schema\");\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar as mensagem apresentadas no response\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error.message).be.equal(\"Erro ao validar os dados de entrada.\");\r",
													"    pm.expect(jsonData.error.errors[0].schemaPath).be.equal(\"#/properties/numeroAgencia/type\");\r",
													"    pm.expect(jsonData.error.errors[0].params.type).be.equal(\"number\");\r",
													"    pm.expect(jsonData.error.errors[0].message).be.equal(\"deve ser um número\");\r",
													"\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"error\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"errorCode\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"message\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"errors\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": {\r",
													"            \"type\": \"object\",\r",
													"            \"properties\": {\r",
													"              \"schemaPath\": {\r",
													"                \"type\": \"string\"\r",
													"              },\r",
													"              \"params\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                  \"type\": {\r",
													"                    \"type\": \"string\"\r",
													"                  }\r",
													"                },\r",
													"                \"required\": [\r",
													"                  \"type\"\r",
													"                ]\r",
													"              },\r",
													"              \"message\": {\r",
													"                \"type\": \"string\"\r",
													"              }\r",
													"            },\r",
													"            \"required\": [\r",
													"              \"schemaPath\",\r",
													"              \"params\",\r",
													"              \"message\"\r",
													"            ]\r",
													"          }\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"errorCode\",\r",
													"        \"message\",\r",
													"        \"errors\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"error\"\r",
													"  ]\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1498&nomeMae=Mae Silva&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=100-8&numeroContaCorrente=123456789&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=DF&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1498"
												},
												{
													"key": "nomeMae",
													"value": "Mae Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "100-8"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "DF"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ NumeroContacorrente_maior_15_caracteres(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//https://viverebrasil.atlassian.net/browse/FLOR-7345 rejeitado pelo DEV\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1498&nomeMae=Mae Silva&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12345&numeroContaCorrente=123456789123456799999999&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=SP&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1498"
												},
												{
													"key": "nomeMae",
													"value": "Mae Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12345"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789123456799999999"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "SP"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ email_maior_50_caracteres(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//https://viverebrasil.atlassian.net/browse/FLOR-7346 rejeitado pelo DEV\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1498&nomeMae=Mae Silva&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12345&numeroContaCorrente=12345&email=massa@emailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemail.com&naturalidadeCidade=São Paulo&naturalidadeEstado=SP&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1498"
												},
												{
													"key": "nomeMae",
													"value": "Mae Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12345"
												},
												{
													"key": "numeroContaCorrente",
													"value": "12345"
												},
												{
													"key": "email",
													"value": "massa@emailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemailemail.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "SP"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ nomeEmpresa_maior_100_caracteres(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//https://viverebrasil.atlassian.net/browse/FLOR-7347 rejeitado pelo DEV\r",
													"\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    \r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1498&nomeMae=Mae Silva&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12345&numeroContaCorrente=12345&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=SP&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company some companysome companysome companysome companysome companysome companysome companysome companysome companysome companysome companysome companysome company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1498"
												},
												{
													"key": "nomeMae",
													"value": "Mae Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12345"
												},
												{
													"key": "numeroContaCorrente",
													"value": "12345"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "SP"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company some companysome companysome companysome companysome companysome companysome companysome companysome companysome companysome companysome companysome company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ nomeReferencia1_>_80_caracteres(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//https://viverebrasil.atlassian.net/browse/FLOR-7348 rejeitado pelo DEV\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    \r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1498&nomeMae=Mae Silva&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12345&numeroContaCorrente=12345&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=SP&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1 some nomeReferencia1 some nomeReferencia1some nomeReferencia1some nomeReferencia1some nomeReferencia1some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1498"
												},
												{
													"key": "nomeMae",
													"value": "Mae Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12345"
												},
												{
													"key": "numeroContaCorrente",
													"value": "12345"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "SP"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1 some nomeReferencia1 some nomeReferencia1some nomeReferencia1some nomeReferencia1some nomeReferencia1some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ naturalidadeCidade_>_100_caracteres(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"\r",
													"pm.test(\"Status code is 422\", function () {\r",
													"    pm.response.to.have.status(422);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"city informado não respeita o domínio ou não pertence ao state informado/cadastrado\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1497&nomeMae=Mae SilvaMae&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=123456789&email=massa@email.com&naturalidadeCidade=São Pauloooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo&naturalidadeEstado=SP&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1497"
												},
												{
													"key": "nomeMae",
													"value": "Mae SilvaMae"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Pauloooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "SP"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "POST: /api/pessoas-detalhes/ naturalidadeEstado_>_2_caractere(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.badRequest;\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"[format attribute \\\"float\\\" not supported, string \\\"SPRR\\\" is too long (length: 4, maximum allowed: 2)]\");\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"error\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"errorCode\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"message\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"errors\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": {\r",
													"            \"type\": \"object\",\r",
													"            \"properties\": {\r",
													"              \"schemaPath\": {\r",
													"                \"type\": \"string\"\r",
													"              },\r",
													"              \"params\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                  \"limit\": {\r",
													"                    \"type\": \"number\"\r",
													"                  }\r",
													"                },\r",
													"                \"required\": [\r",
													"                  \"limit\"\r",
													"                ]\r",
													"              },\r",
													"              \"message\": {\r",
													"                \"type\": \"string\"\r",
													"              }\r",
													"            },\r",
													"            \"required\": [\r",
													"              \"schemaPath\",\r",
													"              \"params\",\r",
													"              \"message\"\r",
													"            ]\r",
													"          }\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"errorCode\",\r",
													"        \"message\",\r",
													"        \"errors\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"error\"\r",
													"  ]\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?nomeMae=Mae SilvaMae&idEstadoCivil=1&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=123456789&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=SPRR&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000&idPessoa=1598",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "nomeMae",
													"value": "Mae SilvaMae"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro",
													"disabled": true
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "SPRR"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31"
												},
												{
													"key": "numeroDependentes",
													"value": "2"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												},
												{
													"key": "idPessoa",
													"value": "1598"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ numeroDependentes_>_255(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//https://viverebrasil.atlassian.net/browse/FLOR-7356 rejeitado pelo DEV\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1497&nomeMae=Mae SilvaMae&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=123456789&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=SP&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=257&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1497"
												},
												{
													"key": "nomeMae",
													"value": "Mae SilvaMae"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "SP"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "257"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ nomePai_>_80_caracteres(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//https://viverebrasil.atlassian.net/browse/FLOR-7357 rejeitado pelo DEV\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"error\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"errorCode\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"message\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"errors\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": {\r",
													"            \"type\": \"object\",\r",
													"            \"properties\": {\r",
													"              \"schemaPath\": {\r",
													"                \"type\": \"string\"\r",
													"              },\r",
													"              \"params\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                  \"limit\": {\r",
													"                    \"type\": \"number\"\r",
													"                  }\r",
													"                },\r",
													"                \"required\": [\r",
													"                  \"limit\"\r",
													"                ]\r",
													"              },\r",
													"              \"message\": {\r",
													"                \"type\": \"string\"\r",
													"              }\r",
													"            },\r",
													"            \"required\": [\r",
													"              \"schemaPath\",\r",
													"              \"params\",\r",
													"              \"message\"\r",
													"            ]\r",
													"          }\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"errorCode\",\r",
													"        \"message\",\r",
													"        \"errors\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"error\"\r",
													"  ]\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1497&nomeMae=Mae SilvaMae&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=123456789&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=SP&grauInstrucao=1&nomePai=HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=255&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1497"
												},
												{
													"key": "nomeMae",
													"value": "Mae SilvaMae"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "SP"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "255"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ numeroCnh_>_15_caracteres(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//https://viverebrasil.atlassian.net/browse/FLOR-7359 rejeitado pelo DEV\r",
													"\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"   \r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"error\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"errorCode\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"message\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"errors\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": {\r",
													"            \"type\": \"object\",\r",
													"            \"properties\": {\r",
													"              \"schemaPath\": {\r",
													"                \"type\": \"string\"\r",
													"              },\r",
													"              \"params\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                  \"limit\": {\r",
													"                    \"type\": \"number\"\r",
													"                  }\r",
													"                },\r",
													"                \"required\": [\r",
													"                  \"limit\"\r",
													"                ]\r",
													"              },\r",
													"              \"message\": {\r",
													"                \"type\": \"string\"\r",
													"              }\r",
													"            },\r",
													"            \"required\": [\r",
													"              \"schemaPath\",\r",
													"              \"params\",\r",
													"              \"message\"\r",
													"            ]\r",
													"          }\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"errorCode\",\r",
													"        \"message\",\r",
													"        \"errors\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"error\"\r",
													"  ]\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1497&nomeMae=Mae SilvaMae&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=123456789&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=SP&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=AAAAAAAAAA&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=255&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1497"
												},
												{
													"key": "nomeMae",
													"value": "Mae SilvaMae"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "SP"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "AAAAAAAAAA"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "255"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ numeroCnh_letras(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//https://viverebrasil.atlassian.net/browse/FLOR-7360 rejeitado pelo DEV\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"   \r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"error\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"errorCode\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"message\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"errors\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": {\r",
													"            \"type\": \"object\",\r",
													"            \"properties\": {\r",
													"              \"schemaPath\": {\r",
													"                \"type\": \"string\"\r",
													"              },\r",
													"              \"params\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                  \"limit\": {\r",
													"                    \"type\": \"number\"\r",
													"                  }\r",
													"                },\r",
													"                \"required\": [\r",
													"                  \"limit\"\r",
													"                ]\r",
													"              },\r",
													"              \"message\": {\r",
													"                \"type\": \"string\"\r",
													"              }\r",
													"            },\r",
													"            \"required\": [\r",
													"              \"schemaPath\",\r",
													"              \"params\",\r",
													"              \"message\"\r",
													"            ]\r",
													"          }\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"errorCode\",\r",
													"        \"message\",\r",
													"        \"errors\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"error\"\r",
													"  ]\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1497&nomeMae=Mae SilvaMae&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=123456789&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=SP&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=aaaaaaaaaa&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=255&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1497"
												},
												{
													"key": "nomeMae",
													"value": "Mae SilvaMae"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "Engenheiro"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9876987"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "SP"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "aaaaaaaaaa"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2020-10-31T01:30:00.000-05:00"
												},
												{
													"key": "numeroDependentes",
													"value": "255"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER134 - POST: /api/pessoas-detalhes/ dataEmissaoCnh_formato_invalido(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//https://viverebrasil.atlassian.net/browse/FLOR-7361 em analise pelo DEV\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"   \r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.variables.set(\"schema\",\r",
													"{\r",
													"\r",
													"  \"title\": \"Generated schema for Root\",\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"error\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"errorCode\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"message\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"errors\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": {\r",
													"            \"type\": \"object\",\r",
													"            \"properties\": {\r",
													"              \"schemaPath\": {\r",
													"                \"type\": \"string\"\r",
													"              },\r",
													"              \"params\": {\r",
													"                \"type\": \"object\",\r",
													"                \"properties\": {\r",
													"                  \"limit\": {\r",
													"                    \"type\": \"number\"\r",
													"                  }\r",
													"                },\r",
													"                \"required\": [\r",
													"                  \"limit\"\r",
													"                ]\r",
													"              },\r",
													"              \"message\": {\r",
													"                \"type\": \"string\"\r",
													"              }\r",
													"            },\r",
													"            \"required\": [\r",
													"              \"schemaPath\",\r",
													"              \"params\",\r",
													"              \"message\"\r",
													"            ]\r",
													"          }\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"errorCode\",\r",
													"        \"message\",\r",
													"        \"errors\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"error\"\r",
													"  ]\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1497&nomeMae=Mae Silva&idEstadoCivil=1&idProfissao=1&idNaturezaOcupacao=9&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=123456789&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=SP&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=05:00-10-31T01:30:00.000-4567&numeroDependentes=255&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1497"
												},
												{
													"key": "nomeMae",
													"value": "Mae Silva"
												},
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idProfissao",
													"value": "1"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "9"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "numeroBanco",
													"value": "12345"
												},
												{
													"key": "numeroAgencia",
													"value": "12349"
												},
												{
													"key": "numeroContaCorrente",
													"value": "123456789"
												},
												{
													"key": "email",
													"value": "massa@email.com"
												},
												{
													"key": "naturalidadeCidade",
													"value": "São Paulo"
												},
												{
													"key": "naturalidadeEstado",
													"value": "SP"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "nomePai",
													"value": "Pai da Silva"
												},
												{
													"key": "numeroCnh",
													"value": "23143031556"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "usuarioAlteracao",
													"value": "666"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "05:00-10-31T01:30:00.000-4567"
												},
												{
													"key": "numeroDependentes",
													"value": "255"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "nomeEmpresa",
													"value": "some company"
												},
												{
													"key": "nomeReferencia1",
													"value": "some nomeReferencia1"
												},
												{
													"key": "enderecoReferencia1",
													"value": "some enderecoReferencia1"
												},
												{
													"key": "nomeReferencia2",
													"value": "some nomeReferencia2"
												},
												{
													"key": "enderecoReferencia2",
													"value": "some enderecoReferencia2"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "salario",
													"value": "2200"
												},
												{
													"key": "patrimonioTotal",
													"value": "100000"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM070 - /api/pessoas/{id}/cadastro /v1(+)",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"naturalidadeCidade\": \"São Paulo\",\r\n\"naturalidadeEstado\": \"SP\",\r\n\"rendaMensal\": 1000,\r\n\"patrimonio\": 1000,\r\n\"nomePai\": \"O Papai\",\r\n\"nomeConjuge\": \"String\",\r\n\"idProfissao\": \"2112\",\r\n\"empresa\": \"Acc\",\r\n\"flagPessoaExpostaPublicamente\": false,\r\n\"idEstadoCivil\": 2,\r\n\"cepEnderecoComercial\": \"01010101\",\r\n\"logradouroEnderecoComercial\": \"Street example\",\r\n\"numeroEnderecoComercial\": 100,\r\n\"complementoEnderecoComercial\": \"AP 21\",\r\n\"bairroEnderecoComercial\": \"Some place\",\r\n\"cidadeEnderecoComercial\": \"São Paulo\",\r\n\"ufEnderecoComercial\": \"SP\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/pessoas/api/pessoas/120/cadastro/v1",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas",
												"api",
												"pessoas",
												"120",
												"cadastro",
												"v1"
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM070 - /api/pessoas/{id}/cadastro /v1_estado_#_cidade(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 422\", function () {\r",
													"    pm.response.to.have.status(422);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"A cidade não respeita o domínio ou não pertence ao estado informado\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"naturalidadeCidade\": \"São Paulo\",\r\n\"naturalidadeEstado\": \"ES\",\r\n\"rendaMensal\": 1000,\r\n\"patrimonio\": 1000,\r\n\"nomePai\": \"O Papai\",\r\n\"nomeConjuge\": \"String\",\r\n\"idProfissao\": \"2112\",\r\n\"empresa\": \"Acc\",\r\n\"flagPessoaExpostaPublicamente\": false,\r\n\"idEstadoCivil\": 2,\r\n\"cepEnderecoComercial\": \"01010101\",\r\n\"logradouroEnderecoComercial\": \"Street example\",\r\n\"numeroEnderecoComercial\": 100,\r\n\"complementoEnderecoComercial\": \"AP 21\",\r\n\"bairroEnderecoComercial\": \"Some place\",\r\n\"cidadeEnderecoComercial\": \"São Paulo\",\r\n\"ufEnderecoComercial\": \"SP\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/pessoas/api/pessoas/120/cadastro/v1",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas",
												"api",
												"pessoas",
												"120",
												"cadastro",
												"v1"
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM070 - /api/pessoas/{id}/cadastro /v1_naturalidadeEstado_numerico(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 422\", function () {\r",
													"    pm.response.to.have.status(422);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"A cidade não respeita o domínio ou não pertence ao estado informado\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"naturalidadeCidade\": \"São Paulo\",\r\n\"naturalidadeEstado\": \"11\",\r\n\"rendaMensal\": 1000,\r\n\"patrimonio\": 1000,\r\n\"nomePai\": \"O Papai\",\r\n\"nomeConjuge\": \"String\",\r\n\"idProfissao\": \"2112\",\r\n\"empresa\": \"Acc\",\r\n\"flagPessoaExpostaPublicamente\": false,\r\n\"idEstadoCivil\": 2,\r\n\"cepEnderecoComercial\": \"01010101\",\r\n\"logradouroEnderecoComercial\": \"Street example\",\r\n\"numeroEnderecoComercial\": 100,\r\n\"complementoEnderecoComercial\": \"AP 21\",\r\n\"bairroEnderecoComercial\": \"Some place\",\r\n\"cidadeEnderecoComercial\": \"São Paulo\",\r\n\"ufEnderecoComercial\": \"SP\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/pessoas/api/pessoas/120/cadastro/v1",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas",
												"api",
												"pessoas",
												"120",
												"cadastro",
												"v1"
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM070 - /api/pessoas/{id}/cadastro /v1_naturalidadeEstado_#_dominio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 422\", function () {\r",
													"    pm.response.to.have.status(422);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"A cidade não respeita o domínio ou não pertence ao estado informado\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"naturalidadeCidade\": \"São Paulo\",\r\n\"naturalidadeEstado\": \"ZA\",\r\n\"rendaMensal\": 1000,\r\n\"patrimonio\": 1000,\r\n\"nomePai\": \"O Papai\",\r\n\"nomeConjuge\": \"String\",\r\n\"idProfissao\": \"2112\",\r\n\"empresa\": \"Acc\",\r\n\"flagPessoaExpostaPublicamente\": false,\r\n\"idEstadoCivil\": 2,\r\n\"cepEnderecoComercial\": \"01010101\",\r\n\"logradouroEnderecoComercial\": \"Street example\",\r\n\"numeroEnderecoComercial\": 100,\r\n\"complementoEnderecoComercial\": \"AP 21\",\r\n\"bairroEnderecoComercial\": \"Some place\",\r\n\"cidadeEnderecoComercial\": \"São Paulo\",\r\n\"ufEnderecoComercial\": \"SP\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/pessoas/api/pessoas/120/cadastro/v1",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas",
												"api",
												"pessoas",
												"120",
												"cadastro",
												"v1"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER130 - PUT: /api/pessoas/{id}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas/api/pessoas/59?nome=Maria Silva&tipo=pf&sexo=F&dataNascimento=1999-05-28",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas",
												"api",
												"pessoas",
												"59"
											],
											"query": [
												{
													"key": "nome",
													"value": "Maria Silva"
												},
												{
													"key": "tipo",
													"value": "pf"
												},
												{
													"key": "sexo",
													"value": "F"
												},
												{
													"key": "dataNascimento",
													"value": "1999-05-28"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER130 - PUT: /api/pessoas/{id}_dataNascimento_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 422\", function () {\r",
													"    pm.response.to.have.status(422);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\",  \"[ECMA 262 regex \\\"^(\\\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$\\\" does not match input string \\\"\\\", format attribute \\\"date\\\" not supported]\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas/api/pessoas/59?nome=Maria Silva&tipo=pf&sexo=F&dataNascimento=",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas",
												"api",
												"pessoas",
												"59"
											],
											"query": [
												{
													"key": "nome",
													"value": "Maria Silva"
												},
												{
													"key": "tipo",
													"value": "pf"
												},
												{
													"key": "sexo",
													"value": "F"
												},
												{
													"key": "dataNascimento",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER130 - PUT: /api/pessoas/{id}_dataNascimento_formato_invalido(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 422\", function () {\r",
													"    pm.response.to.have.status(422);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\",  \"[format attribute \\\"date\\\" not supported, ECMA 262 regex \\\"^(\\\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$\\\" does not match input string \\\"05-28-1999\\\"]\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas/api/pessoas/59?nome=Maria Silva&tipo=pf&sexo=F&dataNascimento=05-28-1999",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas",
												"api",
												"pessoas",
												"59"
											],
											"query": [
												{
													"key": "nome",
													"value": "Maria Silva"
												},
												{
													"key": "tipo",
													"value": "pf"
												},
												{
													"key": "sexo",
													"value": "F"
												},
												{
													"key": "dataNascimento",
													"value": "05-28-1999"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER130 - PUT: /api/pessoas/{id}_dataNascimento_formato_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 422\", function () {\r",
													"    pm.response.to.have.status(422);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"    pm.response.to.be.withBody;\r",
													"    pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\",  \"[format attribute \\\"date\\\" not supported, ECMA 262 regex \\\"^(\\\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$\\\" does not match input string \\\"aaaaa\\\"]\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas/api/pessoas/59?nome=Maria Silva&tipo=pf&sexo=F&dataNascimento=aaaaa",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas",
												"api",
												"pessoas",
												"59"
											],
											"query": [
												{
													"key": "nome",
													"value": "Maria Silva"
												},
												{
													"key": "tipo",
													"value": "pf"
												},
												{
													"key": "sexo",
													"value": "F"
												},
												{
													"key": "dataNascimento",
													"value": "aaaaa"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER136 - PUT: /api/pessoas-detalhes/{id}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes/70000844?idEstadoCivil=1&idNacionalidade=76&grauInstrucao=1&pessoaPoliticamenteExposta=false&flagSemEnderecoComercialFixo=false&impedidoFinanciamento=false&chequeEspecial=0&flagNomePaiNaoInformado=false&nomeMae=Mae%20teste&idProfissao=1&idNaturezaOcupacao=1&naturalidadeCidade=Curitiba&naturalidadeEstado=PR&numeroDependentes=0&nomePai=Pai%20teste&numeroCnh=123456&usuarioAlteracao=AlteracaoUser&dataEmissaoCnh=2023-01-01",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"pessoas-detalhes",
												"api",
												"pessoas-detalhes",
												"70000844"
											],
											"query": [
												{
													"key": "idEstadoCivil",
													"value": "1"
												},
												{
													"key": "idNacionalidade",
													"value": "76"
												},
												{
													"key": "grauInstrucao",
													"value": "1"
												},
												{
													"key": "pessoaPoliticamenteExposta",
													"value": "false"
												},
												{
													"key": "flagSemEnderecoComercialFixo",
													"value": "false"
												},
												{
													"key": "impedidoFinanciamento",
													"value": "false"
												},
												{
													"key": "chequeEspecial",
													"value": "0"
												},
												{
													"key": "flagNomePaiNaoInformado",
													"value": "false"
												},
												{
													"key": "nomeMae",
													"value": "Mae%20teste"
												},
												{
													"key": "idProfissao",
													"value": "1"
												},
												{
													"key": "idNaturezaOcupacao",
													"value": "1"
												},
												{
													"key": "naturalidadeCidade",
													"value": "Curitiba"
												},
												{
													"key": "naturalidadeEstado",
													"value": "PR"
												},
												{
													"key": "numeroDependentes",
													"value": "0"
												},
												{
													"key": "nomePai",
													"value": "Pai%20teste"
												},
												{
													"key": "numeroCnh",
													"value": "123456"
												},
												{
													"key": "usuarioAlteracao",
													"value": "AlteracaoUser"
												},
												{
													"key": "dataEmissaoCnh",
													"value": "2023-01-01"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Contas",
							"item": [
								{
									"name": "PIER097 - POST: /api/contas",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"pm.globals.set(\"idConta\", jsonData.id);\r",
													"console.log(pm.globals.get(\"idConta\"));\r",
													"\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.ok;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1497,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 99,\n    \"diaVencimento\": 11,\n    \"limiteGlobal\": 500,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 1\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_idPessoa_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": ,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 99,\n    \"diaVencimento\": 10,\n    \"limiteGlobal\": 500,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_idPessoa_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": A,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 99,\n    \"diaVencimento\": 10,\n    \"limiteGlobal\": 500,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_idPessoa_inexistente(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"   // pm.expect(jsonData.error.errorCode).to.equal(\"0009\");\r",
													"    pm.expect(jsonData.error.message).to.equal(\"O participante informado é inexistente\");\r",
													" \r",
													"    \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 67676767676767,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 99,\n    \"diaVencimento\": 15,\n    \"limiteGlobal\": 500,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1333",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1333"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_idProduto_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": ,\n    \"idOrigemComercial\": 99,\n    \"diaVencimento\": 15,\n    \"limiteGlobal\": 500,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_idProduto_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": a,\n    \"idOrigemComercial\": 99,\n    \"diaVencimento\": 15,\n    \"limiteGlobal\": 500,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_idProduto_inexistente(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"O programa informado é inexistente\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 6789999999,\n    \"idOrigemComercial\": 99,\n    \"diaVencimento\": 15,\n    \"limiteGlobal\": 500,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_idOrigemComercial_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": aa,\n    \"diaVencimento\": 15,\n    \"limiteGlobal\": 500,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_idOrigemComercial_2X0(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 00,\n    \"diaVencimento\": 15,\n    \"limiteGlobal\": 500,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_diaVencimento_zero(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"A data de vencimento informada é inválida\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": 0,\n    \"limiteGlobal\": 500,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_diaVencimento_32(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"A data de vencimento informada é inválida\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": 0,\n    \"limiteGlobal\": 500,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_diaVencimento_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": aa,\n    \"limiteGlobal\": 500,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_diaVencimento_produto_pernambucanas(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													"// Realizar as validações desejadas utilizando pm.test()\r",
													"   // pm.test(\"Validação produto Pernambucanas x Data Vencimento\", function () {\r",
													"   //   const responseBody = pm.response.json();\r",
													"\r",
													"   //   pm.expect(responseBody.idProduto).to.eql(pm.variables.get(\"idProduto\"));\r",
													"  //    pm.expect(responseBody.diaVencimento).to.eql(pm.variables.get(\"diaVencimento\"));\r",
													"      \r",
													"      // Adicione outras validações necessárias aqui\r",
													"  //  });\r",
													"  "
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.globals.set(\"idProdutos\", [8,9,10]);\r",
													"pm.globals.set(\"diasVencimento\", [1,5,11,15,21,25]);\r",
													"\r",
													"// Loop for para iterar sobre os valores dos campos idProduto e diaVencimento\r",
													"for (let i = 0; i < pm.globals.get(\"idProdutos\").length; i++) {\r",
													"  // Pré-script para atualizar os valores no corpo da requisição antes de cada teste\r",
													"  pm.variables.set(\"idProduto\", pm.globals.get(\"idProdutos\")[i]);\r",
													"\r",
													"  for (let j = 0; j < pm.globals.get(\"diasVencimento\").length; j++) {\r",
													"    // Atualizar o valor do campo diaVencimento\r",
													"    pm.variables.set(\"diaVencimento\", pm.globals.get(\"diasVencimento\")[j]);\r",
													"\r",
													"    // Exibir mensagem no console\r",
													"    console.log(`Produto ${pm.variables.get(\"idProduto\")}, data de vencimento ${pm.variables.get(\"diaVencimento\")}`);\r",
													"\r",
													"  \r",
													"   \r",
													"  }\r",
													"}\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": {{idProduto}},\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": {{diaVencimento}},\n    \"limiteGlobal\": 500,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_diaVencimento_produto_pefisa(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"// Realizar as validações desejadas utilizando pm.test()\r",
													"    pm.test(\"Validação do Produto Pefisa x Data Vencimento\", function () {\r",
													"          \r",
													"      const responseBody = pm.response.json();\r",
													"      pm.expect(responseBody.idProduto).to.eql(pm.variables.get(\"idProduto\"));\r",
													"      pm.expect(responseBody.diaVencimento).to.eql(pm.variables.get(\"diaVencimento\"));\r",
													"\r",
													"      \r",
													"    });\r",
													"  "
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.globals.set(\"idProdutos\", [12,13]);\r",
													"pm.globals.set(\"diasVencimento\",[1,5,11,15,21,25]);\r",
													"\r",
													"let results = [];\r",
													"\r",
													"// Loop for para iterar sobre os valores dos campos idProduto e diaVencimento\r",
													"for (let i = 0; i < pm.globals.get(\"idProdutos\").length; i++) {\r",
													"  // Pré-script para atualizar os valores no corpo da requisição antes de cada teste\r",
													"  pm.variables.set(\"idProduto\", pm.globals.get(\"idProdutos\")[i]);\r",
													"\r",
													"  for (let j = 0; j < pm.globals.get(\"diasVencimento\").length; j++) {\r",
													"    // Atualizar o valor do campo diaVencimento\r",
													"    pm.variables.set(\"diaVencimento\", pm.globals.get(\"diasVencimento\")[j]);\r",
													"// Exibir mensagem no console\r",
													"    console.log(`Produto ${pm.variables.get(\"idProduto\")}, data de vencimento ${pm.variables.get(\"diaVencimento\")}`);\r",
													"\r",
													"    \r",
													"    console.log(\"Request Body:\", pm.request.body);\r",
													"    \r",
													"  }\r",
													"}\r",
													"      \r",
													"\r",
													"\r",
													"   \r",
													"  \r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": {{idProduto}},\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": {{diaVencimento}},\n    \"limiteGlobal\": 500,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_diaVencimento_produto_palmeiras(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"\r",
													"// Realizar as validações desejadas utilizando pm.test()\r",
													"    pm.test(\"Validação produto Palmeiras x Data Vencimento\", function () {\r",
													"      const responseBody = pm.response.json();\r",
													"\r",
													"      pm.expect(responseBody.idProduto).to.eql(pm.variables.get(\"idProduto\"));\r",
													"      pm.expect(responseBody.diaVencimento).to.eql(pm.variables.get(\"diaVencimento\"));\r",
													"      \r",
													"      // Adicione outras validações necessárias aqui\r",
													"    });\r",
													"  "
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.globals.set(\"idProdutos\", [19,20]);\r",
													"pm.globals.set(\"diasVencimento\", [1,5,13,17,21,25]);\r",
													"\r",
													"// Loop for para iterar sobre os valores dos campos idProduto e diaVencimento\r",
													"for (let i = 0; i < pm.globals.get(\"idProdutos\").length; i++) {\r",
													"  // Pré-script para atualizar os valores no corpo da requisição antes de cada teste\r",
													"  pm.variables.set(\"idProduto\", pm.globals.get(\"idProdutos\")[i]);\r",
													"\r",
													"  for (let j = 0; j < pm.globals.get(\"diasVencimento\").length; j++) {\r",
													"    // Atualizar o valor do campo diaVencimento\r",
													"    pm.variables.set(\"diaVencimento\", pm.globals.get(\"diasVencimento\")[j]);\r",
													"\r",
													"    // Exibir mensagem no console\r",
													"    console.log(`Produto ${pm.variables.get(\"idProduto\")}, data de vencimento ${pm.variables.get(\"diaVencimento\")}`);\r",
													"\r",
													"  \r",
													"   \r",
													"  }\r",
													"}\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": {{idProduto}},\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": {{diaVencimento}},\n    \"limiteGlobal\": 500,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_diaVencimento_produto_urby(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//pm.test(\"Status code is 200\", function () {\r",
													"//    pm.response.to.have.status(200);\r",
													"//});\r",
													"\r",
													"\r",
													"// Realizar as validações desejadas utilizando pm.test()\r",
													"  //  pm.test(\"Validação produto Urby x Data Vencimento\", function () {\r",
													"  //    const responseBody = pm.response.json();\r",
													"\r",
													"  //    pm.expect(responseBody.idProduto).to.eql(pm.variables.get(\"idProduto\"));\r",
													"      pm.expect(responseBody.diaVencimento).to.eql(pm.variables.get(\"diaVencimento\"));\r",
													"      \r",
													"      // Adicione outras validações necessárias aqui\r",
													"    //});\r",
													"  "
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.globals.set(\"idProdutos\", [14]);\r",
													"pm.globals.set(\"diasVencimento\", [1,5,13,17,21,25]);\r",
													"\r",
													"// Loop for para iterar sobre os valores dos campos idProduto e diaVencimento\r",
													"for (let i = 0; i < pm.globals.get(\"idProdutos\").length; i++) {\r",
													"  // Pré-script para atualizar os valores no corpo da requisição antes de cada teste\r",
													"  pm.variables.set(\"idProduto\", pm.globals.get(\"idProdutos\")[i]);\r",
													"\r",
													"  for (let j = 0; j < pm.globals.get(\"diasVencimento\").length; j++) {\r",
													"    // Atualizar o valor do campo diaVencimento\r",
													"    pm.variables.set(\"diaVencimento\", pm.globals.get(\"diasVencimento\")[j]);\r",
													"\r",
													"    // Exibir mensagem no console\r",
													"    console.log(`Produto ${pm.variables.get(\"idProduto\")}, data de vencimento ${pm.variables.get(\"diaVencimento\")}`);\r",
													"\r",
													"  \r",
													"   \r",
													"  }\r",
													"}\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": {{idProduto}},\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": {{diaVencimento}},\n    \"limiteGlobal\": 500,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_diaVencimento_produto_topy(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//pm.test(\"Status code is 200\", function () {\r",
													" //   pm.response.to.have.status(200);\r",
													"//});\r",
													"\r",
													"// Realizar as validações desejadas utilizando pm.test()\r",
													" //   pm.test(\"Validação produto Topy x Data de Vencimento\", function () {\r",
													" //     const responseBody = pm.response.json();\r",
													"//\r",
													"  //    pm.expect(responseBody.idProduto).to.eql(pm.variables.get(\"idProduto\"));\r",
													"   //   pm.expect(responseBody.diaVencimento).to.eql(pm.variables.get(\"diaVencimento\"));\r",
													"      \r",
													"      // Adicione outras validações necessárias aqui\r",
													"   // });\r",
													"  "
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.globals.set(\"idProdutos\", [11]);\r",
													"pm.globals.set(\"diasVencimento\", [1,5,13,17,21,25]);\r",
													"\r",
													"// Loop for para iterar sobre os valores dos campos idProduto e diaVencimento\r",
													"for (let i = 0; i < pm.globals.get(\"idProdutos\").length; i++) {\r",
													"  // Pré-script para atualizar os valores no corpo da requisição antes de cada teste\r",
													"  pm.variables.set(\"idProduto\", pm.globals.get(\"idProdutos\")[i]);\r",
													"\r",
													"  for (let j = 0; j < pm.globals.get(\"diasVencimento\").length; j++) {\r",
													"    // Atualizar o valor do campo diaVencimento\r",
													"    pm.variables.set(\"diaVencimento\", pm.globals.get(\"diasVencimento\")[j]);\r",
													"\r",
													"    // Exibir mensagem no console\r",
													"    console.log(`Produto ${pm.variables.get(\"idProduto\")}, data de vencimento ${pm.variables.get(\"diaVencimento\")}`);\r",
													"\r",
													"  \r",
													"   \r",
													"  }\r",
													"}\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": {{idProduto}},\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": {{diaVencimento}},\n    \"limiteGlobal\": 500,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_diaVencimento_produto_carmen_steffens(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"\r",
													"// Realizar as validações desejadas utilizando pm.test()\r",
													"    pm.test(\"Validação produto Carmen Steffens x Data de Vencimento\", function () {\r",
													"      const responseBody = pm.response.json();\r",
													"\r",
													"      pm.expect(responseBody.idProduto).to.eql(pm.variables.get(\"idProduto\"));\r",
													"      pm.expect(responseBody.diaVencimento).to.eql(pm.variables.get(\"diaVencimento\"));\r",
													"      \r",
													"      // Adicione outras validações necessárias aqui\r",
													"    });\r",
													"\r",
													"    \r",
													"  "
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.globals.set(\"idProdutos\", [16]);\r",
													"pm.globals.set(\"diasVencimento\", [1,5,13,17,21,25]);\r",
													"\r",
													"// Loop for para iterar sobre os valores dos campos idProduto e diaVencimento\r",
													"for (let i = 0; i < pm.globals.get(\"idProdutos\").length; i++) {\r",
													"  // Pré-script para atualizar os valores no corpo da requisição antes de cada teste\r",
													"  pm.variables.set(\"idProduto\", pm.globals.get(\"idProdutos\")[i]);\r",
													"\r",
													"  for (let j = 0; j < pm.globals.get(\"diasVencimento\").length; j++) {\r",
													"    // Atualizar o valor do campo diaVencimento\r",
													"    pm.variables.set(\"diaVencimento\", pm.globals.get(\"diasVencimento\")[j]);\r",
													"\r",
													"    // Exibir mensagem no console\r",
													"    console.log(`Produto ${pm.variables.get(\"idProduto\")}, data de vencimento ${pm.variables.get(\"diaVencimento\")}`);\r",
													"\r",
													"  \r",
													"   \r",
													"  }\r",
													"}\r",
													"\r",
													"\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": {{idProduto}},\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": {{diaVencimento}},\n    \"limiteGlobal\": 500,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": [
										{
											"name": "PIER097 - POST: /api/contas_diaVencimento_produto_carmen_steffens(+)",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": {{idProduto}},\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": {{diaVencimento}},\n    \"limiteGlobal\": 500,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
													"protocol": "https",
													"host": [
														"{{integrationURL}}"
													],
													"path": [
														"contas",
														"api",
														"contas"
													],
													"query": [
														{
															"key": "idPessoa",
															"value": "1298"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Date",
													"value": "Mon, 03 Jul 2023 14:02:15 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Server",
													"value": "nginx/1.18.0 (Ubuntu)"
												},
												{
													"key": "x-amzn-RequestId",
													"value": "c1a389e4-8d42-4d4d-82e4-fbb2c4f66f26"
												},
												{
													"key": "x-amz-apigw-id",
													"value": "HfYxiGrgmjQFWhw="
												},
												{
													"key": "X-Amzn-Trace-Id",
													"value": "Root=1-64a2d4d6-14f703f4758d98c93ac8cb48"
												},
												{
													"key": "Set-Cookie",
													"value": "visid_incap_2842573=myIrh7ZqTriGPKik1DQ56ObUomQAAAAAQUIPAAAAAABj7fvbWtTJrT69L6xqWju2; expires=Tue, 02 Jul 2024 06:55:17 GMT; HttpOnly; path=/; Domain=.pef-int-nprd.payments.onefinancial.com.br; Secure; SameSite=None"
												},
												{
													"key": "Set-Cookie",
													"value": "nlbi_2842573=pzcuFwj1CBeRqmsExcIi6gAAAADQWkFghHCM6UIz91Tir/VZ; path=/; Domain=.pef-int-nprd.payments.onefinancial.com.br; Secure; SameSite=None"
												},
												{
													"key": "Set-Cookie",
													"value": "incap_ses_480_2842573=d9oxci147kXu3ehvcE6pBubUomQAAAAAKLajMPVdT3p0ycD1sHQT4g==; path=/; Domain=.pef-int-nprd.payments.onefinancial.com.br; Secure; SameSite=None"
												},
												{
													"key": "X-CDN",
													"value": "Imperva"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "X-Iinfo",
													"value": "4-47436846-47436848 NNYN CT(130 124 0) RT(1688392917109 13) q(0 0 2 -1) r(4 175) U6"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=63072000; includeSubDomains; preload"
												},
												{
													"key": "X-Frame-Options",
													"value": "DENY"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "vary",
													"value": "Origin"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "X-Kong-Upstream-Latency",
													"value": "17565"
												},
												{
													"key": "X-Kong-Proxy-Latency",
													"value": "1"
												},
												{
													"key": "Via",
													"value": "kong/2.1.4"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 70001797,\n    \"idProduto\": 16,\n    \"idOrigemComercial\": 19,\n    \"idPessoa\": 1298,\n    \"idStatusConta\": 50,\n    \"diaVencimento\": 25,\n    \"funcaoAtiva\": \"CREDITO\",\n    \"dataStatusConta\": \"2023-07-03T14:02:15.464+00:00\",\n    \"dataCadastro\": \"2023-07-03T14:02:15.464+00:00\",\n    \"dataUltimaAlteracaoVencimento\": \"2023-07-03T14:02:15.464+00:00\",\n    \"valorRenda\": 1000,\n    \"possuiOverLimit\": true,\n    \"behaviorScore\": 0\n}"
										}
									]
								},
								{
									"name": "PIER097 - POST: /api/contas_produto_#_data_vencimento(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// Verifica o valor do campo \"errorCode\"\r",
													"pm.test(\"Verifica o valor do campo errorCode\", function () {\r",
													"    pm.expect(pm.response.json().error.errorCode).to.eql(\"2001\");\r",
													"    pm.expect(pm.response.json().error.message).to.eql(\"A data de vencimento informada é inválida\");\r",
													"    pm.expect(pm.response.json().error.errors[0].message).to.eql(\"dueDateId não existe, não pertencente ao programa ou está inativo\");\r",
													"    pm.expect(pm.response.json().error.errors[0].code).to.eql(\"1\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": 12,\n    \"limiteGlobal\": 0,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_limteGlobal_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": 12,\n    \"limiteGlobal\": ,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_limteGlobal_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": 12,\n    \"limiteGlobal\": aaa,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_limteGlobal_uma_casa_zero(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": 5,\n    \"limiteGlobal\": 0,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_limteGlobal_4_casas_zero(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": 12,\n    \"limiteGlobal\": 0000,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_limteGlobal_>_permitido(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"O limite informado está acima do permitido\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": 5,\n    \"limiteGlobal\": 1237777777,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_limteMaximo_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": 5,\n    \"limiteGlobal\": 12345,\n    \"limiteMaximo\": Letras,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_limteMaximo_letras_numeros(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": 5,\n    \"limiteGlobal\": 12345,\n    \"limiteMaximo\": letras500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_limteMaximo_zeros(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": 5,\n    \"limiteGlobal\": 12345,\n    \"limiteMaximo\": 00000000,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_limteMaximo_>_permitido(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"O limite informado está acima do permitido\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": 5,\n    \"limiteGlobal\": 12345,\n    \"limiteMaximo\": 5988,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_limteMaximo_>_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": 5,\n    \"limiteGlobal\": 12345,\n    \"limiteMaximo\":,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_limiteParcelas_letras(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": 5,\n    \"limiteGlobal\": 12345,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": letras,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_limiteParcelas_letras_numeros(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": 5,\n    \"limiteGlobal\": 12345,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": l500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_limiteParcelas_somente_zeros(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": 5,\n    \"limiteGlobal\": 12345,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\":00000000,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_limiteParcelas_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": 5,\n    \"limiteGlobal\": 12345,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\":,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_valorRenda_letras(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": 5,\n    \"limiteGlobal\": 12345,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\":500,\n    \"valorRenda\": letras,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_valorRenda_letras_numeros(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": 5,\n    \"limiteGlobal\": 12345,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\":500,\n    \"valorRenda\": ler50,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_valorRenda_somente_zeros(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": 5,\n    \"limiteGlobal\": 12345,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\":500,\n    \"valorRenda\": 00000000000000000000000000000000000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_valorRenda_>_4_casas_decimais(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"//schema\r",
													"const schema = {\r",
													"   \r",
													"    \"type\": \"object\",\r",
													"    \"default\": {},\r",
													"    \"title\": \"Root Schema\",\r",
													"    \"required\": [\r",
													"        \"error\"\r",
													"    ],\r",
													"    \"properties\": {\r",
													"        \"error\": {\r",
													"            \"type\": \"object\",\r",
													"            \"default\": {},\r",
													"            \"title\": \"The error Schema\",\r",
													"            \"required\": [\r",
													"                \"errorCode\",\r",
													"                \"message\"\r",
													"            ],\r",
													"            \"properties\": {\r",
													"                \"errorCode\": {\r",
													"                    \"type\": \"string\",\r",
													"                    \"default\": \"\",\r",
													"                    \"title\": \"The errorCode Schema\",\r",
													"                    \"examples\": [\r",
													"                        \"400\"\r",
													"                    ]\r",
													"                },\r",
													"                \"message\": {\r",
													"                    \"type\": \"string\",\r",
													"                    \"default\": \"\",\r",
													"                    \"title\": \"The message Schema\",\r",
													"                    \"examples\": [\r",
													"                        \"[remainder of division is not zero (1.66667 / 1.0E-4), format attribute \\\"float\\\" not supported]\"\r",
													"                    ]\r",
													"                }\r",
													"            },\r",
													"            \"examples\": [{\r",
													"                \"errorCode\": \"400\",\r",
													"                \"message\": \"[remainder of division is not zero (1.66667 / 1.0E-4), format attribute \\\"float\\\" not supported]\"\r",
													"            }]\r",
													"        }\r",
													"    },\r",
													"    \"examples\": [{\r",
													"        \"error\": {\r",
													"            \"errorCode\": \"400\",\r",
													"            \"message\": \"[remainder of division is not zero (1.66667 / 1.0E-4), format attribute \\\"float\\\" not supported]\"\r",
													"        }\r",
													"    }]\r",
													"}\r",
													"\r",
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"\r",
													"//corpo\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// msg\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"[remainder of division is not zero (1.66667 / 1.0E-4), format attribute \\\"float\\\" not supported]\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": 5,\n    \"limiteGlobal\": 123,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\":500,\n    \"valorRenda\": 1.66667,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_valorRenda_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"//schema\r",
													"const schema = {\r",
													"   \r",
													"    \"type\": \"object\",\r",
													"    \"default\": {},\r",
													"    \"title\": \"Root Schema\",\r",
													"    \"required\": [\r",
													"        \"error\"\r",
													"    ],\r",
													"    \"properties\": {\r",
													"        \"error\": {\r",
													"            \"type\": \"object\",\r",
													"            \"default\": {},\r",
													"            \"title\": \"The error Schema\",\r",
													"            \"required\": [\r",
													"                \"errorCode\",\r",
													"                \"message\"\r",
													"            ],\r",
													"            \"properties\": {\r",
													"                \"errorCode\": {\r",
													"                    \"type\": \"string\",\r",
													"                    \"default\": \"\",\r",
													"                    \"title\": \"The errorCode Schema\",\r",
													"                    \"examples\": [\r",
													"                        \"400\"\r",
													"                    ]\r",
													"                },\r",
													"                \"message\": {\r",
													"                    \"type\": \"string\",\r",
													"                    \"default\": \"\",\r",
													"                    \"title\": \"The message Schema\",\r",
													"                    \"examples\": [\r",
													"                        \"[remainder of division is not zero (1.66667 / 1.0E-4), format attribute \\\"float\\\" not supported]\"\r",
													"                    ]\r",
													"                }\r",
													"            },\r",
													"            \"examples\": [{\r",
													"                \"errorCode\": \"400\",\r",
													"                \"message\": \"[remainder of division is not zero (1.66667 / 1.0E-4), format attribute \\\"float\\\" not supported]\"\r",
													"            }]\r",
													"        }\r",
													"    },\r",
													"    \"examples\": [{\r",
													"        \"error\": {\r",
													"            \"errorCode\": \"400\",\r",
													"            \"message\": \"[remainder of division is not zero (1.66667 / 1.0E-4), format attribute \\\"float\\\" not supported]\"\r",
													"        }\r",
													"    }]\r",
													"}\r",
													"\r",
													"pm.test(\"Validar a estrutura do corpo\", function () {\r",
													"    pm.response.to.have.jsonSchema(schema);\r",
													"});\r",
													"\r",
													"\r",
													"//corpo\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"// msg\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": 5,\n    \"limiteGlobal\": 123,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\":500,\n    \"valorRenda\": ,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 9999999\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_idEnderecoCorrespondencia_letras(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": 5,\n    \"limiteGlobal\": 12345,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\":500,\n    \"valorRenda\": 200,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"teste\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\":A\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER097 - POST: /api/contas_idEnderecoCorrespondencia_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"idPessoa\": 1298,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 19,\n    \"diaVencimento\": 5,\n    \"limiteGlobal\": 12345,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\":500,\n    \"valorRenda\": 200,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"teste\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\":\n  }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa=1298",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas"
											],
											"query": [
												{
													"key": "idPessoa",
													"value": "1298"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER102 - POST - /api/contas/{id}/bloquear",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70001926/dbloquear?id_status=2",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70001926",
												"dbloquear"
											],
											"query": [
												{
													"key": "id_status",
													"value": "2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER110 - POST : /api/contas/${idConta}/reativar",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/2027880/reativar",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"2027880",
												"reativar"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER110 - POST : /api/contas/${idConta}/reativar_conta_inexistente(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"A conta informada é inexistente\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/2027880/reativar",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"2027880",
												"reativar"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER107 - POST:/api/contas/{id}/normalizacao",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"80080784054\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 97,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/2027881/normalizacao",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"2027881",
												"normalizacao"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER048 - /pier/v2/api/contas/{id}_listar_contas_via_id(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.ok;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var idResponse = jsonData.id;\r",
													"var idConta = pm.globals.get(\"idConta\");\r",
													"\r",
													"pm.test(\"Valida se o N. da conta listada é o mesmo da conta criada\", function() {\r",
													"    pm.expect(idResponse).to.eql(idConta);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/contas_consultas/pier/v2/api/contas/{{idConta}}",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas_consultas",
												"pier",
												"v2",
												"api",
												"contas",
												"{{idConta}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER050 - GET: /api/dados-bancarios-conta",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-trace-id",
												"value": "70bf9eb7-1153-41a1-83a4-353ea878dc06",
												"type": "text"
											},
											{
												"key": "x-correlation-id",
												"value": "9c6cea8d-0e5e-46ac-adfd-56c6cc848c71",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/dados-bancarios-conta?idConta=70000849",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"dados-bancarios-conta"
											],
											"query": [
												{
													"key": "id",
													"value": "1298",
													"disabled": true
												},
												{
													"key": "idConta",
													"value": "70000849"
												},
												{
													"key": "idTipoContaBancaria",
													"value": "4",
													"disabled": true
												}
											]
										},
										"description": "Lambda: **lmb-int-contas**"
									},
									"response": []
								},
								{
									"name": "PIER050 - GET: /api/dados-bancarios-conta_inexistente(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.error.message).to.eql(\"Nenhum cartão físico múltiplo para essa conta.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-trace-id",
												"value": "70bf9eb7-1153-41a1-83a4-353ea878dc06",
												"type": "text"
											},
											{
												"key": "x-correlation-id",
												"value": "9c6cea8d-0e5e-46ac-adfd-56c6cc848c71",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/dados-bancarios-conta?id=20022000&idConta=70000902&idTipoContaBancaria=4",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"dados-bancarios-conta"
											],
											"query": [
												{
													"key": "id",
													"value": "20022000"
												},
												{
													"key": "idConta",
													"value": "70000902"
												},
												{
													"key": "idTipoContaBancaria",
													"value": "4"
												}
											]
										},
										"description": "Lambda: **lmb-int-contas**"
									},
									"response": []
								},
								{
									"name": "PIER052 - GET:/pier/v2/api/limites-disponibilidades",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/contas-limites/api/limites-disponibilidades?idConta=70000849",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas-limites",
												"api",
												"limites-disponibilidades"
											],
											"query": [
												{
													"key": "idConta",
													"value": "70000849"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER066 - GET:pier/v2/api/adesoes-pagamentos-sabados  Copy",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Cookie",
												"value": "incap_ses_1452_2842573=FPKTS1iSm0KyeFH9yYomFLRjdmQAAAAACZMRbSjHLOYO+J+R3mmwbA==; incap_ses_1616_2842573=MRQMezu/Z2iAnai+sy9tFt6tdGQAAAAATkMF9at8TQUYByMimH4qJQ==; nlbi_2842573=/1UuY+ikyxatXQMFxcIi6gAAAAC+4+LESALKv+LQHug7irT4; visid_incap_2842573=OJnrMLxXSuu4WJzezUt89GIVUWQAAAAAQUIPAAAAAABAmXfPPG8q86a0RGPVtHnX",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/contas-adesoes/api/adesoes-pagamentos-sabados?id=70001070&dataVencimento=2023-05-31",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas-adesoes",
												"api",
												"adesoes-pagamentos-sabados"
											],
											"query": [
												{
													"key": "id",
													"value": "70001070"
												},
												{
													"key": "dataVencimento",
													"value": "2023-05-31"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER024 - GET:/api/contas/{id}/faturas/abertas",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Cookie",
												"value": "incap_ses_1354_2842573=B0eCFMpR2SO9VJTIjWDKElmxeGQAAAAAa24DNkRMcQl7vqTNxddZDQ==; incap_ses_1452_2842573=ur7nRCPa8TdnC0H/yYomFO33d2QAAAAAotkyJghJVrOOkog5itM2rQ==; nlbi_2842573=/1UuY+ikyxatXQMFxcIi6gAAAAC+4+LESALKv+LQHug7irT4; visid_incap_2842573=OJnrMLxXSuu4WJzezUt89GIVUWQAAAAAQUIPAAAAAABAmXfPPG8q86a0RGPVtHnX"
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/faturas/api/contas/70001125/faturas/abertas",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"faturas",
												"api",
												"contas",
												"70001125",
												"faturas",
												"abertas"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER009 - GET:/api/contas/{id}/consultar-beneficio-pagamento-atraso",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/contas_consultas/api/contas/70001125/consultar-beneficio-pagamento-atraso",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas_consultas",
												"api",
												"contas",
												"70001125",
												"consultar-beneficio-pagamento-atraso"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER125 - PUT:/api/limites-disponibilidades",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/contas-limites/api/limites-disponibilidades?limiteGlobal=500.00&limiteCompra=500.00&limiteParcelado=0&limiteParcelas=0&limiteSaqueGlobal=500&limiteSaquePeriodo=500&idConta=70000849",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas-limites",
												"api",
												"limites-disponibilidades"
											],
											"query": [
												{
													"key": "limiteGlobal",
													"value": "500.00"
												},
												{
													"key": "limiteCompra",
													"value": "500.00"
												},
												{
													"key": "limiteParcelado",
													"value": "0"
												},
												{
													"key": "limiteParcelas",
													"value": "0"
												},
												{
													"key": "limiteSaqueGlobal",
													"value": "500"
												},
												{
													"key": "limiteSaquePeriodo",
													"value": "500"
												},
												{
													"key": "idConta",
													"value": "70000849"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER068 - POST: pier/v2/api/adesoes-pagamentos-sabados",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://{{integrationURL}}/contas-adesoes/api/adesoes-pagamentos-sabados?id=70001070",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas-adesoes",
												"api",
												"adesoes-pagamentos-sabados"
											],
											"query": [
												{
													"key": "id",
													"value": "70001070"
												},
												{
													"key": "dataVencimento",
													"value": "2023-05-01",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "CARA004 - POST:/dock/p2ptransfer",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Cookie",
												"value": "incap_ses_1354_2842573=B0eCFMpR2SO9VJTIjWDKElmxeGQAAAAAa24DNkRMcQl7vqTNxddZDQ==; incap_ses_1452_2842573=ur7nRCPa8TdnC0H/yYomFO33d2QAAAAAotkyJghJVrOOkog5itM2rQ==; nlbi_2842573=/1UuY+ikyxatXQMFxcIi6gAAAAC+4+LESALKv+LQHug7irT4; visid_incap_2842573=OJnrMLxXSuu4WJzezUt89GIVUWQAAAAAQUIPAAAAAABAmXfPPG8q86a0RGPVtHnX"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"originalAccount\": 174,\r\n  \"destinationAccount\": 175,\r\n  \"amount\": 10,\r\n  \"description\": \"Descrição Vania\",\r\n  \"transactionDetails\": \"Detalhes Vania\"\r\n}"
										},
										"url": {
											"raw": "https://{{integrationURL}}/transferencias/dock/p2ptransfer",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"transferencias",
												"dock",
												"p2ptransfer"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Adicional",
							"item": [
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_novo(+)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Função para gerar um número aleatório entre dois valores\r",
													"function getRandomNumber(min, max) {\r",
													"    return Math.floor(Math.random() * (max - min + 1)) + min;\r",
													"}\r",
													"\r",
													"// Função para gerar um CPF válido\r",
													"function generateCPF() {\r",
													"    var n1 = getRandomNumber(0, 9);\r",
													"    var n2 = getRandomNumber(0, 9);\r",
													"    var n3 = getRandomNumber(0, 9);\r",
													"    var n4 = getRandomNumber(0, 9);\r",
													"    var n5 = getRandomNumber(0, 9);\r",
													"    var n6 = getRandomNumber(0, 9);\r",
													"    var n7 = getRandomNumber(0, 9);\r",
													"    var n8 = getRandomNumber(0, 9);\r",
													"    var n9 = getRandomNumber(0, 9);\r",
													"    var d1 = n9 * 2 + n8 * 3 + n7 * 4 + n6 * 5 + n5 * 6 + n4 * 7 + n3 * 8 + n2 * 9 + n1 * 10;\r",
													"    d1 = 11 - (d1 % 11);\r",
													"    if (d1 >= 10) {\r",
													"        d1 = 0;\r",
													"    }\r",
													"    var d2 = d1 * 2 + n9 * 3 + n8 * 4 + n7 * 5 + n6 * 6 + n5 * 7 + n4 * 8 + n3 * 9 + n2 * 10 + n1 * 11;\r",
													"    d2 = 11 - (d2 % 11);\r",
													"    if (d2 >= 10) {\r",
													"        d2 = 0;\r",
													"    }\r",
													"    return '' + n1 + n2 + n3 + n4 + n5 + n6 + n7 + n8 + n9 + d1 + d2;\r",
													"}\r",
													"\r",
													"// Gerar CPF aleatório\r",
													"var randomCPF = generateCPF();\r",
													"\r",
													"// Definir CPF gerado como variável global convertida em string\r",
													"pm.globals.set(\"generatedCPF\", randomCPF.toString());\r",
													"\r",
													"\r",
													"console.log(\"CPF gerado: \" + randomCPF);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"{{generatedCPF}}\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_existente(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.badRequest;\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"já existe usuário na base com o documentNumber informado\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"80080784054\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 97,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/123/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"123",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_nome_>_150(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"não deve ser maior que 150 caracteres\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"JoséLimadaSilvaJoséLimadaSilvaJoséLimadaSilvaJoséLimadaSilvaJoséLimadaSilvaJoséLimadaSilvaJoséLimadaSilvaJoséLimadaSilvaJoséLimadaSilvaJoséLimadaSilvaJoséLimadaSilvaJoséLimadaSilva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"06514795846\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_nome_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"não deve ser mais curta que 1 caracter\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"80080784054\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"1194785359\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 23456789999999999,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/23456789999999999/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"23456789999999999",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_nome_impresso_>_60(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"não deve ser maior que 60 caracteres\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉLDASILVAJOSÉLDASILVAJOSÉLDASILVAJOSÉLDASILVAJOSÉLDASILVAJOSÉLDASILVA\",\n        \"numeroReceitaFederal\": \"80080784054\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"1194785359\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 23456789999999999,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/23456789999999999/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"23456789999999999",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_nome_impresso_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"não deve ser mais curta que 1 caracter\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"JOSÉ LIMA DA SILVA\",\n        \"nomeImpresso\": \"\",\n        \"numeroReceitaFederal\": \"80080784054\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"1194785359\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 23456789999999999,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/23456789999999999/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"23456789999999999",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_numeroReceitaFederal_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"documentNumber inválido\");\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"aaaaaa\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_numeroReceitaFederal_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_numeroReceitaFederal_invalido(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"109\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_dataNascimento_formato_invalido(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"deve corresponder ao padrão \\\"\\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d-\\\\d\\\\d\\\"\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"80080784054\",\n        \"dataNascimento\": \"31-10-2020\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_dataNascimento_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"deve corresponder ao padrão \\\"\\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d-\\\\d\\\\d\\\"\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"80080784054\",\n        \"dataNascimento\": \"AAAAAAA\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_dataNascimento_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"deve corresponder ao padrão \\\"\\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d-\\\\d\\\\d\\\"\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"80080784054\",\n        \"dataNascimento\": \"AAAAAAA\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_sexo_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"deve corresponder ao padrão \\\"M|F|O|N\\\"\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"80080784054\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_sexo_numerico(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"deve corresponder ao padrão \\\"M|F|O|N\\\"\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"80080784054\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"1\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_sexo_fora_dominio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"deve corresponder ao padrão \\\"M|F|O|N\\\"\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"80080784054\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"l\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_numeroIdentidade_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"não deve ser mais curta que 1 caracter\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"80080784054\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_numeroIdentidade_vazio_tam_>_18(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"não deve ser maior que 18 caracteres\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"80080784054\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000000000000000\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_orgaoExpedidor_tam_>_6(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"não deve ser maior que 6 caracteres\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"80080784054\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"yyyyyyyyy\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_orgaoExpedidor_numerico(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// esta condição não sera implementada ou seja:\r",
													"//o orgãoexpeditor esta aceitando valore numerico\r",
													"//não sera validado pela camada de serviços\r",
													"\r",
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"80080784054\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"1111\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_unidadeFederativaRG_numerico(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\",  \"deve corresponder ao padrão \\\"RO|AC|AM|RR|PA|AP|TO|MA|PI|CE|RN|PB|PE|AL|SE|BA|MG|ES|RJ|SP|PR|SC|RS|MS|MT|GO|DF\\\"\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"80080784054\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"1111\",\n        \"unidadeFederativaIdentidade\": \"11\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_unidadeFederativaRG_fora_dominio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\",  \"deve corresponder ao padrão \\\"RO|AC|AM|RR|PA|AP|TO|MA|PI|CE|RN|PB|PE|AL|SE|BA|MG|ES|RJ|SP|PR|SC|RS|MS|MT|GO|DF\\\"\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"80080784054\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"1111\",\n        \"unidadeFederativaIdentidade\": \"zz\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_unidadeFederativaRG_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\",  \"não deve ser mais curta que 2 caracteres\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"80080784054\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"1111\",\n        \"unidadeFederativaIdentidade\": \"\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_unidadeFederativaRG_tam_>_2(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\",  \"não deve ser maior que 2 caracteres\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"80080784054\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"1111\",\n        \"unidadeFederativaIdentidade\": \"rssssss\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_unidadeFederativaRG_caixa_baixa(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\",  \"deve corresponder ao padrão \\\"RO|AC|AM|RR|PA|AP|TO|MA|PI|CE|RN|PB|PE|AL|SE|BA|MG|ES|RJ|SP|PR|SC|RS|MS|MT|GO|DF\\\"\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"80080784054\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"1111\",\n        \"unidadeFederativaIdentidade\": \"sp\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_dataEmissaoIdentidade_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"[format attribute \\\"date\\\" not supported, ECMA 262 regex \\\"^(\\\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$\\\" does not match input string \\\"PERNAMBUCANA\\\"]\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"65060823059\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"1111\",\n        \"unidadeFederativaIdentidade\": \"SP\",\n        \"dataEmissaoIdentidade\": \"PERNAMBUCANA\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_dataEmissaoIdentidade_formato_invalido(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"[ECMA 262 regex \\\"^(\\\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$\\\" does not match input string \\\"31-10-2020\\\", format attribute \\\"date\\\" not supported]\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"65060823059\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"1111\",\n        \"unidadeFederativaIdentidade\": \"SP\",\n        \"dataEmissaoIdentidade\": \"31-10-2020\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/cadastrar-adicional_dataEmissaoIdentidade_formato_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\", \"[ECMA 262 regex \\\"^(\\\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$\\\" does not match input string \\\"\\\", format attribute \\\"date\\\" not supported]\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"65060823059\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"1111\",\n        \"unidadeFederativaIdentidade\": \"SP\",\n        \"dataEmissaoIdentidade\": \"\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/idEstadoCivil_fora_dominio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\",\"[format attribute \\\"date\\\" not supported, instance value (9) not found in enum (possible values: [1,2,3,4,5])]\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"65060823059\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"1111\",\n        \"unidadeFederativaIdentidade\": \"SP\",\n        \"dataEmissaoIdentidade\": \"PERNAMBUCANA\",\n        \"idEstadoCivil\": 9,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/idEstadoCivil_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\",\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"65060823059\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"1111\",\n        \"unidadeFederativaIdentidade\": \"SP\",\n        \"dataEmissaoIdentidade\": \"PERNAMBUCANA\",\n        \"idEstadoCivil\": ,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/idEstadoCivil_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\",\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"65060823059\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"1111\",\n        \"unidadeFederativaIdentidade\": \"SP\",\n        \"dataEmissaoIdentidade\": \"PERNAMBUCANA\",\n        \"idEstadoCivil\": a,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/idNacionalidade_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\",\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"65060823059\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"1111\",\n        \"unidadeFederativaIdentidade\": \"SP\",\n        \"dataEmissaoIdentidade\": \"PERNAMBUCANA\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": ,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/idNacionalidade_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\",\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"65060823059\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"1111\",\n        \"unidadeFederativaIdentidade\": \"SP\",\n        \"dataEmissaoIdentidade\": \"PERNAMBUCANA\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": a,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/idNacionalidade_duplo_zero(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\",\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"65060823059\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"1111\",\n        \"unidadeFederativaIdentidade\": \"SP\",\n        \"dataEmissaoIdentidade\": \"PERNAMBUCANA\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 00,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/idParentesco_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\",\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"65060823059\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"1111\",\n        \"unidadeFederativaIdentidade\": \"SP\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": ,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/idParentesco_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\",\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"65060823059\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"1111\",\n        \"unidadeFederativaIdentidade\": \"SP\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": A,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/idParentesco_duplo_zero(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\",\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"96760484029\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"1111\",\n        \"unidadeFederativaIdentidade\": \"SP\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 00,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/idParentesco_fora_dominio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\",\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"20594064040\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"1111\",\n        \"unidadeFederativaIdentidade\": \"SP\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 35,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/email_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\",\"não deve ser mais curta que 1 caracter\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"50192444069\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"1111\",\n        \"unidadeFederativaIdentidade\": \"SP\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 30,\n        \"email\": \"\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/email_tam>_100(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.errors[0].message\",\"não deve ser maior que 100 caracteres\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"50192444069\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"1111\",\n        \"unidadeFederativaIdentidade\": \"SP\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 30,\n        \"email\": \"silvio.pernambucanas.com.brsilvio.pernambucanas.com.brsilvio.pernambucanas.com.brsilvio.pernambucanas.com.brsilvio\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/email_formato_invalido(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\",\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"50192444069\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"1111\",\n        \"unidadeFederativaIdentidade\": \"SP\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 30,\n        \"email\": \"silvio.pernambucanas.\",\n        \"flagDeficienteVisual\": true,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/flagDeficienteVisual_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\",\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"50192444069\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"1111\",\n        \"unidadeFederativaIdentidade\": \"SP\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 30,\n        \"email\": \"silvio.tadeu@pernambucanas.com.br\",\n        \"flagDeficienteVisual\": ,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/flagDeficienteVisual_#_dominio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\",\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"50192444069\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"F\",\n        \"numeroIdentidade\": \"00000000\",\n        \"orgaoExpedidorIdentidade\": \"1111\",\n        \"unidadeFederativaIdentidade\": \"SP\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 30,\n        \"email\": \"silvio.tadeu@pernambucanas.com.br\",\n        \"flagDeficienteVisual\": A,\n        \"id\": 70000739,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/70000739/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"70000739",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/campo_id_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\",\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"48042792026\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\":A,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/123/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"123",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/campo_id_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\",\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"48042792026\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\":,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/123/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"123",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/campo_id_duplo_zero(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\",\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"48042792026\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\":00,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/123/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"123",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/idTipoTelefone_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\",\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"48042792026\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\":1,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": ,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/123/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"123",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/idTipoTelefone_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\",\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"48042792026\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\":1,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": A,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/123/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"123",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/idTipoTelefone_#_dominio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagem de erro\", function () {\r",
													"  pm.response.to.have.jsonBody(\"error.message\",\"Internal Server Error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"42987587023\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\":1,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 20,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/123/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"123",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/ddd_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.error.message).to.eql(\"Erro ao validar os dados de entrada.\");\r",
													"  pm.expect(jsonData.error.errors[0].message).to.eql(\"não deve ser mais curta que 1 caracter\");\r",
													"  pm.expect(jsonData.error.errors[1].message).to.eql(\"deve corresponder ao padrão \\\"\\\\d{1,3}\\\"\");\r",
													"  \r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"42987587023\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\":1,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/123/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"123",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/ddd_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.error.message).to.eql(\"Erro ao validar os dados de entrada.\");\r",
													"  pm.expect(jsonData.error.errors[0].message).to.eql(\"deve corresponder ao padrão \\\"\\\\d{1,3}\\\"\");\r",
													"  \r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"42987587023\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\":1,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"aaa\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/123/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"123",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/ddd_tam_>_3(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.error.message).to.eql(\"Erro ao validar os dados de entrada.\");\r",
													"  pm.expect(jsonData.error.errors[0].message).to.eql(\"não deve ser maior que 3 caracteres\");\r",
													"  \r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"42987587023\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\":1,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"9999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/123/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"123",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/telefone_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.error.message).to.eql(\"Erro ao validar os dados de entrada.\");\r",
													"  pm.expect(jsonData.error.errors[0].message).to.eql(\"deve corresponder ao padrão \\\"\\\\d{9}\\\"\");\r",
													"  \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"42987587023\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\":1,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/123/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"123",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/telefone_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.error.message).to.eql(\"Erro ao validar os dados de entrada.\");\r",
													"  pm.expect(jsonData.error.errors[0].message).to.eql(\"deve corresponder ao padrão \\\"\\\\d{9}\\\"\");\r",
													"  \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"42987587023\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\":1,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"llhj\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/123/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"123",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/telefone_tam_>_9(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.error.message).to.eql(\"Internal Server Error\");\r",
													" });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"42987587023\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\":1,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/123/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"123",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/telefone_tam_<_9(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.error.message).to.eql(\"Erro ao validar os dados de entrada.\");\r",
													"  pm.expect(jsonData.error.errors[0].message).to.eql(\"deve corresponder ao padrão \\\"\\\\d{9}\\\"\");\r",
													"  \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"42987587023\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\":1,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"99999999\",\n                \"ramal\": \"9999\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/123/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"123",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/ramal_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.error.message).to.eql(\"Erro ao validar os dados de entrada.\");\r",
													"  pm.expect(jsonData.error.errors[0].message).to.eql(\"deve corresponder ao padrão \\\"^\\\\d+$\\\"\");\r",
													"  \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"42987587023\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\":1,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/123/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"123",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/ramal_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.error.message).to.eql(\"Erro ao validar os dados de entrada.\");\r",
													"  pm.expect(jsonData.error.errors[0].message).to.eql(\"deve corresponder ao padrão \\\"^\\\\d+$\\\"\");\r",
													"  \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"42987587023\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\":1,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"hh\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/123/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"123",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER011 - POST: /api/contas/{id}/ramal_tam_>_4(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.error.message).to.eql(\"Internal Server Error\");\r",
													" \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"persist\": {\n        \"nome\": \"José Lima da Silva\",\n        \"nomeImpresso\": \"JOSÉ L DA SILVA\",\n        \"numeroReceitaFederal\": \"42987587023\",\n        \"dataNascimento\": \"2020-10-31\",\n        \"sexo\": \"M\",\n        \"numeroIdentidade\": \"9999999\",\n        \"orgaoExpedidorIdentidade\": \"SSPPB\",\n        \"unidadeFederativaIdentidade\": \"DF\",\n        \"dataEmissaoIdentidade\": \"2020-10-31\",\n        \"idEstadoCivil\": 1,\n        \"idNacionalidade\": 1,\n        \"idParentesco\": 1,\n        \"email\": \"jose@exemplo.com\",\n        \"flagDeficienteVisual\": true,\n        \"id\":1,\n        \"telefones\": [\n            {\n                \"idTipoTelefone\": 1,\n                \"ddd\": \"999\",\n                \"telefone\": \"999999999\",\n                \"ramal\": \"15\"\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas/api/contas/123/cadastrar-adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas",
												"api",
												"contas",
												"123",
												"cadastrar-adicional"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER099 - POST:/api/contas/{id}/adicionais",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"idPessoa\": 12,\r\n  \"nomeImpresso\": \"JOSE L SILVA\",\r\n  \"idEstadoCivil\": 1,\r\n  \"idProfissao\": 1,\r\n  \"idNacionalidade\": 1,\r\n  \"idParentesco\": 1,\r\n  \"email\": \"pessoa@example.com\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://{{integrationURL}}/contas-adicionais/api/contas/70000907/adicionais",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas-adicionais",
												"api",
												"contas",
												"70000907",
												"adicionais"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER098 - GET: /api/contas/{id}/adicionais",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-trace-id",
												"value": "70bf9eb7-1153-41a1-83a4-353ea878dc06",
												"type": "text"
											},
											{
												"key": "x-correlation-id",
												"value": "9c6cea8d-0e5e-46ac-adfd-56c6cc848c71",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/contas-adicionais/api/contas/123/adicionais",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas-adicionais",
												"api",
												"contas",
												"123",
												"adicionais"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER098 - GET: /api/contas/{id}/adicionais_letra(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {\r",
													"    pm.response.to.have.status(500);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.error.message).to.eql(\"Internal Server Error\");\r",
													" \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-trace-id",
												"value": "70bf9eb7-1153-41a1-83a4-353ea878dc06",
												"type": "text"
											},
											{
												"key": "x-correlation-id",
												"value": "9c6cea8d-0e5e-46ac-adfd-56c6cc848c71",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/contas-adicionais/api/contas/123/adicionais",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas-adicionais",
												"api",
												"contas",
												"123",
												"adicionais"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER098 - GET: /api/contas/{id}/adicionais_vazio(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-trace-id",
												"value": "70bf9eb7-1153-41a1-83a4-353ea878dc06",
												"type": "text"
											},
											{
												"key": "x-correlation-id",
												"value": "9c6cea8d-0e5e-46ac-adfd-56c6cc848c71",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/contas-adicionais/api/contas//adicionais",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas-adicionais",
												"api",
												"contas",
												"",
												"adicionais"
											]
										}
									},
									"response": []
								},
								{
									"name": "PIER098 - GET: /api/contas/{id}/adicionais_inexistente(-)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
													"     pm.response.to.be.withBody;\r",
													"     pm.response.to.be.json;\r",
													"});\r",
													"\r",
													"pm.test(\"Validar mensagens de erro\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.error.message).to.eql(\"A conta informada é inexistente.\");\r",
													" pm.expect(jsonData.error.errors[0].message).to.eql(\"accountId inexistente\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-trace-id",
												"value": "70bf9eb7-1153-41a1-83a4-353ea878dc06",
												"type": "text"
											},
											{
												"key": "x-correlation-id",
												"value": "9c6cea8d-0e5e-46ac-adfd-56c6cc848c71",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/contas-adicionais/api/contas/56789/adicionais",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas-adicionais",
												"api",
												"contas",
												"56789",
												"adicionais"
											]
										}
									},
									"response": []
								},
								{
									"name": "HEIM208 - Cadastro de solicitação proposta conta digital",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "apikey",
												"value": "TGoGobRgn3lHBpYeLdL66EXiDjFM82EZ",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "https://{{integrationURL}}/contas-adicionais/api/contas/{id}/adicional",
											"protocol": "https",
											"host": [
												"{{integrationURL}}"
											],
											"path": [
												"contas-adicionais",
												"api",
												"contas",
												"{id}",
												"adicional"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Cartão",
					"item": [
						{
							"name": "PIER108 - POST: /api/contas/{id}/pessoas/{id_pessoa}/gerar-cartao",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//para gerar o cartão executar o endpoint:https://{{integrationURL}}/contas/api/contas?idPessoa=1298 e capturar o id gerado no request e passar como argumento neste endpoint. A var \"idConta\" esta armazendo o id gerado no endpoint acima.\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"idMifare\": 0,\n  \"matriculaMifare\": \"string\",\n  \"idProduto\" : 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{integrationURL}}/contas/api/contas/{{idConta}}/pessoas/{{idPessoa}}/gerar-cartao",
									"protocol": "https",
									"host": [
										"{{integrationURL}}"
									],
									"path": [
										"contas",
										"api",
										"contas",
										"{{idConta}}",
										"pessoas",
										"{{idPessoa}}",
										"gerar-cartao"
									]
								}
							},
							"response": []
						},
						{
							"name": "PIER108 - POST: /api/contas/{id}/pessoas/{id_pessoa}/gerar-cartao_existente(-)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});\r",
											"\r",
											"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
											"     pm.response.to.be.withBody;\r",
											"     pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"pm.test(\"Validar mensagem de erro\", function () {\r",
											"  pm.response.to.have.jsonBody(\"error.message\", \"Já existe um cartão fisico ativo para este portador\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"idMifare\": 0,\n  \"matriculaMifare\": \"string\",\n  \"idProduto\" : 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{integrationURL}}/contas/api/contas/70001890/pessoas/1497/gerar-cartao",
									"protocol": "https",
									"host": [
										"{{integrationURL}}"
									],
									"path": [
										"contas",
										"api",
										"contas",
										"70001890",
										"pessoas",
										"1497",
										"gerar-cartao"
									]
								}
							},
							"response": []
						},
						{
							"name": "PIER108 - POST: /api/contas/{id}/pessoas/{id_pessoa}/gerar-cartao_sem_id(-)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
											"     pm.response.to.be.withBody;\r",
											"     pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"pm.test(\"Validar mensagem de erro\", function () {\r",
											"  pm.response.to.have.jsonBody(\"message\", \"Missing Authentication Token\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"idMifare\": 0,\n  \"matriculaMifare\": \"string\",\n  \"idProduto\" : 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{integrationURL}}/contas/api/contas/pessoas/1497/gerar-cartao",
									"protocol": "https",
									"host": [
										"{{integrationURL}}"
									],
									"path": [
										"contas",
										"api",
										"contas",
										"pessoas",
										"1497",
										"gerar-cartao"
									]
								}
							},
							"response": []
						},
						{
							"name": "PIER108 - POST: /api/contas/{id}/pessoas/{id_pessoa}/gerar-cartao_letra_id(-)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
											"     pm.response.to.be.withBody;\r",
											"     pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"pm.test(\"Validar mensagem de erro\", function () {\r",
											"  pm.response.to.have.jsonBody(\"message\", \"Missing Authentication Token\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"idMifare\": 0,\n  \"matriculaMifare\": \"string\",\n  \"idProduto\" : 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{integrationURL}}/contas/api/contas/pessoas/uuuaaaa/1497/gerar-cartao",
									"protocol": "https",
									"host": [
										"{{integrationURL}}"
									],
									"path": [
										"contas",
										"api",
										"contas",
										"pessoas",
										"uuuaaaa",
										"1497",
										"gerar-cartao"
									]
								}
							},
							"response": []
						},
						{
							"name": "PIER108 - POST: /api/contas/{id}/pessoas/{id_pessoa}/gerar-cartao_id_inexistente(-)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
											"     pm.response.to.be.withBody;\r",
											"     pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"pm.test(\"Validar mensagem de erro\", function () {\r",
											"  pm.response.to.have.jsonBody(\"message\", \"Missing Authentication Token\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"idMifare\": 0,\n  \"matriculaMifare\": \"string\",\n  \"idProduto\" : 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{integrationURL}}/contas/api/contas/pessoas/00000000/1497/gerar-cartao",
									"protocol": "https",
									"host": [
										"{{integrationURL}}"
									],
									"path": [
										"contas",
										"api",
										"contas",
										"pessoas",
										"00000000",
										"1497",
										"gerar-cartao"
									]
								}
							},
							"response": []
						},
						{
							"name": "PIER108 - POST: /api/contas/{id}/pessoas/{id_pessoa}/gerar-cartao_sem_idPessoa(-)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
											"     pm.response.to.be.withBody;\r",
											"     pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"pm.test(\"Validar mensagem de erro\", function () {\r",
											"  pm.response.to.have.jsonBody(\"message\", \"Missing Authentication Token\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"idMifare\": 0,\n  \"matriculaMifare\": \"string\",\n  \"idProduto\" : 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{integrationURL}}/contas/api/contas/{{idConta}}/pessoas//gerar-cartao",
									"protocol": "https",
									"host": [
										"{{integrationURL}}"
									],
									"path": [
										"contas",
										"api",
										"contas",
										"{{idConta}}",
										"pessoas",
										"",
										"gerar-cartao"
									]
								}
							},
							"response": []
						},
						{
							"name": "PIER108 - POST: /api/contas/{id}/pessoas/{id_pessoa}/gerar-cartao_idPessoa_letra(-)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
											"     pm.response.to.be.badRequest;\r",
											"     pm.response.to.be.withBody;\r",
											"     pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"pm.test(\"Validar mensagem de erro\", function () {\r",
											"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"deve ser um número\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"idMifare\": 0,\n  \"matriculaMifare\": \"string\",\n  \"idProduto\" : 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{integrationURL}}/contas/api/contas/{{idConta}}/pessoas/wweerrr/gerar-cartao",
									"protocol": "https",
									"host": [
										"{{integrationURL}}"
									],
									"path": [
										"contas",
										"api",
										"contas",
										"{{idConta}}",
										"pessoas",
										"wweerrr",
										"gerar-cartao"
									]
								}
							},
							"response": []
						},
						{
							"name": "PIER108 - POST: /api/contas/{id}/pessoas/{id_pessoa}/gerar-cartao_idPessoa_inexistente(-)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
											"     pm.response.to.be.badRequest;\r",
											"     pm.response.to.be.withBody;\r",
											"     pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"pm.test(\"Validar mensagem de erro\", function () {\r",
											"  pm.response.to.have.jsonBody(\"error.errors[0].message\", \"partyId não encontrado\");\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"idMifare\": 0,\n  \"matriculaMifare\": \"string\",\n  \"idProduto\" : 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{integrationURL}}/contas/api/contas/{{idConta}}/pessoas/0000/gerar-cartao",
									"protocol": "https",
									"host": [
										"{{integrationURL}}"
									],
									"path": [
										"contas",
										"api",
										"contas",
										"{{idConta}}",
										"pessoas",
										"0000",
										"gerar-cartao"
									]
								}
							},
							"response": []
						},
						{
							"name": "PIER075 - /api/cartoes/{id}/bloquear",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://{{integrationURL}}/cartoes-manutencao/api/cartoes/70001027/bloquear?id_status=2&observacao=\"testing\"",
									"protocol": "https",
									"host": [
										"{{integrationURL}}"
									],
									"path": [
										"cartoes-manutencao",
										"api",
										"cartoes",
										"70001027",
										"bloquear"
									],
									"query": [
										{
											"key": "id_status",
											"value": "2"
										},
										{
											"key": "observacao",
											"value": "\"testing\""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "PIER076 - POST /api/cartoes/{idCartao}/cancelar",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{integrationURL}}/cartoes-manutencao/api/cartoes/1260/cancelar?id_status=11&observacao=1",
									"protocol": "https",
									"host": [
										"{{integrationURL}}"
									],
									"path": [
										"cartoes-manutencao",
										"api",
										"cartoes",
										"1260",
										"cancelar"
									],
									"query": [
										{
											"key": "id_status",
											"value": "11"
										},
										{
											"key": "observacao",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "PIER084 - /api/cartoes/{id}/cvv-dinamico",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://{{integrationURL}}/cartoes-cvv/api/cartoes/1435/cvv-dinamico",
									"protocol": "https",
									"host": [
										"{{integrationURL}}"
									],
									"path": [
										"cartoes-cvv",
										"api",
										"cartoes",
										"1435",
										"cvv-dinamico"
									],
									"query": [
										{
											"key": "dataExpiracao",
											"value": "2023-06-30T18:47:52.310Z",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "PIER086 - POST: /api/cartoes/{id}/desbloquear",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "apikey",
										"value": "TGoGobRgn3lHBpYeLdL66EXiDjFM82EZ",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "accountId",
										"value": "104",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://{{integrationURL}}/cartoes-manutencao/api/cartoes/1264/desbloquear",
									"protocol": "https",
									"host": [
										"{{integrationURL}}"
									],
									"path": [
										"cartoes-manutencao",
										"api",
										"cartoes",
										"1264",
										"desbloquear"
									]
								}
							},
							"response": []
						},
						{
							"name": "PIER104 - POST:/api/contas/{id}/gerar-cartao-virtual",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "apikey",
										"value": "TGoGobRgn3lHBpYeLdL66EXiDjFM82EZ",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{integrationURL}}/contas/api/contas/22/gerar-cartao-virtual?dataValidade=2020-10-31T01:30:00.000-05:00&idPessoaFisica=1",
									"protocol": "https",
									"host": [
										"{{integrationURL}}"
									],
									"path": [
										"contas",
										"api",
										"contas",
										"22",
										"gerar-cartao-virtual"
									],
									"query": [
										{
											"key": "dataValidade",
											"value": "2020-10-31T01:30:00.000-05:00"
										},
										{
											"key": "idPessoaFisica",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "PIER002 - GET: /api/cartoes [D]",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{integrationURL}}/cartoes/api/cartoes?numeroCartao=70000379&idConta=70000849",
									"protocol": "https",
									"host": [
										"{{integrationURL}}"
									],
									"path": [
										"cartoes",
										"api",
										"cartoes"
									],
									"query": [
										{
											"key": "numeroCartao",
											"value": "70000379"
										},
										{
											"key": "idConta",
											"value": "70000849"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "PIER073 - GET:/api/cartoes/{id}",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-trace-id",
										"value": "70bf9eb7-1153-41a1-83a4-353ea878dc06",
										"type": "text"
									},
									{
										"key": "x-correlation-id",
										"value": "9c6cea8d-0e5e-46ac-adfd-56c6cc848c71",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{integrationURL}}/cartoes/api/cartoes/2",
									"protocol": "https",
									"host": [
										"{{integrationURL}}"
									],
									"path": [
										"cartoes",
										"api",
										"cartoes",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "PIER083 - GET:/api/cartoes/{id}/cvv-dinamico",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-trace-id",
										"value": "70bf9eb7-1153-41a1-83a4-353ea878dc06"
									},
									{
										"key": "x-correlation-id",
										"value": "9c6cea8d-0e5e-46ac-adfd-56c6cc848c71"
									}
								],
								"url": {
									"raw": "https://{{integrationURL}}/cartoes-cvv/api/cartoes/70001026/cvv-dinamico",
									"protocol": "https",
									"host": [
										"{{integrationURL}}"
									],
									"path": [
										"cartoes-cvv",
										"api",
										"cartoes",
										"70001026",
										"cvv-dinamico"
									]
								}
							},
							"response": []
						},
						{
							"name": "PIER088 - /api/cartoes/{id}/senhas",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{integrationURL}}/cartoes/api/cartoes/105/senhas",
									"protocol": "https",
									"host": [
										"{{integrationURL}}"
									],
									"path": [
										"cartoes",
										"api",
										"cartoes",
										"105",
										"senhas"
									]
								}
							},
							"response": []
						},
						{
							"name": "PIER146 - GET:/api/cartoes/{id}/limites-disponibilidades",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://{{integrationURL}}/cartoes-limites/api/cartoes/70000379/limites-disponibilidades",
									"protocol": "https",
									"host": [
										"{{integrationURL}}"
									],
									"path": [
										"cartoes-limites",
										"api",
										"cartoes",
										"70000379",
										"limites-disponibilidades"
									]
								}
							},
							"response": []
						},
						{
							"name": "PIER085 - /api/cartoes/{id}/cvv-dinamico",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "apikey",
										"value": "TGoGobRgn3lHBpYeLdL66EXiDjFM82EZ",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{integrationURL}}/cartoes-cvv/api/cartoes/{id}/cvv-dinamico",
									"protocol": "https",
									"host": [
										"{{integrationURL}}"
									],
									"path": [
										"cartoes-cvv",
										"api",
										"cartoes",
										"{id}",
										"cvv-dinamico"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Negocio",
					"item": [
						{
							"name": "PIER134 - POST: /api/pessoas-detalhes/incluir_pessoa(+)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
											"    pm.response.to.be.ok\r",
											"    pm.response.to.be.withBody;\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"\r",
											"const schema = \r",
											"    \r",
											"   {\r",
											"    \"type\": \"object\",\r",
											"    \"default\": {},\r",
											"    \"title\": \"Root Schema\",\r",
											"    \"required\": [\r",
											"        \"idPessoa\",\r",
											"        \"nomeMae\",\r",
											"        \"idEstadoCivil\",\r",
											"        \"idNaturezaOcupacao\",\r",
											"        \"idProfissao\",\r",
											"        \"idNacionalidade\",\r",
											"        \"naturalidadeCidade\",\r",
											"        \"naturalidadeEstado\",\r",
											"        \"grauInstrucao\",\r",
											"        \"email\",\r",
											"        \"numeroCnh\",\r",
											"        \"dataEmissaoCnh\",\r",
											"        \"pessoaPoliticamenteExposta\",\r",
											"        \"patrimonioTotal\",\r",
											"        \"salario\",\r",
											"        \"nomeEmpresa\",\r",
											"        \"impedidoFinanciamento\",\r",
											"        \"chequeEspecial\",\r",
											"        \"flagSemEnderecoComercialFixo\",\r",
											"        \"nomePai\",\r",
											"        \"numeroDependentes\",\r",
											"        \"numeroBanco\",\r",
											"        \"numeroAgencia\",\r",
											"        \"numeroContaCorrente\",\r",
											"        \"nomeReferencia1\",\r",
											"        \"enderecoReferencia1\",\r",
											"        \"nomeReferencia2\",\r",
											"        \"enderecoReferencia2\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"idPessoa\": {\r",
											"            \"type\": \"integer\",\r",
											"            \"default\": 0,\r",
											"            \"title\": \"The idPessoa Schema\",\r",
											"            \"examples\": [\r",
											"                1497\r",
											"            ]\r",
											"        },\r",
											"        \"nomeMae\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The nomeMae Schema\",\r",
											"            \"examples\": [\r",
											"                \"Annie Lennox\"\r",
											"            ]\r",
											"        },\r",
											"        \"idEstadoCivil\": {\r",
											"            \"type\": \"integer\",\r",
											"            \"default\": 0,\r",
											"            \"title\": \"The idEstadoCivil Schema\",\r",
											"            \"examples\": [\r",
											"                1\r",
											"            ]\r",
											"        },\r",
											"        \"idNaturezaOcupacao\": {\r",
											"            \"type\": \"integer\",\r",
											"            \"default\": 0,\r",
											"            \"title\": \"The idNaturezaOcupacao Schema\",\r",
											"            \"examples\": [\r",
											"                9876987\r",
											"            ]\r",
											"        },\r",
											"        \"idProfissao\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The idProfissao Schema\",\r",
											"            \"examples\": [\r",
											"                \"Engenheiro\"\r",
											"            ]\r",
											"        },\r",
											"        \"idNacionalidade\": {\r",
											"            \"type\": \"integer\",\r",
											"            \"default\": 0,\r",
											"            \"title\": \"The idNacionalidade Schema\",\r",
											"            \"examples\": [\r",
											"                76\r",
											"            ]\r",
											"        },\r",
											"        \"naturalidadeCidade\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The naturalidadeCidade Schema\",\r",
											"            \"examples\": [\r",
											"                \"São Paulo\"\r",
											"            ]\r",
											"        },\r",
											"        \"naturalidadeEstado\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The naturalidadeEstado Schema\",\r",
											"            \"examples\": [\r",
											"                \"SP\"\r",
											"            ]\r",
											"        },\r",
											"        \"grauInstrucao\": {\r",
											"            \"type\": \"integer\",\r",
											"            \"default\": 0,\r",
											"            \"title\": \"The grauInstrucao Schema\",\r",
											"            \"examples\": [\r",
											"                1\r",
											"            ]\r",
											"        },\r",
											"        \"email\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The email Schema\",\r",
											"            \"examples\": [\r",
											"                \"massa@email.com\"\r",
											"            ]\r",
											"        },\r",
											"        \"numeroCnh\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The numeroCnh Schema\",\r",
											"            \"examples\": [\r",
											"                \"23143031556\"\r",
											"            ]\r",
											"        },\r",
											"        \"dataEmissaoCnh\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The dataEmissaoCnh Schema\",\r",
											"            \"examples\": [\r",
											"                \"2020-10-31\"\r",
											"            ]\r",
											"        },\r",
											"        \"pessoaPoliticamenteExposta\": {\r",
											"            \"type\": \"boolean\",\r",
											"            \"default\": false,\r",
											"            \"title\": \"The pessoaPoliticamenteExposta Schema\",\r",
											"            \"examples\": [\r",
											"                false\r",
											"            ]\r",
											"        },\r",
											"        \"patrimonioTotal\": {\r",
											"            \"type\": \"integer\",\r",
											"            \"default\": 0,\r",
											"            \"title\": \"The patrimonioTotal Schema\",\r",
											"            \"examples\": [\r",
											"                100000\r",
											"            ]\r",
											"        },\r",
											"        \"salario\": {\r",
											"            \"type\": \"integer\",\r",
											"            \"default\": 0,\r",
											"            \"title\": \"The salario Schema\",\r",
											"            \"examples\": [\r",
											"                2200\r",
											"            ]\r",
											"        },\r",
											"        \"nomeEmpresa\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The nomeEmpresa Schema\",\r",
											"            \"examples\": [\r",
											"                \"some company\"\r",
											"            ]\r",
											"        },\r",
											"        \"impedidoFinanciamento\": {\r",
											"            \"type\": \"boolean\",\r",
											"            \"default\": false,\r",
											"            \"title\": \"The impedidoFinanciamento Schema\",\r",
											"            \"examples\": [\r",
											"                false\r",
											"            ]\r",
											"        },\r",
											"        \"chequeEspecial\": {\r",
											"            \"type\": \"integer\",\r",
											"            \"default\": 0,\r",
											"            \"title\": \"The chequeEspecial Schema\",\r",
											"            \"examples\": [\r",
											"                0\r",
											"            ]\r",
											"        },\r",
											"        \"flagSemEnderecoComercialFixo\": {\r",
											"            \"type\": \"boolean\",\r",
											"            \"default\": false,\r",
											"            \"title\": \"The flagSemEnderecoComercialFixo Schema\",\r",
											"            \"examples\": [\r",
											"                false\r",
											"            ]\r",
											"        },\r",
											"        \"nomePai\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The nomePai Schema\",\r",
											"            \"examples\": [\r",
											"                \"Pai da Silva\"\r",
											"            ]\r",
											"        },\r",
											"        \"numeroDependentes\": {\r",
											"            \"type\": \"integer\",\r",
											"            \"default\": 0,\r",
											"            \"title\": \"The numeroDependentes Schema\",\r",
											"            \"examples\": [\r",
											"                2\r",
											"            ]\r",
											"        },\r",
											"        \"numeroBanco\": {\r",
											"            \"type\": \"integer\",\r",
											"            \"default\": 0,\r",
											"            \"title\": \"The numeroBanco Schema\",\r",
											"            \"examples\": [\r",
											"                12345\r",
											"            ]\r",
											"        },\r",
											"        \"numeroAgencia\": {\r",
											"            \"type\": \"integer\",\r",
											"            \"default\": 0,\r",
											"            \"title\": \"The numeroAgencia Schema\",\r",
											"            \"examples\": [\r",
											"                12349\r",
											"            ]\r",
											"        },\r",
											"        \"numeroContaCorrente\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The numeroContaCorrente Schema\",\r",
											"            \"examples\": [\r",
											"                \"9865544\"\r",
											"            ]\r",
											"        },\r",
											"        \"nomeReferencia1\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The nomeReferencia1 Schema\",\r",
											"            \"examples\": [\r",
											"                \"some nomeReferencia1\"\r",
											"            ]\r",
											"        },\r",
											"        \"enderecoReferencia1\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The enderecoReferencia1 Schema\",\r",
											"            \"examples\": [\r",
											"                \"some enderecoReferencia1\"\r",
											"            ]\r",
											"        },\r",
											"        \"nomeReferencia2\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The nomeReferencia2 Schema\",\r",
											"            \"examples\": [\r",
											"                \"some nomeReferencia2\"\r",
											"            ]\r",
											"        },\r",
											"        \"enderecoReferencia2\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The enderecoReferencia2 Schema\",\r",
											"            \"examples\": [\r",
											"                \"some enderecoReferencia2\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"examples\": [{\r",
											"        \"idPessoa\": 1497,\r",
											"        \"nomeMae\": \"Annie Lennox\",\r",
											"        \"idEstadoCivil\": 1,\r",
											"        \"idNaturezaOcupacao\": 9876987,\r",
											"        \"idProfissao\": \"Engenheiro\",\r",
											"        \"idNacionalidade\": 76,\r",
											"        \"naturalidadeCidade\": \"São Paulo\",\r",
											"        \"naturalidadeEstado\": \"SP\",\r",
											"        \"grauInstrucao\": 1,\r",
											"        \"email\": \"massa@email.com\",\r",
											"        \"numeroCnh\": \"23143031556\",\r",
											"        \"dataEmissaoCnh\": \"2020-10-31\",\r",
											"        \"pessoaPoliticamenteExposta\": false,\r",
											"        \"patrimonioTotal\": 100000,\r",
											"        \"salario\": 2200,\r",
											"        \"nomeEmpresa\": \"some company\",\r",
											"        \"impedidoFinanciamento\": false,\r",
											"        \"chequeEspecial\": 0,\r",
											"        \"flagSemEnderecoComercialFixo\": false,\r",
											"        \"nomePai\": \"Pai da Silva\",\r",
											"        \"numeroDependentes\": 2,\r",
											"        \"numeroBanco\": 12345,\r",
											"        \"numeroAgencia\": 12349,\r",
											"        \"numeroContaCorrente\": \"9865544\",\r",
											"        \"nomeReferencia1\": \"some nomeReferencia1\",\r",
											"        \"enderecoReferencia1\": \"some enderecoReferencia1\",\r",
											"        \"nomeReferencia2\": \"some nomeReferencia2\",\r",
											"        \"enderecoReferencia2\": \"some enderecoReferencia2\"\r",
											"    }]\r",
											"}\r",
											"\r",
											"pm.test(\"Validar a estrutura do corpo\", function () {\r",
											"    pm.response.to.have.jsonSchema(schema);\r",
											"});\r",
											"\r",
											"// Extrair o valor do campo idPessoa da resposta\r",
											"var jsonData = pm.response.json();\r",
											"var idPeople = jsonData.idPessoa;\r",
											"// Armazenar o valor em uma variável global\r",
											"pm.globals.set(\"idPeople\", idPeople);\r",
											"console.log(jsonData);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"const schema = \r",
											"    \r",
											"   {\r",
											"    \"type\": \"object\",\r",
											"    \"default\": {},\r",
											"    \"title\": \"Root Schema\",\r",
											"    \"required\": [\r",
											"        \"idPessoa\",\r",
											"        \"nomeMae\",\r",
											"        \"idEstadoCivil\",\r",
											"        \"idNaturezaOcupacao\",\r",
											"        \"idProfissao\",\r",
											"        \"idNacionalidade\",\r",
											"        \"naturalidadeCidade\",\r",
											"        \"naturalidadeEstado\",\r",
											"        \"grauInstrucao\",\r",
											"        \"email\",\r",
											"        \"numeroCnh\",\r",
											"        \"dataEmissaoCnh\",\r",
											"        \"pessoaPoliticamenteExposta\",\r",
											"        \"patrimonioTotal\",\r",
											"        \"salario\",\r",
											"        \"nomeEmpresa\",\r",
											"        \"impedidoFinanciamento\",\r",
											"        \"chequeEspecial\",\r",
											"        \"flagSemEnderecoComercialFixo\",\r",
											"        \"nomePai\",\r",
											"        \"numeroDependentes\",\r",
											"        \"numeroBanco\",\r",
											"        \"numeroAgencia\",\r",
											"        \"numeroContaCorrente\",\r",
											"        \"nomeReferencia1\",\r",
											"        \"enderecoReferencia1\",\r",
											"        \"nomeReferencia2\",\r",
											"        \"enderecoReferencia2\"\r",
											"    ],\r",
											"    \"properties\": {\r",
											"        \"idPessoa\": {\r",
											"            \"type\": \"integer\",\r",
											"            \"default\": 0,\r",
											"            \"title\": \"The idPessoa Schema\",\r",
											"            \"examples\": [\r",
											"                1497\r",
											"            ]\r",
											"        },\r",
											"        \"nomeMae\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The nomeMae Schema\",\r",
											"            \"examples\": [\r",
											"                \"Annie Lennox\"\r",
											"            ]\r",
											"        },\r",
											"        \"idEstadoCivil\": {\r",
											"            \"type\": \"integer\",\r",
											"            \"default\": 0,\r",
											"            \"title\": \"The idEstadoCivil Schema\",\r",
											"            \"examples\": [\r",
											"                1\r",
											"            ]\r",
											"        },\r",
											"        \"idNaturezaOcupacao\": {\r",
											"            \"type\": \"integer\",\r",
											"            \"default\": 0,\r",
											"            \"title\": \"The idNaturezaOcupacao Schema\",\r",
											"            \"examples\": [\r",
											"                9876987\r",
											"            ]\r",
											"        },\r",
											"        \"idProfissao\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The idProfissao Schema\",\r",
											"            \"examples\": [\r",
											"                \"Engenheiro\"\r",
											"            ]\r",
											"        },\r",
											"        \"idNacionalidade\": {\r",
											"            \"type\": \"integer\",\r",
											"            \"default\": 0,\r",
											"            \"title\": \"The idNacionalidade Schema\",\r",
											"            \"examples\": [\r",
											"                76\r",
											"            ]\r",
											"        },\r",
											"        \"naturalidadeCidade\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The naturalidadeCidade Schema\",\r",
											"            \"examples\": [\r",
											"                \"São Paulo\"\r",
											"            ]\r",
											"        },\r",
											"        \"naturalidadeEstado\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The naturalidadeEstado Schema\",\r",
											"            \"examples\": [\r",
											"                \"SP\"\r",
											"            ]\r",
											"        },\r",
											"        \"grauInstrucao\": {\r",
											"            \"type\": \"integer\",\r",
											"            \"default\": 0,\r",
											"            \"title\": \"The grauInstrucao Schema\",\r",
											"            \"examples\": [\r",
											"                1\r",
											"            ]\r",
											"        },\r",
											"        \"email\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The email Schema\",\r",
											"            \"examples\": [\r",
											"                \"massa@email.com\"\r",
											"            ]\r",
											"        },\r",
											"        \"numeroCnh\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The numeroCnh Schema\",\r",
											"            \"examples\": [\r",
											"                \"23143031556\"\r",
											"            ]\r",
											"        },\r",
											"        \"dataEmissaoCnh\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The dataEmissaoCnh Schema\",\r",
											"            \"examples\": [\r",
											"                \"2020-10-31\"\r",
											"            ]\r",
											"        },\r",
											"        \"pessoaPoliticamenteExposta\": {\r",
											"            \"type\": \"boolean\",\r",
											"            \"default\": false,\r",
											"            \"title\": \"The pessoaPoliticamenteExposta Schema\",\r",
											"            \"examples\": [\r",
											"                false\r",
											"            ]\r",
											"        },\r",
											"        \"patrimonioTotal\": {\r",
											"            \"type\": \"integer\",\r",
											"            \"default\": 0,\r",
											"            \"title\": \"The patrimonioTotal Schema\",\r",
											"            \"examples\": [\r",
											"                100000\r",
											"            ]\r",
											"        },\r",
											"        \"salario\": {\r",
											"            \"type\": \"integer\",\r",
											"            \"default\": 0,\r",
											"            \"title\": \"The salario Schema\",\r",
											"            \"examples\": [\r",
											"                2200\r",
											"            ]\r",
											"        },\r",
											"        \"nomeEmpresa\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The nomeEmpresa Schema\",\r",
											"            \"examples\": [\r",
											"                \"some company\"\r",
											"            ]\r",
											"        },\r",
											"        \"impedidoFinanciamento\": {\r",
											"            \"type\": \"boolean\",\r",
											"            \"default\": false,\r",
											"            \"title\": \"The impedidoFinanciamento Schema\",\r",
											"            \"examples\": [\r",
											"                false\r",
											"            ]\r",
											"        },\r",
											"        \"chequeEspecial\": {\r",
											"            \"type\": \"integer\",\r",
											"            \"default\": 0,\r",
											"            \"title\": \"The chequeEspecial Schema\",\r",
											"            \"examples\": [\r",
											"                0\r",
											"            ]\r",
											"        },\r",
											"        \"flagSemEnderecoComercialFixo\": {\r",
											"            \"type\": \"boolean\",\r",
											"            \"default\": false,\r",
											"            \"title\": \"The flagSemEnderecoComercialFixo Schema\",\r",
											"            \"examples\": [\r",
											"                false\r",
											"            ]\r",
											"        },\r",
											"        \"nomePai\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The nomePai Schema\",\r",
											"            \"examples\": [\r",
											"                \"Pai da Silva\"\r",
											"            ]\r",
											"        },\r",
											"        \"numeroDependentes\": {\r",
											"            \"type\": \"integer\",\r",
											"            \"default\": 0,\r",
											"            \"title\": \"The numeroDependentes Schema\",\r",
											"            \"examples\": [\r",
											"                2\r",
											"            ]\r",
											"        },\r",
											"        \"numeroBanco\": {\r",
											"            \"type\": \"integer\",\r",
											"            \"default\": 0,\r",
											"            \"title\": \"The numeroBanco Schema\",\r",
											"            \"examples\": [\r",
											"                12345\r",
											"            ]\r",
											"        },\r",
											"        \"numeroAgencia\": {\r",
											"            \"type\": \"integer\",\r",
											"            \"default\": 0,\r",
											"            \"title\": \"The numeroAgencia Schema\",\r",
											"            \"examples\": [\r",
											"                12349\r",
											"            ]\r",
											"        },\r",
											"        \"numeroContaCorrente\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The numeroContaCorrente Schema\",\r",
											"            \"examples\": [\r",
											"                \"9865544\"\r",
											"            ]\r",
											"        },\r",
											"        \"nomeReferencia1\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The nomeReferencia1 Schema\",\r",
											"            \"examples\": [\r",
											"                \"some nomeReferencia1\"\r",
											"            ]\r",
											"        },\r",
											"        \"enderecoReferencia1\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The enderecoReferencia1 Schema\",\r",
											"            \"examples\": [\r",
											"                \"some enderecoReferencia1\"\r",
											"            ]\r",
											"        },\r",
											"        \"nomeReferencia2\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The nomeReferencia2 Schema\",\r",
											"            \"examples\": [\r",
											"                \"some nomeReferencia2\"\r",
											"            ]\r",
											"        },\r",
											"        \"enderecoReferencia2\": {\r",
											"            \"type\": \"string\",\r",
											"            \"default\": \"\",\r",
											"            \"title\": \"The enderecoReferencia2 Schema\",\r",
											"            \"examples\": [\r",
											"                \"some enderecoReferencia2\"\r",
											"            ]\r",
											"        }\r",
											"    },\r",
											"    \"examples\": [{\r",
											"        \"idPessoa\": 1497,\r",
											"        \"nomeMae\": \"Annie Lennox\",\r",
											"        \"idEstadoCivil\": 1,\r",
											"        \"idNaturezaOcupacao\": 9876987,\r",
											"        \"idProfissao\": \"Engenheiro\",\r",
											"        \"idNacionalidade\": 76,\r",
											"        \"naturalidadeCidade\": \"São Paulo\",\r",
											"        \"naturalidadeEstado\": \"SP\",\r",
											"        \"grauInstrucao\": 1,\r",
											"        \"email\": \"massa@email.com\",\r",
											"        \"numeroCnh\": \"23143031556\",\r",
											"        \"dataEmissaoCnh\": \"2020-10-31\",\r",
											"        \"pessoaPoliticamenteExposta\": false,\r",
											"        \"patrimonioTotal\": 100000,\r",
											"        \"salario\": 2200,\r",
											"        \"nomeEmpresa\": \"some company\",\r",
											"        \"impedidoFinanciamento\": false,\r",
											"        \"chequeEspecial\": 0,\r",
											"        \"flagSemEnderecoComercialFixo\": false,\r",
											"        \"nomePai\": \"Pai da Silva\",\r",
											"        \"numeroDependentes\": 2,\r",
											"        \"numeroBanco\": 12345,\r",
											"        \"numeroAgencia\": 12349,\r",
											"        \"numeroContaCorrente\": \"9865544\",\r",
											"        \"nomeReferencia1\": \"some nomeReferencia1\",\r",
											"        \"enderecoReferencia1\": \"some enderecoReferencia1\",\r",
											"        \"nomeReferencia2\": \"some nomeReferencia2\",\r",
											"        \"enderecoReferencia2\": \"some enderecoReferencia2\"\r",
											"    }]\r",
											"};"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://{{integrationURL}}/pessoas-detalhes/api/pessoas-detalhes?idPessoa=1497&nomeMae=Annie Lennox&idEstadoCivil=1&idProfissao=Engenheiro&idNaturezaOcupacao=9876987&idNacionalidade=76&numeroBanco=12345&numeroAgencia=12349&numeroContaCorrente=9865544&email=massa@email.com&naturalidadeCidade=São Paulo&naturalidadeEstado=SP&grauInstrucao=1&nomePai=Pai da Silva&numeroCnh=23143031556&pessoaPoliticamenteExposta=false&usuarioAlteracao=666&flagSemEnderecoComercialFixo=false&dataEmissaoCnh=2020-10-31T01:30:00.000-05:00&numeroDependentes=2&impedidoFinanciamento=false&nomeEmpresa=some company&nomeReferencia1=some nomeReferencia1&enderecoReferencia1=some enderecoReferencia1&nomeReferencia2=some nomeReferencia2&enderecoReferencia2=some enderecoReferencia2&chequeEspecial=0&flagNomePaiNaoInformado=false&salario=2200&patrimonioTotal=100000",
									"protocol": "https",
									"host": [
										"{{integrationURL}}"
									],
									"path": [
										"pessoas-detalhes",
										"api",
										"pessoas-detalhes"
									],
									"query": [
										{
											"key": "idPessoa",
											"value": "1497"
										},
										{
											"key": "nomeMae",
											"value": "Annie Lennox"
										},
										{
											"key": "idEstadoCivil",
											"value": "1"
										},
										{
											"key": "idProfissao",
											"value": "Engenheiro"
										},
										{
											"key": "idNaturezaOcupacao",
											"value": "9876987"
										},
										{
											"key": "idNacionalidade",
											"value": "76"
										},
										{
											"key": "numeroBanco",
											"value": "12345"
										},
										{
											"key": "numeroAgencia",
											"value": "12349"
										},
										{
											"key": "numeroContaCorrente",
											"value": "9865544"
										},
										{
											"key": "email",
											"value": "massa@email.com"
										},
										{
											"key": "naturalidadeCidade",
											"value": "São Paulo"
										},
										{
											"key": "naturalidadeEstado",
											"value": "SP"
										},
										{
											"key": "grauInstrucao",
											"value": "1"
										},
										{
											"key": "nomePai",
											"value": "Pai da Silva"
										},
										{
											"key": "numeroCnh",
											"value": "23143031556"
										},
										{
											"key": "pessoaPoliticamenteExposta",
											"value": "false"
										},
										{
											"key": "usuarioAlteracao",
											"value": "666"
										},
										{
											"key": "flagSemEnderecoComercialFixo",
											"value": "false"
										},
										{
											"key": "dataEmissaoCnh",
											"value": "2020-10-31T01:30:00.000-05:00"
										},
										{
											"key": "numeroDependentes",
											"value": "2"
										},
										{
											"key": "impedidoFinanciamento",
											"value": "false"
										},
										{
											"key": "nomeEmpresa",
											"value": "some company"
										},
										{
											"key": "nomeReferencia1",
											"value": "some nomeReferencia1"
										},
										{
											"key": "enderecoReferencia1",
											"value": "some enderecoReferencia1"
										},
										{
											"key": "nomeReferencia2",
											"value": "some nomeReferencia2"
										},
										{
											"key": "enderecoReferencia2",
											"value": "some enderecoReferencia2"
										},
										{
											"key": "chequeEspecial",
											"value": "0"
										},
										{
											"key": "flagNomePaiNaoInformado",
											"value": "false"
										},
										{
											"key": "salario",
											"value": "2200"
										},
										{
											"key": "patrimonioTotal",
											"value": "100000"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "PIER138 - POST: /api/telefones_inclui_valido(+)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.globals.get(\"idPeople\"));\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
											"     pm.response.to.be.ok;\r",
											"     pm.response.to.be.withBody;\r",
											"     pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"// Obter o valor do campo \"idPessoa\" do response\r",
											"//var idPessoaResponse = pm.response.json().idPessoa;\r",
											"// Obter o valor da variável global \"id_pessoa\"\r",
											"//var idPessoaGlobal = pm.globals.get(\"id_pessoa\");\r",
											"// Verificar se o valor da variável global é igual ao campo \"idPessoa\" do response\r",
											"//pm.test(\"Validar se id_pessoa do response é = var global do request\", function () {\r",
											"   // pm.expect(idPessoaResponse).to.equal(idPessoaGlobal);\r",
											"//});\r",
											"\r",
											"pm.test(\"idTipoTelefone não pode devolver nullo\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    const nomeCampo = responseBody.idTipoTelefone; \r",
											"    pm.expect(nomeCampo).to.not.equal(null);\r",
											"});\r",
											"\r",
											"pm.test(\"idPessoa não pode devolver nullo\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    const nomeCampo = responseBody.idPessoa; \r",
											"    pm.expect(nomeCampo).to.not.equal(null);\r",
											"});\r",
											"\r",
											"pm.test(\"ddd não pode devolver nullo\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    const nomeCampo = responseBody.ddd; \r",
											"    pm.expect(nomeCampo).to.not.equal(null);\r",
											"});\r",
											"\r",
											"pm.test(\"telefone não pode devolver nullo\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    const nomeCampo = responseBody.telefone; \r",
											"    pm.expect(nomeCampo).to.not.equal(null);\r",
											"});\r",
											"\r",
											"pm.test(\"ramal não pode devolver nullo\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    const nomeCampo = responseBody.ramal; \r",
											"    pm.expect(nomeCampo).to.not.equal(null);\r",
											"});\r",
											"\r",
											"pm.test(\"status pode devolver nullo\", function () {\r",
											"    const responseBody = pm.response.json();\r",
											"    const nomeCampo = responseBody.status; \r",
											"    pm.expect(nomeCampo).to.not.equal(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Validar campo telefone como numérico\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var telefone = jsonData.telefone;\r",
											"    pm.expect(/^\\d+$/.test(telefone)).to.be.true;\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//var id_pessoa = 1323;\r",
											"//pm.globals.set(\"idPessoa\", jsonData.idPessoa);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"strictSSL": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://{{integrationURL}}/telefones/api/telefones?idTipoTelefone=18&idPessoa={{idPeople}}&ddd=11&telefone=991882511&ramal=1",
									"protocol": "https",
									"host": [
										"{{integrationURL}}"
									],
									"path": [
										"telefones",
										"api",
										"telefones"
									],
									"query": [
										{
											"key": "idTipoTelefone",
											"value": "18"
										},
										{
											"key": "idPessoa",
											"value": "{{idPeople}}"
										},
										{
											"key": "ddd",
											"value": "11"
										},
										{
											"key": "telefone",
											"value": "991882511"
										},
										{
											"key": "ramal",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "PIER097 - POST: /api/contas",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.globals.set(\"idConta\", jsonData.id);\r",
											"console.log(pm.globals.get(\"idConta\"));\r",
											"console.log(pm.globals.get(\"idPessoa\"));\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"A resposta é valida e deve ter um corpo\", function () {\r",
											"     pm.response.to.be.ok;\r",
											"     pm.response.to.be.withBody;\r",
											"     pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"idPessoa\": 1497,\n    \"id\": 0,\n    \"idProduto\": 12,\n    \"idOrigemComercial\": 99,\n    \"diaVencimento\": 11,\n    \"limiteGlobal\": 500,\n    \"limiteMaximo\": 500,\n    \"limiteParcelas\": 500,\n    \"valorRenda\": 1000,\n    \"valorPontuacao\": 0,\n    \"limiteConsignado\": 0,\n    \"pacoteTarifa\": 1,\n    \"flagCreditoAtivo\": true,\n    \"flagDebitoAtivo\": true,\n    \"flagPLDiferenciado\": true,\n    \"flagOverLimit\": true,\n    \"flagCarteiraDigital\": true,\n    \"flagFaturaPorEmail\": null,\n    \"idStatusConta\": 50,\n    \"canalEntrada\": \"string\",\n    \"funcaoAtiva\": \"CREDITO\",\n    \"matricula\": 0,\n    \"responsavelDigitacao\": \"FABIOAGUIAR\",\n    \"idPromotorVenda\": 55,\n    \"behaviorScore\": 0,\n    \"idEnderecoCorrespondencia\": 1\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{integrationURL}}/contas/api/contas?idPessoa={{idPeople}}",
									"protocol": "https",
									"host": [
										"{{integrationURL}}"
									],
									"path": [
										"contas",
										"api",
										"contas"
									],
									"query": [
										{
											"key": "idPessoa",
											"value": "{{idPeople}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "PIER108 - POST: /api/contas/{id}/pessoas/{id_pessoa}/gerar-cartao",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//para gerar o cartão executar o endpoint:https://{{integrationURL}}/contas/api/contas?idPessoa=1298 e capturar o id gerado no request e passar como argumento neste endpoint. A var \"idConta\" esta armazendo o id gerado no endpoint acima.\r",
											"console.log(pm.globals.get(\"idPessoa\"));\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"idMifare\": 0,\n  \"matriculaMifare\": \"string\",\n  \"idProduto\" : 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{integrationURL}}/contas/api/contas/{{idConta}}/pessoas/{{idPeople}}/gerar-cartao",
									"protocol": "https",
									"host": [
										"{{integrationURL}}"
									],
									"path": [
										"contas",
										"api",
										"contas",
										"{{idConta}}",
										"pessoas",
										"{{idPeople}}",
										"gerar-cartao"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}